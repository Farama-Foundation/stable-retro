case 0x023c:
	{
	 ANDI_CCR();
	}
	break;

case 0x6000:
case 0x6001:
case 0x6002:
case 0x6003:
case 0x6004:
case 0x6005:
case 0x6006:
case 0x6007:
case 0x6008:
case 0x6009:
case 0x600a:
case 0x600b:
case 0x600c:
case 0x600d:
case 0x600e:
case 0x600f:
case 0x6010:
case 0x6011:
case 0x6012:
case 0x6013:
case 0x6014:
case 0x6015:
case 0x6016:
case 0x6017:
case 0x6018:
case 0x6019:
case 0x601a:
case 0x601b:
case 0x601c:
case 0x601d:
case 0x601e:
case 0x601f:
case 0x6020:
case 0x6021:
case 0x6022:
case 0x6023:
case 0x6024:
case 0x6025:
case 0x6026:
case 0x6027:
case 0x6028:
case 0x6029:
case 0x602a:
case 0x602b:
case 0x602c:
case 0x602d:
case 0x602e:
case 0x602f:
case 0x6030:
case 0x6031:
case 0x6032:
case 0x6033:
case 0x6034:
case 0x6035:
case 0x6036:
case 0x6037:
case 0x6038:
case 0x6039:
case 0x603a:
case 0x603b:
case 0x603c:
case 0x603d:
case 0x603e:
case 0x603f:
case 0x6040:
case 0x6041:
case 0x6042:
case 0x6043:
case 0x6044:
case 0x6045:
case 0x6046:
case 0x6047:
case 0x6048:
case 0x6049:
case 0x604a:
case 0x604b:
case 0x604c:
case 0x604d:
case 0x604e:
case 0x604f:
case 0x6050:
case 0x6051:
case 0x6052:
case 0x6053:
case 0x6054:
case 0x6055:
case 0x6056:
case 0x6057:
case 0x6058:
case 0x6059:
case 0x605a:
case 0x605b:
case 0x605c:
case 0x605d:
case 0x605e:
case 0x605f:
case 0x6060:
case 0x6061:
case 0x6062:
case 0x6063:
case 0x6064:
case 0x6065:
case 0x6066:
case 0x6067:
case 0x6068:
case 0x6069:
case 0x606a:
case 0x606b:
case 0x606c:
case 0x606d:
case 0x606e:
case 0x606f:
case 0x6070:
case 0x6071:
case 0x6072:
case 0x6073:
case 0x6074:
case 0x6075:
case 0x6076:
case 0x6077:
case 0x6078:
case 0x6079:
case 0x607a:
case 0x607b:
case 0x607c:
case 0x607d:
case 0x607e:
case 0x607f:
case 0x6080:
case 0x6081:
case 0x6082:
case 0x6083:
case 0x6084:
case 0x6085:
case 0x6086:
case 0x6087:
case 0x6088:
case 0x6089:
case 0x608a:
case 0x608b:
case 0x608c:
case 0x608d:
case 0x608e:
case 0x608f:
case 0x6090:
case 0x6091:
case 0x6092:
case 0x6093:
case 0x6094:
case 0x6095:
case 0x6096:
case 0x6097:
case 0x6098:
case 0x6099:
case 0x609a:
case 0x609b:
case 0x609c:
case 0x609d:
case 0x609e:
case 0x609f:
case 0x60a0:
case 0x60a1:
case 0x60a2:
case 0x60a3:
case 0x60a4:
case 0x60a5:
case 0x60a6:
case 0x60a7:
case 0x60a8:
case 0x60a9:
case 0x60aa:
case 0x60ab:
case 0x60ac:
case 0x60ad:
case 0x60ae:
case 0x60af:
case 0x60b0:
case 0x60b1:
case 0x60b2:
case 0x60b3:
case 0x60b4:
case 0x60b5:
case 0x60b6:
case 0x60b7:
case 0x60b8:
case 0x60b9:
case 0x60ba:
case 0x60bb:
case 0x60bc:
case 0x60bd:
case 0x60be:
case 0x60bf:
case 0x60c0:
case 0x60c1:
case 0x60c2:
case 0x60c3:
case 0x60c4:
case 0x60c5:
case 0x60c6:
case 0x60c7:
case 0x60c8:
case 0x60c9:
case 0x60ca:
case 0x60cb:
case 0x60cc:
case 0x60cd:
case 0x60ce:
case 0x60cf:
case 0x60d0:
case 0x60d1:
case 0x60d2:
case 0x60d3:
case 0x60d4:
case 0x60d5:
case 0x60d6:
case 0x60d7:
case 0x60d8:
case 0x60d9:
case 0x60da:
case 0x60db:
case 0x60dc:
case 0x60dd:
case 0x60de:
case 0x60df:
case 0x60e0:
case 0x60e1:
case 0x60e2:
case 0x60e3:
case 0x60e4:
case 0x60e5:
case 0x60e6:
case 0x60e7:
case 0x60e8:
case 0x60e9:
case 0x60ea:
case 0x60eb:
case 0x60ec:
case 0x60ed:
case 0x60ee:
case 0x60ef:
case 0x60f0:
case 0x60f1:
case 0x60f2:
case 0x60f3:
case 0x60f4:
case 0x60f5:
case 0x60f6:
case 0x60f7:
case 0x60f8:
case 0x60f9:
case 0x60fa:
case 0x60fb:
case 0x60fc:
case 0x60fd:
case 0x60fe:
case 0x60ff:
	{
	 Bxx<0x00>((int8)instr);
	}
	break;

case 0x6100:
case 0x6101:
case 0x6102:
case 0x6103:
case 0x6104:
case 0x6105:
case 0x6106:
case 0x6107:
case 0x6108:
case 0x6109:
case 0x610a:
case 0x610b:
case 0x610c:
case 0x610d:
case 0x610e:
case 0x610f:
case 0x6110:
case 0x6111:
case 0x6112:
case 0x6113:
case 0x6114:
case 0x6115:
case 0x6116:
case 0x6117:
case 0x6118:
case 0x6119:
case 0x611a:
case 0x611b:
case 0x611c:
case 0x611d:
case 0x611e:
case 0x611f:
case 0x6120:
case 0x6121:
case 0x6122:
case 0x6123:
case 0x6124:
case 0x6125:
case 0x6126:
case 0x6127:
case 0x6128:
case 0x6129:
case 0x612a:
case 0x612b:
case 0x612c:
case 0x612d:
case 0x612e:
case 0x612f:
case 0x6130:
case 0x6131:
case 0x6132:
case 0x6133:
case 0x6134:
case 0x6135:
case 0x6136:
case 0x6137:
case 0x6138:
case 0x6139:
case 0x613a:
case 0x613b:
case 0x613c:
case 0x613d:
case 0x613e:
case 0x613f:
case 0x6140:
case 0x6141:
case 0x6142:
case 0x6143:
case 0x6144:
case 0x6145:
case 0x6146:
case 0x6147:
case 0x6148:
case 0x6149:
case 0x614a:
case 0x614b:
case 0x614c:
case 0x614d:
case 0x614e:
case 0x614f:
case 0x6150:
case 0x6151:
case 0x6152:
case 0x6153:
case 0x6154:
case 0x6155:
case 0x6156:
case 0x6157:
case 0x6158:
case 0x6159:
case 0x615a:
case 0x615b:
case 0x615c:
case 0x615d:
case 0x615e:
case 0x615f:
case 0x6160:
case 0x6161:
case 0x6162:
case 0x6163:
case 0x6164:
case 0x6165:
case 0x6166:
case 0x6167:
case 0x6168:
case 0x6169:
case 0x616a:
case 0x616b:
case 0x616c:
case 0x616d:
case 0x616e:
case 0x616f:
case 0x6170:
case 0x6171:
case 0x6172:
case 0x6173:
case 0x6174:
case 0x6175:
case 0x6176:
case 0x6177:
case 0x6178:
case 0x6179:
case 0x617a:
case 0x617b:
case 0x617c:
case 0x617d:
case 0x617e:
case 0x617f:
case 0x6180:
case 0x6181:
case 0x6182:
case 0x6183:
case 0x6184:
case 0x6185:
case 0x6186:
case 0x6187:
case 0x6188:
case 0x6189:
case 0x618a:
case 0x618b:
case 0x618c:
case 0x618d:
case 0x618e:
case 0x618f:
case 0x6190:
case 0x6191:
case 0x6192:
case 0x6193:
case 0x6194:
case 0x6195:
case 0x6196:
case 0x6197:
case 0x6198:
case 0x6199:
case 0x619a:
case 0x619b:
case 0x619c:
case 0x619d:
case 0x619e:
case 0x619f:
case 0x61a0:
case 0x61a1:
case 0x61a2:
case 0x61a3:
case 0x61a4:
case 0x61a5:
case 0x61a6:
case 0x61a7:
case 0x61a8:
case 0x61a9:
case 0x61aa:
case 0x61ab:
case 0x61ac:
case 0x61ad:
case 0x61ae:
case 0x61af:
case 0x61b0:
case 0x61b1:
case 0x61b2:
case 0x61b3:
case 0x61b4:
case 0x61b5:
case 0x61b6:
case 0x61b7:
case 0x61b8:
case 0x61b9:
case 0x61ba:
case 0x61bb:
case 0x61bc:
case 0x61bd:
case 0x61be:
case 0x61bf:
case 0x61c0:
case 0x61c1:
case 0x61c2:
case 0x61c3:
case 0x61c4:
case 0x61c5:
case 0x61c6:
case 0x61c7:
case 0x61c8:
case 0x61c9:
case 0x61ca:
case 0x61cb:
case 0x61cc:
case 0x61cd:
case 0x61ce:
case 0x61cf:
case 0x61d0:
case 0x61d1:
case 0x61d2:
case 0x61d3:
case 0x61d4:
case 0x61d5:
case 0x61d6:
case 0x61d7:
case 0x61d8:
case 0x61d9:
case 0x61da:
case 0x61db:
case 0x61dc:
case 0x61dd:
case 0x61de:
case 0x61df:
case 0x61e0:
case 0x61e1:
case 0x61e2:
case 0x61e3:
case 0x61e4:
case 0x61e5:
case 0x61e6:
case 0x61e7:
case 0x61e8:
case 0x61e9:
case 0x61ea:
case 0x61eb:
case 0x61ec:
case 0x61ed:
case 0x61ee:
case 0x61ef:
case 0x61f0:
case 0x61f1:
case 0x61f2:
case 0x61f3:
case 0x61f4:
case 0x61f5:
case 0x61f6:
case 0x61f7:
case 0x61f8:
case 0x61f9:
case 0x61fa:
case 0x61fb:
case 0x61fc:
case 0x61fd:
case 0x61fe:
case 0x61ff:
	{
	 Bxx<0x01>((int8)instr);
	}
	break;

case 0x6200:
case 0x6201:
case 0x6202:
case 0x6203:
case 0x6204:
case 0x6205:
case 0x6206:
case 0x6207:
case 0x6208:
case 0x6209:
case 0x620a:
case 0x620b:
case 0x620c:
case 0x620d:
case 0x620e:
case 0x620f:
case 0x6210:
case 0x6211:
case 0x6212:
case 0x6213:
case 0x6214:
case 0x6215:
case 0x6216:
case 0x6217:
case 0x6218:
case 0x6219:
case 0x621a:
case 0x621b:
case 0x621c:
case 0x621d:
case 0x621e:
case 0x621f:
case 0x6220:
case 0x6221:
case 0x6222:
case 0x6223:
case 0x6224:
case 0x6225:
case 0x6226:
case 0x6227:
case 0x6228:
case 0x6229:
case 0x622a:
case 0x622b:
case 0x622c:
case 0x622d:
case 0x622e:
case 0x622f:
case 0x6230:
case 0x6231:
case 0x6232:
case 0x6233:
case 0x6234:
case 0x6235:
case 0x6236:
case 0x6237:
case 0x6238:
case 0x6239:
case 0x623a:
case 0x623b:
case 0x623c:
case 0x623d:
case 0x623e:
case 0x623f:
case 0x6240:
case 0x6241:
case 0x6242:
case 0x6243:
case 0x6244:
case 0x6245:
case 0x6246:
case 0x6247:
case 0x6248:
case 0x6249:
case 0x624a:
case 0x624b:
case 0x624c:
case 0x624d:
case 0x624e:
case 0x624f:
case 0x6250:
case 0x6251:
case 0x6252:
case 0x6253:
case 0x6254:
case 0x6255:
case 0x6256:
case 0x6257:
case 0x6258:
case 0x6259:
case 0x625a:
case 0x625b:
case 0x625c:
case 0x625d:
case 0x625e:
case 0x625f:
case 0x6260:
case 0x6261:
case 0x6262:
case 0x6263:
case 0x6264:
case 0x6265:
case 0x6266:
case 0x6267:
case 0x6268:
case 0x6269:
case 0x626a:
case 0x626b:
case 0x626c:
case 0x626d:
case 0x626e:
case 0x626f:
case 0x6270:
case 0x6271:
case 0x6272:
case 0x6273:
case 0x6274:
case 0x6275:
case 0x6276:
case 0x6277:
case 0x6278:
case 0x6279:
case 0x627a:
case 0x627b:
case 0x627c:
case 0x627d:
case 0x627e:
case 0x627f:
case 0x6280:
case 0x6281:
case 0x6282:
case 0x6283:
case 0x6284:
case 0x6285:
case 0x6286:
case 0x6287:
case 0x6288:
case 0x6289:
case 0x628a:
case 0x628b:
case 0x628c:
case 0x628d:
case 0x628e:
case 0x628f:
case 0x6290:
case 0x6291:
case 0x6292:
case 0x6293:
case 0x6294:
case 0x6295:
case 0x6296:
case 0x6297:
case 0x6298:
case 0x6299:
case 0x629a:
case 0x629b:
case 0x629c:
case 0x629d:
case 0x629e:
case 0x629f:
case 0x62a0:
case 0x62a1:
case 0x62a2:
case 0x62a3:
case 0x62a4:
case 0x62a5:
case 0x62a6:
case 0x62a7:
case 0x62a8:
case 0x62a9:
case 0x62aa:
case 0x62ab:
case 0x62ac:
case 0x62ad:
case 0x62ae:
case 0x62af:
case 0x62b0:
case 0x62b1:
case 0x62b2:
case 0x62b3:
case 0x62b4:
case 0x62b5:
case 0x62b6:
case 0x62b7:
case 0x62b8:
case 0x62b9:
case 0x62ba:
case 0x62bb:
case 0x62bc:
case 0x62bd:
case 0x62be:
case 0x62bf:
case 0x62c0:
case 0x62c1:
case 0x62c2:
case 0x62c3:
case 0x62c4:
case 0x62c5:
case 0x62c6:
case 0x62c7:
case 0x62c8:
case 0x62c9:
case 0x62ca:
case 0x62cb:
case 0x62cc:
case 0x62cd:
case 0x62ce:
case 0x62cf:
case 0x62d0:
case 0x62d1:
case 0x62d2:
case 0x62d3:
case 0x62d4:
case 0x62d5:
case 0x62d6:
case 0x62d7:
case 0x62d8:
case 0x62d9:
case 0x62da:
case 0x62db:
case 0x62dc:
case 0x62dd:
case 0x62de:
case 0x62df:
case 0x62e0:
case 0x62e1:
case 0x62e2:
case 0x62e3:
case 0x62e4:
case 0x62e5:
case 0x62e6:
case 0x62e7:
case 0x62e8:
case 0x62e9:
case 0x62ea:
case 0x62eb:
case 0x62ec:
case 0x62ed:
case 0x62ee:
case 0x62ef:
case 0x62f0:
case 0x62f1:
case 0x62f2:
case 0x62f3:
case 0x62f4:
case 0x62f5:
case 0x62f6:
case 0x62f7:
case 0x62f8:
case 0x62f9:
case 0x62fa:
case 0x62fb:
case 0x62fc:
case 0x62fd:
case 0x62fe:
case 0x62ff:
	{
	 Bxx<0x02>((int8)instr);
	}
	break;

case 0x6300:
case 0x6301:
case 0x6302:
case 0x6303:
case 0x6304:
case 0x6305:
case 0x6306:
case 0x6307:
case 0x6308:
case 0x6309:
case 0x630a:
case 0x630b:
case 0x630c:
case 0x630d:
case 0x630e:
case 0x630f:
case 0x6310:
case 0x6311:
case 0x6312:
case 0x6313:
case 0x6314:
case 0x6315:
case 0x6316:
case 0x6317:
case 0x6318:
case 0x6319:
case 0x631a:
case 0x631b:
case 0x631c:
case 0x631d:
case 0x631e:
case 0x631f:
case 0x6320:
case 0x6321:
case 0x6322:
case 0x6323:
case 0x6324:
case 0x6325:
case 0x6326:
case 0x6327:
case 0x6328:
case 0x6329:
case 0x632a:
case 0x632b:
case 0x632c:
case 0x632d:
case 0x632e:
case 0x632f:
case 0x6330:
case 0x6331:
case 0x6332:
case 0x6333:
case 0x6334:
case 0x6335:
case 0x6336:
case 0x6337:
case 0x6338:
case 0x6339:
case 0x633a:
case 0x633b:
case 0x633c:
case 0x633d:
case 0x633e:
case 0x633f:
case 0x6340:
case 0x6341:
case 0x6342:
case 0x6343:
case 0x6344:
case 0x6345:
case 0x6346:
case 0x6347:
case 0x6348:
case 0x6349:
case 0x634a:
case 0x634b:
case 0x634c:
case 0x634d:
case 0x634e:
case 0x634f:
case 0x6350:
case 0x6351:
case 0x6352:
case 0x6353:
case 0x6354:
case 0x6355:
case 0x6356:
case 0x6357:
case 0x6358:
case 0x6359:
case 0x635a:
case 0x635b:
case 0x635c:
case 0x635d:
case 0x635e:
case 0x635f:
case 0x6360:
case 0x6361:
case 0x6362:
case 0x6363:
case 0x6364:
case 0x6365:
case 0x6366:
case 0x6367:
case 0x6368:
case 0x6369:
case 0x636a:
case 0x636b:
case 0x636c:
case 0x636d:
case 0x636e:
case 0x636f:
case 0x6370:
case 0x6371:
case 0x6372:
case 0x6373:
case 0x6374:
case 0x6375:
case 0x6376:
case 0x6377:
case 0x6378:
case 0x6379:
case 0x637a:
case 0x637b:
case 0x637c:
case 0x637d:
case 0x637e:
case 0x637f:
case 0x6380:
case 0x6381:
case 0x6382:
case 0x6383:
case 0x6384:
case 0x6385:
case 0x6386:
case 0x6387:
case 0x6388:
case 0x6389:
case 0x638a:
case 0x638b:
case 0x638c:
case 0x638d:
case 0x638e:
case 0x638f:
case 0x6390:
case 0x6391:
case 0x6392:
case 0x6393:
case 0x6394:
case 0x6395:
case 0x6396:
case 0x6397:
case 0x6398:
case 0x6399:
case 0x639a:
case 0x639b:
case 0x639c:
case 0x639d:
case 0x639e:
case 0x639f:
case 0x63a0:
case 0x63a1:
case 0x63a2:
case 0x63a3:
case 0x63a4:
case 0x63a5:
case 0x63a6:
case 0x63a7:
case 0x63a8:
case 0x63a9:
case 0x63aa:
case 0x63ab:
case 0x63ac:
case 0x63ad:
case 0x63ae:
case 0x63af:
case 0x63b0:
case 0x63b1:
case 0x63b2:
case 0x63b3:
case 0x63b4:
case 0x63b5:
case 0x63b6:
case 0x63b7:
case 0x63b8:
case 0x63b9:
case 0x63ba:
case 0x63bb:
case 0x63bc:
case 0x63bd:
case 0x63be:
case 0x63bf:
case 0x63c0:
case 0x63c1:
case 0x63c2:
case 0x63c3:
case 0x63c4:
case 0x63c5:
case 0x63c6:
case 0x63c7:
case 0x63c8:
case 0x63c9:
case 0x63ca:
case 0x63cb:
case 0x63cc:
case 0x63cd:
case 0x63ce:
case 0x63cf:
case 0x63d0:
case 0x63d1:
case 0x63d2:
case 0x63d3:
case 0x63d4:
case 0x63d5:
case 0x63d6:
case 0x63d7:
case 0x63d8:
case 0x63d9:
case 0x63da:
case 0x63db:
case 0x63dc:
case 0x63dd:
case 0x63de:
case 0x63df:
case 0x63e0:
case 0x63e1:
case 0x63e2:
case 0x63e3:
case 0x63e4:
case 0x63e5:
case 0x63e6:
case 0x63e7:
case 0x63e8:
case 0x63e9:
case 0x63ea:
case 0x63eb:
case 0x63ec:
case 0x63ed:
case 0x63ee:
case 0x63ef:
case 0x63f0:
case 0x63f1:
case 0x63f2:
case 0x63f3:
case 0x63f4:
case 0x63f5:
case 0x63f6:
case 0x63f7:
case 0x63f8:
case 0x63f9:
case 0x63fa:
case 0x63fb:
case 0x63fc:
case 0x63fd:
case 0x63fe:
case 0x63ff:
	{
	 Bxx<0x03>((int8)instr);
	}
	break;

case 0x6400:
case 0x6401:
case 0x6402:
case 0x6403:
case 0x6404:
case 0x6405:
case 0x6406:
case 0x6407:
case 0x6408:
case 0x6409:
case 0x640a:
case 0x640b:
case 0x640c:
case 0x640d:
case 0x640e:
case 0x640f:
case 0x6410:
case 0x6411:
case 0x6412:
case 0x6413:
case 0x6414:
case 0x6415:
case 0x6416:
case 0x6417:
case 0x6418:
case 0x6419:
case 0x641a:
case 0x641b:
case 0x641c:
case 0x641d:
case 0x641e:
case 0x641f:
case 0x6420:
case 0x6421:
case 0x6422:
case 0x6423:
case 0x6424:
case 0x6425:
case 0x6426:
case 0x6427:
case 0x6428:
case 0x6429:
case 0x642a:
case 0x642b:
case 0x642c:
case 0x642d:
case 0x642e:
case 0x642f:
case 0x6430:
case 0x6431:
case 0x6432:
case 0x6433:
case 0x6434:
case 0x6435:
case 0x6436:
case 0x6437:
case 0x6438:
case 0x6439:
case 0x643a:
case 0x643b:
case 0x643c:
case 0x643d:
case 0x643e:
case 0x643f:
case 0x6440:
case 0x6441:
case 0x6442:
case 0x6443:
case 0x6444:
case 0x6445:
case 0x6446:
case 0x6447:
case 0x6448:
case 0x6449:
case 0x644a:
case 0x644b:
case 0x644c:
case 0x644d:
case 0x644e:
case 0x644f:
case 0x6450:
case 0x6451:
case 0x6452:
case 0x6453:
case 0x6454:
case 0x6455:
case 0x6456:
case 0x6457:
case 0x6458:
case 0x6459:
case 0x645a:
case 0x645b:
case 0x645c:
case 0x645d:
case 0x645e:
case 0x645f:
case 0x6460:
case 0x6461:
case 0x6462:
case 0x6463:
case 0x6464:
case 0x6465:
case 0x6466:
case 0x6467:
case 0x6468:
case 0x6469:
case 0x646a:
case 0x646b:
case 0x646c:
case 0x646d:
case 0x646e:
case 0x646f:
case 0x6470:
case 0x6471:
case 0x6472:
case 0x6473:
case 0x6474:
case 0x6475:
case 0x6476:
case 0x6477:
case 0x6478:
case 0x6479:
case 0x647a:
case 0x647b:
case 0x647c:
case 0x647d:
case 0x647e:
case 0x647f:
case 0x6480:
case 0x6481:
case 0x6482:
case 0x6483:
case 0x6484:
case 0x6485:
case 0x6486:
case 0x6487:
case 0x6488:
case 0x6489:
case 0x648a:
case 0x648b:
case 0x648c:
case 0x648d:
case 0x648e:
case 0x648f:
case 0x6490:
case 0x6491:
case 0x6492:
case 0x6493:
case 0x6494:
case 0x6495:
case 0x6496:
case 0x6497:
case 0x6498:
case 0x6499:
case 0x649a:
case 0x649b:
case 0x649c:
case 0x649d:
case 0x649e:
case 0x649f:
case 0x64a0:
case 0x64a1:
case 0x64a2:
case 0x64a3:
case 0x64a4:
case 0x64a5:
case 0x64a6:
case 0x64a7:
case 0x64a8:
case 0x64a9:
case 0x64aa:
case 0x64ab:
case 0x64ac:
case 0x64ad:
case 0x64ae:
case 0x64af:
case 0x64b0:
case 0x64b1:
case 0x64b2:
case 0x64b3:
case 0x64b4:
case 0x64b5:
case 0x64b6:
case 0x64b7:
case 0x64b8:
case 0x64b9:
case 0x64ba:
case 0x64bb:
case 0x64bc:
case 0x64bd:
case 0x64be:
case 0x64bf:
case 0x64c0:
case 0x64c1:
case 0x64c2:
case 0x64c3:
case 0x64c4:
case 0x64c5:
case 0x64c6:
case 0x64c7:
case 0x64c8:
case 0x64c9:
case 0x64ca:
case 0x64cb:
case 0x64cc:
case 0x64cd:
case 0x64ce:
case 0x64cf:
case 0x64d0:
case 0x64d1:
case 0x64d2:
case 0x64d3:
case 0x64d4:
case 0x64d5:
case 0x64d6:
case 0x64d7:
case 0x64d8:
case 0x64d9:
case 0x64da:
case 0x64db:
case 0x64dc:
case 0x64dd:
case 0x64de:
case 0x64df:
case 0x64e0:
case 0x64e1:
case 0x64e2:
case 0x64e3:
case 0x64e4:
case 0x64e5:
case 0x64e6:
case 0x64e7:
case 0x64e8:
case 0x64e9:
case 0x64ea:
case 0x64eb:
case 0x64ec:
case 0x64ed:
case 0x64ee:
case 0x64ef:
case 0x64f0:
case 0x64f1:
case 0x64f2:
case 0x64f3:
case 0x64f4:
case 0x64f5:
case 0x64f6:
case 0x64f7:
case 0x64f8:
case 0x64f9:
case 0x64fa:
case 0x64fb:
case 0x64fc:
case 0x64fd:
case 0x64fe:
case 0x64ff:
	{
	 Bxx<0x04>((int8)instr);
	}
	break;

case 0x6500:
case 0x6501:
case 0x6502:
case 0x6503:
case 0x6504:
case 0x6505:
case 0x6506:
case 0x6507:
case 0x6508:
case 0x6509:
case 0x650a:
case 0x650b:
case 0x650c:
case 0x650d:
case 0x650e:
case 0x650f:
case 0x6510:
case 0x6511:
case 0x6512:
case 0x6513:
case 0x6514:
case 0x6515:
case 0x6516:
case 0x6517:
case 0x6518:
case 0x6519:
case 0x651a:
case 0x651b:
case 0x651c:
case 0x651d:
case 0x651e:
case 0x651f:
case 0x6520:
case 0x6521:
case 0x6522:
case 0x6523:
case 0x6524:
case 0x6525:
case 0x6526:
case 0x6527:
case 0x6528:
case 0x6529:
case 0x652a:
case 0x652b:
case 0x652c:
case 0x652d:
case 0x652e:
case 0x652f:
case 0x6530:
case 0x6531:
case 0x6532:
case 0x6533:
case 0x6534:
case 0x6535:
case 0x6536:
case 0x6537:
case 0x6538:
case 0x6539:
case 0x653a:
case 0x653b:
case 0x653c:
case 0x653d:
case 0x653e:
case 0x653f:
case 0x6540:
case 0x6541:
case 0x6542:
case 0x6543:
case 0x6544:
case 0x6545:
case 0x6546:
case 0x6547:
case 0x6548:
case 0x6549:
case 0x654a:
case 0x654b:
case 0x654c:
case 0x654d:
case 0x654e:
case 0x654f:
case 0x6550:
case 0x6551:
case 0x6552:
case 0x6553:
case 0x6554:
case 0x6555:
case 0x6556:
case 0x6557:
case 0x6558:
case 0x6559:
case 0x655a:
case 0x655b:
case 0x655c:
case 0x655d:
case 0x655e:
case 0x655f:
case 0x6560:
case 0x6561:
case 0x6562:
case 0x6563:
case 0x6564:
case 0x6565:
case 0x6566:
case 0x6567:
case 0x6568:
case 0x6569:
case 0x656a:
case 0x656b:
case 0x656c:
case 0x656d:
case 0x656e:
case 0x656f:
case 0x6570:
case 0x6571:
case 0x6572:
case 0x6573:
case 0x6574:
case 0x6575:
case 0x6576:
case 0x6577:
case 0x6578:
case 0x6579:
case 0x657a:
case 0x657b:
case 0x657c:
case 0x657d:
case 0x657e:
case 0x657f:
case 0x6580:
case 0x6581:
case 0x6582:
case 0x6583:
case 0x6584:
case 0x6585:
case 0x6586:
case 0x6587:
case 0x6588:
case 0x6589:
case 0x658a:
case 0x658b:
case 0x658c:
case 0x658d:
case 0x658e:
case 0x658f:
case 0x6590:
case 0x6591:
case 0x6592:
case 0x6593:
case 0x6594:
case 0x6595:
case 0x6596:
case 0x6597:
case 0x6598:
case 0x6599:
case 0x659a:
case 0x659b:
case 0x659c:
case 0x659d:
case 0x659e:
case 0x659f:
case 0x65a0:
case 0x65a1:
case 0x65a2:
case 0x65a3:
case 0x65a4:
case 0x65a5:
case 0x65a6:
case 0x65a7:
case 0x65a8:
case 0x65a9:
case 0x65aa:
case 0x65ab:
case 0x65ac:
case 0x65ad:
case 0x65ae:
case 0x65af:
case 0x65b0:
case 0x65b1:
case 0x65b2:
case 0x65b3:
case 0x65b4:
case 0x65b5:
case 0x65b6:
case 0x65b7:
case 0x65b8:
case 0x65b9:
case 0x65ba:
case 0x65bb:
case 0x65bc:
case 0x65bd:
case 0x65be:
case 0x65bf:
case 0x65c0:
case 0x65c1:
case 0x65c2:
case 0x65c3:
case 0x65c4:
case 0x65c5:
case 0x65c6:
case 0x65c7:
case 0x65c8:
case 0x65c9:
case 0x65ca:
case 0x65cb:
case 0x65cc:
case 0x65cd:
case 0x65ce:
case 0x65cf:
case 0x65d0:
case 0x65d1:
case 0x65d2:
case 0x65d3:
case 0x65d4:
case 0x65d5:
case 0x65d6:
case 0x65d7:
case 0x65d8:
case 0x65d9:
case 0x65da:
case 0x65db:
case 0x65dc:
case 0x65dd:
case 0x65de:
case 0x65df:
case 0x65e0:
case 0x65e1:
case 0x65e2:
case 0x65e3:
case 0x65e4:
case 0x65e5:
case 0x65e6:
case 0x65e7:
case 0x65e8:
case 0x65e9:
case 0x65ea:
case 0x65eb:
case 0x65ec:
case 0x65ed:
case 0x65ee:
case 0x65ef:
case 0x65f0:
case 0x65f1:
case 0x65f2:
case 0x65f3:
case 0x65f4:
case 0x65f5:
case 0x65f6:
case 0x65f7:
case 0x65f8:
case 0x65f9:
case 0x65fa:
case 0x65fb:
case 0x65fc:
case 0x65fd:
case 0x65fe:
case 0x65ff:
	{
	 Bxx<0x05>((int8)instr);
	}
	break;

case 0x6600:
case 0x6601:
case 0x6602:
case 0x6603:
case 0x6604:
case 0x6605:
case 0x6606:
case 0x6607:
case 0x6608:
case 0x6609:
case 0x660a:
case 0x660b:
case 0x660c:
case 0x660d:
case 0x660e:
case 0x660f:
case 0x6610:
case 0x6611:
case 0x6612:
case 0x6613:
case 0x6614:
case 0x6615:
case 0x6616:
case 0x6617:
case 0x6618:
case 0x6619:
case 0x661a:
case 0x661b:
case 0x661c:
case 0x661d:
case 0x661e:
case 0x661f:
case 0x6620:
case 0x6621:
case 0x6622:
case 0x6623:
case 0x6624:
case 0x6625:
case 0x6626:
case 0x6627:
case 0x6628:
case 0x6629:
case 0x662a:
case 0x662b:
case 0x662c:
case 0x662d:
case 0x662e:
case 0x662f:
case 0x6630:
case 0x6631:
case 0x6632:
case 0x6633:
case 0x6634:
case 0x6635:
case 0x6636:
case 0x6637:
case 0x6638:
case 0x6639:
case 0x663a:
case 0x663b:
case 0x663c:
case 0x663d:
case 0x663e:
case 0x663f:
case 0x6640:
case 0x6641:
case 0x6642:
case 0x6643:
case 0x6644:
case 0x6645:
case 0x6646:
case 0x6647:
case 0x6648:
case 0x6649:
case 0x664a:
case 0x664b:
case 0x664c:
case 0x664d:
case 0x664e:
case 0x664f:
case 0x6650:
case 0x6651:
case 0x6652:
case 0x6653:
case 0x6654:
case 0x6655:
case 0x6656:
case 0x6657:
case 0x6658:
case 0x6659:
case 0x665a:
case 0x665b:
case 0x665c:
case 0x665d:
case 0x665e:
case 0x665f:
case 0x6660:
case 0x6661:
case 0x6662:
case 0x6663:
case 0x6664:
case 0x6665:
case 0x6666:
case 0x6667:
case 0x6668:
case 0x6669:
case 0x666a:
case 0x666b:
case 0x666c:
case 0x666d:
case 0x666e:
case 0x666f:
case 0x6670:
case 0x6671:
case 0x6672:
case 0x6673:
case 0x6674:
case 0x6675:
case 0x6676:
case 0x6677:
case 0x6678:
case 0x6679:
case 0x667a:
case 0x667b:
case 0x667c:
case 0x667d:
case 0x667e:
case 0x667f:
case 0x6680:
case 0x6681:
case 0x6682:
case 0x6683:
case 0x6684:
case 0x6685:
case 0x6686:
case 0x6687:
case 0x6688:
case 0x6689:
case 0x668a:
case 0x668b:
case 0x668c:
case 0x668d:
case 0x668e:
case 0x668f:
case 0x6690:
case 0x6691:
case 0x6692:
case 0x6693:
case 0x6694:
case 0x6695:
case 0x6696:
case 0x6697:
case 0x6698:
case 0x6699:
case 0x669a:
case 0x669b:
case 0x669c:
case 0x669d:
case 0x669e:
case 0x669f:
case 0x66a0:
case 0x66a1:
case 0x66a2:
case 0x66a3:
case 0x66a4:
case 0x66a5:
case 0x66a6:
case 0x66a7:
case 0x66a8:
case 0x66a9:
case 0x66aa:
case 0x66ab:
case 0x66ac:
case 0x66ad:
case 0x66ae:
case 0x66af:
case 0x66b0:
case 0x66b1:
case 0x66b2:
case 0x66b3:
case 0x66b4:
case 0x66b5:
case 0x66b6:
case 0x66b7:
case 0x66b8:
case 0x66b9:
case 0x66ba:
case 0x66bb:
case 0x66bc:
case 0x66bd:
case 0x66be:
case 0x66bf:
case 0x66c0:
case 0x66c1:
case 0x66c2:
case 0x66c3:
case 0x66c4:
case 0x66c5:
case 0x66c6:
case 0x66c7:
case 0x66c8:
case 0x66c9:
case 0x66ca:
case 0x66cb:
case 0x66cc:
case 0x66cd:
case 0x66ce:
case 0x66cf:
case 0x66d0:
case 0x66d1:
case 0x66d2:
case 0x66d3:
case 0x66d4:
case 0x66d5:
case 0x66d6:
case 0x66d7:
case 0x66d8:
case 0x66d9:
case 0x66da:
case 0x66db:
case 0x66dc:
case 0x66dd:
case 0x66de:
case 0x66df:
case 0x66e0:
case 0x66e1:
case 0x66e2:
case 0x66e3:
case 0x66e4:
case 0x66e5:
case 0x66e6:
case 0x66e7:
case 0x66e8:
case 0x66e9:
case 0x66ea:
case 0x66eb:
case 0x66ec:
case 0x66ed:
case 0x66ee:
case 0x66ef:
case 0x66f0:
case 0x66f1:
case 0x66f2:
case 0x66f3:
case 0x66f4:
case 0x66f5:
case 0x66f6:
case 0x66f7:
case 0x66f8:
case 0x66f9:
case 0x66fa:
case 0x66fb:
case 0x66fc:
case 0x66fd:
case 0x66fe:
case 0x66ff:
	{
	 Bxx<0x06>((int8)instr);
	}
	break;

case 0x6700:
case 0x6701:
case 0x6702:
case 0x6703:
case 0x6704:
case 0x6705:
case 0x6706:
case 0x6707:
case 0x6708:
case 0x6709:
case 0x670a:
case 0x670b:
case 0x670c:
case 0x670d:
case 0x670e:
case 0x670f:
case 0x6710:
case 0x6711:
case 0x6712:
case 0x6713:
case 0x6714:
case 0x6715:
case 0x6716:
case 0x6717:
case 0x6718:
case 0x6719:
case 0x671a:
case 0x671b:
case 0x671c:
case 0x671d:
case 0x671e:
case 0x671f:
case 0x6720:
case 0x6721:
case 0x6722:
case 0x6723:
case 0x6724:
case 0x6725:
case 0x6726:
case 0x6727:
case 0x6728:
case 0x6729:
case 0x672a:
case 0x672b:
case 0x672c:
case 0x672d:
case 0x672e:
case 0x672f:
case 0x6730:
case 0x6731:
case 0x6732:
case 0x6733:
case 0x6734:
case 0x6735:
case 0x6736:
case 0x6737:
case 0x6738:
case 0x6739:
case 0x673a:
case 0x673b:
case 0x673c:
case 0x673d:
case 0x673e:
case 0x673f:
case 0x6740:
case 0x6741:
case 0x6742:
case 0x6743:
case 0x6744:
case 0x6745:
case 0x6746:
case 0x6747:
case 0x6748:
case 0x6749:
case 0x674a:
case 0x674b:
case 0x674c:
case 0x674d:
case 0x674e:
case 0x674f:
case 0x6750:
case 0x6751:
case 0x6752:
case 0x6753:
case 0x6754:
case 0x6755:
case 0x6756:
case 0x6757:
case 0x6758:
case 0x6759:
case 0x675a:
case 0x675b:
case 0x675c:
case 0x675d:
case 0x675e:
case 0x675f:
case 0x6760:
case 0x6761:
case 0x6762:
case 0x6763:
case 0x6764:
case 0x6765:
case 0x6766:
case 0x6767:
case 0x6768:
case 0x6769:
case 0x676a:
case 0x676b:
case 0x676c:
case 0x676d:
case 0x676e:
case 0x676f:
case 0x6770:
case 0x6771:
case 0x6772:
case 0x6773:
case 0x6774:
case 0x6775:
case 0x6776:
case 0x6777:
case 0x6778:
case 0x6779:
case 0x677a:
case 0x677b:
case 0x677c:
case 0x677d:
case 0x677e:
case 0x677f:
case 0x6780:
case 0x6781:
case 0x6782:
case 0x6783:
case 0x6784:
case 0x6785:
case 0x6786:
case 0x6787:
case 0x6788:
case 0x6789:
case 0x678a:
case 0x678b:
case 0x678c:
case 0x678d:
case 0x678e:
case 0x678f:
case 0x6790:
case 0x6791:
case 0x6792:
case 0x6793:
case 0x6794:
case 0x6795:
case 0x6796:
case 0x6797:
case 0x6798:
case 0x6799:
case 0x679a:
case 0x679b:
case 0x679c:
case 0x679d:
case 0x679e:
case 0x679f:
case 0x67a0:
case 0x67a1:
case 0x67a2:
case 0x67a3:
case 0x67a4:
case 0x67a5:
case 0x67a6:
case 0x67a7:
case 0x67a8:
case 0x67a9:
case 0x67aa:
case 0x67ab:
case 0x67ac:
case 0x67ad:
case 0x67ae:
case 0x67af:
case 0x67b0:
case 0x67b1:
case 0x67b2:
case 0x67b3:
case 0x67b4:
case 0x67b5:
case 0x67b6:
case 0x67b7:
case 0x67b8:
case 0x67b9:
case 0x67ba:
case 0x67bb:
case 0x67bc:
case 0x67bd:
case 0x67be:
case 0x67bf:
case 0x67c0:
case 0x67c1:
case 0x67c2:
case 0x67c3:
case 0x67c4:
case 0x67c5:
case 0x67c6:
case 0x67c7:
case 0x67c8:
case 0x67c9:
case 0x67ca:
case 0x67cb:
case 0x67cc:
case 0x67cd:
case 0x67ce:
case 0x67cf:
case 0x67d0:
case 0x67d1:
case 0x67d2:
case 0x67d3:
case 0x67d4:
case 0x67d5:
case 0x67d6:
case 0x67d7:
case 0x67d8:
case 0x67d9:
case 0x67da:
case 0x67db:
case 0x67dc:
case 0x67dd:
case 0x67de:
case 0x67df:
case 0x67e0:
case 0x67e1:
case 0x67e2:
case 0x67e3:
case 0x67e4:
case 0x67e5:
case 0x67e6:
case 0x67e7:
case 0x67e8:
case 0x67e9:
case 0x67ea:
case 0x67eb:
case 0x67ec:
case 0x67ed:
case 0x67ee:
case 0x67ef:
case 0x67f0:
case 0x67f1:
case 0x67f2:
case 0x67f3:
case 0x67f4:
case 0x67f5:
case 0x67f6:
case 0x67f7:
case 0x67f8:
case 0x67f9:
case 0x67fa:
case 0x67fb:
case 0x67fc:
case 0x67fd:
case 0x67fe:
case 0x67ff:
	{
	 Bxx<0x07>((int8)instr);
	}
	break;

case 0x6800:
case 0x6801:
case 0x6802:
case 0x6803:
case 0x6804:
case 0x6805:
case 0x6806:
case 0x6807:
case 0x6808:
case 0x6809:
case 0x680a:
case 0x680b:
case 0x680c:
case 0x680d:
case 0x680e:
case 0x680f:
case 0x6810:
case 0x6811:
case 0x6812:
case 0x6813:
case 0x6814:
case 0x6815:
case 0x6816:
case 0x6817:
case 0x6818:
case 0x6819:
case 0x681a:
case 0x681b:
case 0x681c:
case 0x681d:
case 0x681e:
case 0x681f:
case 0x6820:
case 0x6821:
case 0x6822:
case 0x6823:
case 0x6824:
case 0x6825:
case 0x6826:
case 0x6827:
case 0x6828:
case 0x6829:
case 0x682a:
case 0x682b:
case 0x682c:
case 0x682d:
case 0x682e:
case 0x682f:
case 0x6830:
case 0x6831:
case 0x6832:
case 0x6833:
case 0x6834:
case 0x6835:
case 0x6836:
case 0x6837:
case 0x6838:
case 0x6839:
case 0x683a:
case 0x683b:
case 0x683c:
case 0x683d:
case 0x683e:
case 0x683f:
case 0x6840:
case 0x6841:
case 0x6842:
case 0x6843:
case 0x6844:
case 0x6845:
case 0x6846:
case 0x6847:
case 0x6848:
case 0x6849:
case 0x684a:
case 0x684b:
case 0x684c:
case 0x684d:
case 0x684e:
case 0x684f:
case 0x6850:
case 0x6851:
case 0x6852:
case 0x6853:
case 0x6854:
case 0x6855:
case 0x6856:
case 0x6857:
case 0x6858:
case 0x6859:
case 0x685a:
case 0x685b:
case 0x685c:
case 0x685d:
case 0x685e:
case 0x685f:
case 0x6860:
case 0x6861:
case 0x6862:
case 0x6863:
case 0x6864:
case 0x6865:
case 0x6866:
case 0x6867:
case 0x6868:
case 0x6869:
case 0x686a:
case 0x686b:
case 0x686c:
case 0x686d:
case 0x686e:
case 0x686f:
case 0x6870:
case 0x6871:
case 0x6872:
case 0x6873:
case 0x6874:
case 0x6875:
case 0x6876:
case 0x6877:
case 0x6878:
case 0x6879:
case 0x687a:
case 0x687b:
case 0x687c:
case 0x687d:
case 0x687e:
case 0x687f:
case 0x6880:
case 0x6881:
case 0x6882:
case 0x6883:
case 0x6884:
case 0x6885:
case 0x6886:
case 0x6887:
case 0x6888:
case 0x6889:
case 0x688a:
case 0x688b:
case 0x688c:
case 0x688d:
case 0x688e:
case 0x688f:
case 0x6890:
case 0x6891:
case 0x6892:
case 0x6893:
case 0x6894:
case 0x6895:
case 0x6896:
case 0x6897:
case 0x6898:
case 0x6899:
case 0x689a:
case 0x689b:
case 0x689c:
case 0x689d:
case 0x689e:
case 0x689f:
case 0x68a0:
case 0x68a1:
case 0x68a2:
case 0x68a3:
case 0x68a4:
case 0x68a5:
case 0x68a6:
case 0x68a7:
case 0x68a8:
case 0x68a9:
case 0x68aa:
case 0x68ab:
case 0x68ac:
case 0x68ad:
case 0x68ae:
case 0x68af:
case 0x68b0:
case 0x68b1:
case 0x68b2:
case 0x68b3:
case 0x68b4:
case 0x68b5:
case 0x68b6:
case 0x68b7:
case 0x68b8:
case 0x68b9:
case 0x68ba:
case 0x68bb:
case 0x68bc:
case 0x68bd:
case 0x68be:
case 0x68bf:
case 0x68c0:
case 0x68c1:
case 0x68c2:
case 0x68c3:
case 0x68c4:
case 0x68c5:
case 0x68c6:
case 0x68c7:
case 0x68c8:
case 0x68c9:
case 0x68ca:
case 0x68cb:
case 0x68cc:
case 0x68cd:
case 0x68ce:
case 0x68cf:
case 0x68d0:
case 0x68d1:
case 0x68d2:
case 0x68d3:
case 0x68d4:
case 0x68d5:
case 0x68d6:
case 0x68d7:
case 0x68d8:
case 0x68d9:
case 0x68da:
case 0x68db:
case 0x68dc:
case 0x68dd:
case 0x68de:
case 0x68df:
case 0x68e0:
case 0x68e1:
case 0x68e2:
case 0x68e3:
case 0x68e4:
case 0x68e5:
case 0x68e6:
case 0x68e7:
case 0x68e8:
case 0x68e9:
case 0x68ea:
case 0x68eb:
case 0x68ec:
case 0x68ed:
case 0x68ee:
case 0x68ef:
case 0x68f0:
case 0x68f1:
case 0x68f2:
case 0x68f3:
case 0x68f4:
case 0x68f5:
case 0x68f6:
case 0x68f7:
case 0x68f8:
case 0x68f9:
case 0x68fa:
case 0x68fb:
case 0x68fc:
case 0x68fd:
case 0x68fe:
case 0x68ff:
	{
	 Bxx<0x08>((int8)instr);
	}
	break;

case 0x6900:
case 0x6901:
case 0x6902:
case 0x6903:
case 0x6904:
case 0x6905:
case 0x6906:
case 0x6907:
case 0x6908:
case 0x6909:
case 0x690a:
case 0x690b:
case 0x690c:
case 0x690d:
case 0x690e:
case 0x690f:
case 0x6910:
case 0x6911:
case 0x6912:
case 0x6913:
case 0x6914:
case 0x6915:
case 0x6916:
case 0x6917:
case 0x6918:
case 0x6919:
case 0x691a:
case 0x691b:
case 0x691c:
case 0x691d:
case 0x691e:
case 0x691f:
case 0x6920:
case 0x6921:
case 0x6922:
case 0x6923:
case 0x6924:
case 0x6925:
case 0x6926:
case 0x6927:
case 0x6928:
case 0x6929:
case 0x692a:
case 0x692b:
case 0x692c:
case 0x692d:
case 0x692e:
case 0x692f:
case 0x6930:
case 0x6931:
case 0x6932:
case 0x6933:
case 0x6934:
case 0x6935:
case 0x6936:
case 0x6937:
case 0x6938:
case 0x6939:
case 0x693a:
case 0x693b:
case 0x693c:
case 0x693d:
case 0x693e:
case 0x693f:
case 0x6940:
case 0x6941:
case 0x6942:
case 0x6943:
case 0x6944:
case 0x6945:
case 0x6946:
case 0x6947:
case 0x6948:
case 0x6949:
case 0x694a:
case 0x694b:
case 0x694c:
case 0x694d:
case 0x694e:
case 0x694f:
case 0x6950:
case 0x6951:
case 0x6952:
case 0x6953:
case 0x6954:
case 0x6955:
case 0x6956:
case 0x6957:
case 0x6958:
case 0x6959:
case 0x695a:
case 0x695b:
case 0x695c:
case 0x695d:
case 0x695e:
case 0x695f:
case 0x6960:
case 0x6961:
case 0x6962:
case 0x6963:
case 0x6964:
case 0x6965:
case 0x6966:
case 0x6967:
case 0x6968:
case 0x6969:
case 0x696a:
case 0x696b:
case 0x696c:
case 0x696d:
case 0x696e:
case 0x696f:
case 0x6970:
case 0x6971:
case 0x6972:
case 0x6973:
case 0x6974:
case 0x6975:
case 0x6976:
case 0x6977:
case 0x6978:
case 0x6979:
case 0x697a:
case 0x697b:
case 0x697c:
case 0x697d:
case 0x697e:
case 0x697f:
case 0x6980:
case 0x6981:
case 0x6982:
case 0x6983:
case 0x6984:
case 0x6985:
case 0x6986:
case 0x6987:
case 0x6988:
case 0x6989:
case 0x698a:
case 0x698b:
case 0x698c:
case 0x698d:
case 0x698e:
case 0x698f:
case 0x6990:
case 0x6991:
case 0x6992:
case 0x6993:
case 0x6994:
case 0x6995:
case 0x6996:
case 0x6997:
case 0x6998:
case 0x6999:
case 0x699a:
case 0x699b:
case 0x699c:
case 0x699d:
case 0x699e:
case 0x699f:
case 0x69a0:
case 0x69a1:
case 0x69a2:
case 0x69a3:
case 0x69a4:
case 0x69a5:
case 0x69a6:
case 0x69a7:
case 0x69a8:
case 0x69a9:
case 0x69aa:
case 0x69ab:
case 0x69ac:
case 0x69ad:
case 0x69ae:
case 0x69af:
case 0x69b0:
case 0x69b1:
case 0x69b2:
case 0x69b3:
case 0x69b4:
case 0x69b5:
case 0x69b6:
case 0x69b7:
case 0x69b8:
case 0x69b9:
case 0x69ba:
case 0x69bb:
case 0x69bc:
case 0x69bd:
case 0x69be:
case 0x69bf:
case 0x69c0:
case 0x69c1:
case 0x69c2:
case 0x69c3:
case 0x69c4:
case 0x69c5:
case 0x69c6:
case 0x69c7:
case 0x69c8:
case 0x69c9:
case 0x69ca:
case 0x69cb:
case 0x69cc:
case 0x69cd:
case 0x69ce:
case 0x69cf:
case 0x69d0:
case 0x69d1:
case 0x69d2:
case 0x69d3:
case 0x69d4:
case 0x69d5:
case 0x69d6:
case 0x69d7:
case 0x69d8:
case 0x69d9:
case 0x69da:
case 0x69db:
case 0x69dc:
case 0x69dd:
case 0x69de:
case 0x69df:
case 0x69e0:
case 0x69e1:
case 0x69e2:
case 0x69e3:
case 0x69e4:
case 0x69e5:
case 0x69e6:
case 0x69e7:
case 0x69e8:
case 0x69e9:
case 0x69ea:
case 0x69eb:
case 0x69ec:
case 0x69ed:
case 0x69ee:
case 0x69ef:
case 0x69f0:
case 0x69f1:
case 0x69f2:
case 0x69f3:
case 0x69f4:
case 0x69f5:
case 0x69f6:
case 0x69f7:
case 0x69f8:
case 0x69f9:
case 0x69fa:
case 0x69fb:
case 0x69fc:
case 0x69fd:
case 0x69fe:
case 0x69ff:
	{
	 Bxx<0x09>((int8)instr);
	}
	break;

case 0x6a00:
case 0x6a01:
case 0x6a02:
case 0x6a03:
case 0x6a04:
case 0x6a05:
case 0x6a06:
case 0x6a07:
case 0x6a08:
case 0x6a09:
case 0x6a0a:
case 0x6a0b:
case 0x6a0c:
case 0x6a0d:
case 0x6a0e:
case 0x6a0f:
case 0x6a10:
case 0x6a11:
case 0x6a12:
case 0x6a13:
case 0x6a14:
case 0x6a15:
case 0x6a16:
case 0x6a17:
case 0x6a18:
case 0x6a19:
case 0x6a1a:
case 0x6a1b:
case 0x6a1c:
case 0x6a1d:
case 0x6a1e:
case 0x6a1f:
case 0x6a20:
case 0x6a21:
case 0x6a22:
case 0x6a23:
case 0x6a24:
case 0x6a25:
case 0x6a26:
case 0x6a27:
case 0x6a28:
case 0x6a29:
case 0x6a2a:
case 0x6a2b:
case 0x6a2c:
case 0x6a2d:
case 0x6a2e:
case 0x6a2f:
case 0x6a30:
case 0x6a31:
case 0x6a32:
case 0x6a33:
case 0x6a34:
case 0x6a35:
case 0x6a36:
case 0x6a37:
case 0x6a38:
case 0x6a39:
case 0x6a3a:
case 0x6a3b:
case 0x6a3c:
case 0x6a3d:
case 0x6a3e:
case 0x6a3f:
case 0x6a40:
case 0x6a41:
case 0x6a42:
case 0x6a43:
case 0x6a44:
case 0x6a45:
case 0x6a46:
case 0x6a47:
case 0x6a48:
case 0x6a49:
case 0x6a4a:
case 0x6a4b:
case 0x6a4c:
case 0x6a4d:
case 0x6a4e:
case 0x6a4f:
case 0x6a50:
case 0x6a51:
case 0x6a52:
case 0x6a53:
case 0x6a54:
case 0x6a55:
case 0x6a56:
case 0x6a57:
case 0x6a58:
case 0x6a59:
case 0x6a5a:
case 0x6a5b:
case 0x6a5c:
case 0x6a5d:
case 0x6a5e:
case 0x6a5f:
case 0x6a60:
case 0x6a61:
case 0x6a62:
case 0x6a63:
case 0x6a64:
case 0x6a65:
case 0x6a66:
case 0x6a67:
case 0x6a68:
case 0x6a69:
case 0x6a6a:
case 0x6a6b:
case 0x6a6c:
case 0x6a6d:
case 0x6a6e:
case 0x6a6f:
case 0x6a70:
case 0x6a71:
case 0x6a72:
case 0x6a73:
case 0x6a74:
case 0x6a75:
case 0x6a76:
case 0x6a77:
case 0x6a78:
case 0x6a79:
case 0x6a7a:
case 0x6a7b:
case 0x6a7c:
case 0x6a7d:
case 0x6a7e:
case 0x6a7f:
case 0x6a80:
case 0x6a81:
case 0x6a82:
case 0x6a83:
case 0x6a84:
case 0x6a85:
case 0x6a86:
case 0x6a87:
case 0x6a88:
case 0x6a89:
case 0x6a8a:
case 0x6a8b:
case 0x6a8c:
case 0x6a8d:
case 0x6a8e:
case 0x6a8f:
case 0x6a90:
case 0x6a91:
case 0x6a92:
case 0x6a93:
case 0x6a94:
case 0x6a95:
case 0x6a96:
case 0x6a97:
case 0x6a98:
case 0x6a99:
case 0x6a9a:
case 0x6a9b:
case 0x6a9c:
case 0x6a9d:
case 0x6a9e:
case 0x6a9f:
case 0x6aa0:
case 0x6aa1:
case 0x6aa2:
case 0x6aa3:
case 0x6aa4:
case 0x6aa5:
case 0x6aa6:
case 0x6aa7:
case 0x6aa8:
case 0x6aa9:
case 0x6aaa:
case 0x6aab:
case 0x6aac:
case 0x6aad:
case 0x6aae:
case 0x6aaf:
case 0x6ab0:
case 0x6ab1:
case 0x6ab2:
case 0x6ab3:
case 0x6ab4:
case 0x6ab5:
case 0x6ab6:
case 0x6ab7:
case 0x6ab8:
case 0x6ab9:
case 0x6aba:
case 0x6abb:
case 0x6abc:
case 0x6abd:
case 0x6abe:
case 0x6abf:
case 0x6ac0:
case 0x6ac1:
case 0x6ac2:
case 0x6ac3:
case 0x6ac4:
case 0x6ac5:
case 0x6ac6:
case 0x6ac7:
case 0x6ac8:
case 0x6ac9:
case 0x6aca:
case 0x6acb:
case 0x6acc:
case 0x6acd:
case 0x6ace:
case 0x6acf:
case 0x6ad0:
case 0x6ad1:
case 0x6ad2:
case 0x6ad3:
case 0x6ad4:
case 0x6ad5:
case 0x6ad6:
case 0x6ad7:
case 0x6ad8:
case 0x6ad9:
case 0x6ada:
case 0x6adb:
case 0x6adc:
case 0x6add:
case 0x6ade:
case 0x6adf:
case 0x6ae0:
case 0x6ae1:
case 0x6ae2:
case 0x6ae3:
case 0x6ae4:
case 0x6ae5:
case 0x6ae6:
case 0x6ae7:
case 0x6ae8:
case 0x6ae9:
case 0x6aea:
case 0x6aeb:
case 0x6aec:
case 0x6aed:
case 0x6aee:
case 0x6aef:
case 0x6af0:
case 0x6af1:
case 0x6af2:
case 0x6af3:
case 0x6af4:
case 0x6af5:
case 0x6af6:
case 0x6af7:
case 0x6af8:
case 0x6af9:
case 0x6afa:
case 0x6afb:
case 0x6afc:
case 0x6afd:
case 0x6afe:
case 0x6aff:
	{
	 Bxx<0x0a>((int8)instr);
	}
	break;

case 0x6b00:
case 0x6b01:
case 0x6b02:
case 0x6b03:
case 0x6b04:
case 0x6b05:
case 0x6b06:
case 0x6b07:
case 0x6b08:
case 0x6b09:
case 0x6b0a:
case 0x6b0b:
case 0x6b0c:
case 0x6b0d:
case 0x6b0e:
case 0x6b0f:
case 0x6b10:
case 0x6b11:
case 0x6b12:
case 0x6b13:
case 0x6b14:
case 0x6b15:
case 0x6b16:
case 0x6b17:
case 0x6b18:
case 0x6b19:
case 0x6b1a:
case 0x6b1b:
case 0x6b1c:
case 0x6b1d:
case 0x6b1e:
case 0x6b1f:
case 0x6b20:
case 0x6b21:
case 0x6b22:
case 0x6b23:
case 0x6b24:
case 0x6b25:
case 0x6b26:
case 0x6b27:
case 0x6b28:
case 0x6b29:
case 0x6b2a:
case 0x6b2b:
case 0x6b2c:
case 0x6b2d:
case 0x6b2e:
case 0x6b2f:
case 0x6b30:
case 0x6b31:
case 0x6b32:
case 0x6b33:
case 0x6b34:
case 0x6b35:
case 0x6b36:
case 0x6b37:
case 0x6b38:
case 0x6b39:
case 0x6b3a:
case 0x6b3b:
case 0x6b3c:
case 0x6b3d:
case 0x6b3e:
case 0x6b3f:
case 0x6b40:
case 0x6b41:
case 0x6b42:
case 0x6b43:
case 0x6b44:
case 0x6b45:
case 0x6b46:
case 0x6b47:
case 0x6b48:
case 0x6b49:
case 0x6b4a:
case 0x6b4b:
case 0x6b4c:
case 0x6b4d:
case 0x6b4e:
case 0x6b4f:
case 0x6b50:
case 0x6b51:
case 0x6b52:
case 0x6b53:
case 0x6b54:
case 0x6b55:
case 0x6b56:
case 0x6b57:
case 0x6b58:
case 0x6b59:
case 0x6b5a:
case 0x6b5b:
case 0x6b5c:
case 0x6b5d:
case 0x6b5e:
case 0x6b5f:
case 0x6b60:
case 0x6b61:
case 0x6b62:
case 0x6b63:
case 0x6b64:
case 0x6b65:
case 0x6b66:
case 0x6b67:
case 0x6b68:
case 0x6b69:
case 0x6b6a:
case 0x6b6b:
case 0x6b6c:
case 0x6b6d:
case 0x6b6e:
case 0x6b6f:
case 0x6b70:
case 0x6b71:
case 0x6b72:
case 0x6b73:
case 0x6b74:
case 0x6b75:
case 0x6b76:
case 0x6b77:
case 0x6b78:
case 0x6b79:
case 0x6b7a:
case 0x6b7b:
case 0x6b7c:
case 0x6b7d:
case 0x6b7e:
case 0x6b7f:
case 0x6b80:
case 0x6b81:
case 0x6b82:
case 0x6b83:
case 0x6b84:
case 0x6b85:
case 0x6b86:
case 0x6b87:
case 0x6b88:
case 0x6b89:
case 0x6b8a:
case 0x6b8b:
case 0x6b8c:
case 0x6b8d:
case 0x6b8e:
case 0x6b8f:
case 0x6b90:
case 0x6b91:
case 0x6b92:
case 0x6b93:
case 0x6b94:
case 0x6b95:
case 0x6b96:
case 0x6b97:
case 0x6b98:
case 0x6b99:
case 0x6b9a:
case 0x6b9b:
case 0x6b9c:
case 0x6b9d:
case 0x6b9e:
case 0x6b9f:
case 0x6ba0:
case 0x6ba1:
case 0x6ba2:
case 0x6ba3:
case 0x6ba4:
case 0x6ba5:
case 0x6ba6:
case 0x6ba7:
case 0x6ba8:
case 0x6ba9:
case 0x6baa:
case 0x6bab:
case 0x6bac:
case 0x6bad:
case 0x6bae:
case 0x6baf:
case 0x6bb0:
case 0x6bb1:
case 0x6bb2:
case 0x6bb3:
case 0x6bb4:
case 0x6bb5:
case 0x6bb6:
case 0x6bb7:
case 0x6bb8:
case 0x6bb9:
case 0x6bba:
case 0x6bbb:
case 0x6bbc:
case 0x6bbd:
case 0x6bbe:
case 0x6bbf:
case 0x6bc0:
case 0x6bc1:
case 0x6bc2:
case 0x6bc3:
case 0x6bc4:
case 0x6bc5:
case 0x6bc6:
case 0x6bc7:
case 0x6bc8:
case 0x6bc9:
case 0x6bca:
case 0x6bcb:
case 0x6bcc:
case 0x6bcd:
case 0x6bce:
case 0x6bcf:
case 0x6bd0:
case 0x6bd1:
case 0x6bd2:
case 0x6bd3:
case 0x6bd4:
case 0x6bd5:
case 0x6bd6:
case 0x6bd7:
case 0x6bd8:
case 0x6bd9:
case 0x6bda:
case 0x6bdb:
case 0x6bdc:
case 0x6bdd:
case 0x6bde:
case 0x6bdf:
case 0x6be0:
case 0x6be1:
case 0x6be2:
case 0x6be3:
case 0x6be4:
case 0x6be5:
case 0x6be6:
case 0x6be7:
case 0x6be8:
case 0x6be9:
case 0x6bea:
case 0x6beb:
case 0x6bec:
case 0x6bed:
case 0x6bee:
case 0x6bef:
case 0x6bf0:
case 0x6bf1:
case 0x6bf2:
case 0x6bf3:
case 0x6bf4:
case 0x6bf5:
case 0x6bf6:
case 0x6bf7:
case 0x6bf8:
case 0x6bf9:
case 0x6bfa:
case 0x6bfb:
case 0x6bfc:
case 0x6bfd:
case 0x6bfe:
case 0x6bff:
	{
	 Bxx<0x0b>((int8)instr);
	}
	break;

case 0x6c00:
case 0x6c01:
case 0x6c02:
case 0x6c03:
case 0x6c04:
case 0x6c05:
case 0x6c06:
case 0x6c07:
case 0x6c08:
case 0x6c09:
case 0x6c0a:
case 0x6c0b:
case 0x6c0c:
case 0x6c0d:
case 0x6c0e:
case 0x6c0f:
case 0x6c10:
case 0x6c11:
case 0x6c12:
case 0x6c13:
case 0x6c14:
case 0x6c15:
case 0x6c16:
case 0x6c17:
case 0x6c18:
case 0x6c19:
case 0x6c1a:
case 0x6c1b:
case 0x6c1c:
case 0x6c1d:
case 0x6c1e:
case 0x6c1f:
case 0x6c20:
case 0x6c21:
case 0x6c22:
case 0x6c23:
case 0x6c24:
case 0x6c25:
case 0x6c26:
case 0x6c27:
case 0x6c28:
case 0x6c29:
case 0x6c2a:
case 0x6c2b:
case 0x6c2c:
case 0x6c2d:
case 0x6c2e:
case 0x6c2f:
case 0x6c30:
case 0x6c31:
case 0x6c32:
case 0x6c33:
case 0x6c34:
case 0x6c35:
case 0x6c36:
case 0x6c37:
case 0x6c38:
case 0x6c39:
case 0x6c3a:
case 0x6c3b:
case 0x6c3c:
case 0x6c3d:
case 0x6c3e:
case 0x6c3f:
case 0x6c40:
case 0x6c41:
case 0x6c42:
case 0x6c43:
case 0x6c44:
case 0x6c45:
case 0x6c46:
case 0x6c47:
case 0x6c48:
case 0x6c49:
case 0x6c4a:
case 0x6c4b:
case 0x6c4c:
case 0x6c4d:
case 0x6c4e:
case 0x6c4f:
case 0x6c50:
case 0x6c51:
case 0x6c52:
case 0x6c53:
case 0x6c54:
case 0x6c55:
case 0x6c56:
case 0x6c57:
case 0x6c58:
case 0x6c59:
case 0x6c5a:
case 0x6c5b:
case 0x6c5c:
case 0x6c5d:
case 0x6c5e:
case 0x6c5f:
case 0x6c60:
case 0x6c61:
case 0x6c62:
case 0x6c63:
case 0x6c64:
case 0x6c65:
case 0x6c66:
case 0x6c67:
case 0x6c68:
case 0x6c69:
case 0x6c6a:
case 0x6c6b:
case 0x6c6c:
case 0x6c6d:
case 0x6c6e:
case 0x6c6f:
case 0x6c70:
case 0x6c71:
case 0x6c72:
case 0x6c73:
case 0x6c74:
case 0x6c75:
case 0x6c76:
case 0x6c77:
case 0x6c78:
case 0x6c79:
case 0x6c7a:
case 0x6c7b:
case 0x6c7c:
case 0x6c7d:
case 0x6c7e:
case 0x6c7f:
case 0x6c80:
case 0x6c81:
case 0x6c82:
case 0x6c83:
case 0x6c84:
case 0x6c85:
case 0x6c86:
case 0x6c87:
case 0x6c88:
case 0x6c89:
case 0x6c8a:
case 0x6c8b:
case 0x6c8c:
case 0x6c8d:
case 0x6c8e:
case 0x6c8f:
case 0x6c90:
case 0x6c91:
case 0x6c92:
case 0x6c93:
case 0x6c94:
case 0x6c95:
case 0x6c96:
case 0x6c97:
case 0x6c98:
case 0x6c99:
case 0x6c9a:
case 0x6c9b:
case 0x6c9c:
case 0x6c9d:
case 0x6c9e:
case 0x6c9f:
case 0x6ca0:
case 0x6ca1:
case 0x6ca2:
case 0x6ca3:
case 0x6ca4:
case 0x6ca5:
case 0x6ca6:
case 0x6ca7:
case 0x6ca8:
case 0x6ca9:
case 0x6caa:
case 0x6cab:
case 0x6cac:
case 0x6cad:
case 0x6cae:
case 0x6caf:
case 0x6cb0:
case 0x6cb1:
case 0x6cb2:
case 0x6cb3:
case 0x6cb4:
case 0x6cb5:
case 0x6cb6:
case 0x6cb7:
case 0x6cb8:
case 0x6cb9:
case 0x6cba:
case 0x6cbb:
case 0x6cbc:
case 0x6cbd:
case 0x6cbe:
case 0x6cbf:
case 0x6cc0:
case 0x6cc1:
case 0x6cc2:
case 0x6cc3:
case 0x6cc4:
case 0x6cc5:
case 0x6cc6:
case 0x6cc7:
case 0x6cc8:
case 0x6cc9:
case 0x6cca:
case 0x6ccb:
case 0x6ccc:
case 0x6ccd:
case 0x6cce:
case 0x6ccf:
case 0x6cd0:
case 0x6cd1:
case 0x6cd2:
case 0x6cd3:
case 0x6cd4:
case 0x6cd5:
case 0x6cd6:
case 0x6cd7:
case 0x6cd8:
case 0x6cd9:
case 0x6cda:
case 0x6cdb:
case 0x6cdc:
case 0x6cdd:
case 0x6cde:
case 0x6cdf:
case 0x6ce0:
case 0x6ce1:
case 0x6ce2:
case 0x6ce3:
case 0x6ce4:
case 0x6ce5:
case 0x6ce6:
case 0x6ce7:
case 0x6ce8:
case 0x6ce9:
case 0x6cea:
case 0x6ceb:
case 0x6cec:
case 0x6ced:
case 0x6cee:
case 0x6cef:
case 0x6cf0:
case 0x6cf1:
case 0x6cf2:
case 0x6cf3:
case 0x6cf4:
case 0x6cf5:
case 0x6cf6:
case 0x6cf7:
case 0x6cf8:
case 0x6cf9:
case 0x6cfa:
case 0x6cfb:
case 0x6cfc:
case 0x6cfd:
case 0x6cfe:
case 0x6cff:
	{
	 Bxx<0x0c>((int8)instr);
	}
	break;

case 0x6d00:
case 0x6d01:
case 0x6d02:
case 0x6d03:
case 0x6d04:
case 0x6d05:
case 0x6d06:
case 0x6d07:
case 0x6d08:
case 0x6d09:
case 0x6d0a:
case 0x6d0b:
case 0x6d0c:
case 0x6d0d:
case 0x6d0e:
case 0x6d0f:
case 0x6d10:
case 0x6d11:
case 0x6d12:
case 0x6d13:
case 0x6d14:
case 0x6d15:
case 0x6d16:
case 0x6d17:
case 0x6d18:
case 0x6d19:
case 0x6d1a:
case 0x6d1b:
case 0x6d1c:
case 0x6d1d:
case 0x6d1e:
case 0x6d1f:
case 0x6d20:
case 0x6d21:
case 0x6d22:
case 0x6d23:
case 0x6d24:
case 0x6d25:
case 0x6d26:
case 0x6d27:
case 0x6d28:
case 0x6d29:
case 0x6d2a:
case 0x6d2b:
case 0x6d2c:
case 0x6d2d:
case 0x6d2e:
case 0x6d2f:
case 0x6d30:
case 0x6d31:
case 0x6d32:
case 0x6d33:
case 0x6d34:
case 0x6d35:
case 0x6d36:
case 0x6d37:
case 0x6d38:
case 0x6d39:
case 0x6d3a:
case 0x6d3b:
case 0x6d3c:
case 0x6d3d:
case 0x6d3e:
case 0x6d3f:
case 0x6d40:
case 0x6d41:
case 0x6d42:
case 0x6d43:
case 0x6d44:
case 0x6d45:
case 0x6d46:
case 0x6d47:
case 0x6d48:
case 0x6d49:
case 0x6d4a:
case 0x6d4b:
case 0x6d4c:
case 0x6d4d:
case 0x6d4e:
case 0x6d4f:
case 0x6d50:
case 0x6d51:
case 0x6d52:
case 0x6d53:
case 0x6d54:
case 0x6d55:
case 0x6d56:
case 0x6d57:
case 0x6d58:
case 0x6d59:
case 0x6d5a:
case 0x6d5b:
case 0x6d5c:
case 0x6d5d:
case 0x6d5e:
case 0x6d5f:
case 0x6d60:
case 0x6d61:
case 0x6d62:
case 0x6d63:
case 0x6d64:
case 0x6d65:
case 0x6d66:
case 0x6d67:
case 0x6d68:
case 0x6d69:
case 0x6d6a:
case 0x6d6b:
case 0x6d6c:
case 0x6d6d:
case 0x6d6e:
case 0x6d6f:
case 0x6d70:
case 0x6d71:
case 0x6d72:
case 0x6d73:
case 0x6d74:
case 0x6d75:
case 0x6d76:
case 0x6d77:
case 0x6d78:
case 0x6d79:
case 0x6d7a:
case 0x6d7b:
case 0x6d7c:
case 0x6d7d:
case 0x6d7e:
case 0x6d7f:
case 0x6d80:
case 0x6d81:
case 0x6d82:
case 0x6d83:
case 0x6d84:
case 0x6d85:
case 0x6d86:
case 0x6d87:
case 0x6d88:
case 0x6d89:
case 0x6d8a:
case 0x6d8b:
case 0x6d8c:
case 0x6d8d:
case 0x6d8e:
case 0x6d8f:
case 0x6d90:
case 0x6d91:
case 0x6d92:
case 0x6d93:
case 0x6d94:
case 0x6d95:
case 0x6d96:
case 0x6d97:
case 0x6d98:
case 0x6d99:
case 0x6d9a:
case 0x6d9b:
case 0x6d9c:
case 0x6d9d:
case 0x6d9e:
case 0x6d9f:
case 0x6da0:
case 0x6da1:
case 0x6da2:
case 0x6da3:
case 0x6da4:
case 0x6da5:
case 0x6da6:
case 0x6da7:
case 0x6da8:
case 0x6da9:
case 0x6daa:
case 0x6dab:
case 0x6dac:
case 0x6dad:
case 0x6dae:
case 0x6daf:
case 0x6db0:
case 0x6db1:
case 0x6db2:
case 0x6db3:
case 0x6db4:
case 0x6db5:
case 0x6db6:
case 0x6db7:
case 0x6db8:
case 0x6db9:
case 0x6dba:
case 0x6dbb:
case 0x6dbc:
case 0x6dbd:
case 0x6dbe:
case 0x6dbf:
case 0x6dc0:
case 0x6dc1:
case 0x6dc2:
case 0x6dc3:
case 0x6dc4:
case 0x6dc5:
case 0x6dc6:
case 0x6dc7:
case 0x6dc8:
case 0x6dc9:
case 0x6dca:
case 0x6dcb:
case 0x6dcc:
case 0x6dcd:
case 0x6dce:
case 0x6dcf:
case 0x6dd0:
case 0x6dd1:
case 0x6dd2:
case 0x6dd3:
case 0x6dd4:
case 0x6dd5:
case 0x6dd6:
case 0x6dd7:
case 0x6dd8:
case 0x6dd9:
case 0x6dda:
case 0x6ddb:
case 0x6ddc:
case 0x6ddd:
case 0x6dde:
case 0x6ddf:
case 0x6de0:
case 0x6de1:
case 0x6de2:
case 0x6de3:
case 0x6de4:
case 0x6de5:
case 0x6de6:
case 0x6de7:
case 0x6de8:
case 0x6de9:
case 0x6dea:
case 0x6deb:
case 0x6dec:
case 0x6ded:
case 0x6dee:
case 0x6def:
case 0x6df0:
case 0x6df1:
case 0x6df2:
case 0x6df3:
case 0x6df4:
case 0x6df5:
case 0x6df6:
case 0x6df7:
case 0x6df8:
case 0x6df9:
case 0x6dfa:
case 0x6dfb:
case 0x6dfc:
case 0x6dfd:
case 0x6dfe:
case 0x6dff:
	{
	 Bxx<0x0d>((int8)instr);
	}
	break;

case 0x6e00:
case 0x6e01:
case 0x6e02:
case 0x6e03:
case 0x6e04:
case 0x6e05:
case 0x6e06:
case 0x6e07:
case 0x6e08:
case 0x6e09:
case 0x6e0a:
case 0x6e0b:
case 0x6e0c:
case 0x6e0d:
case 0x6e0e:
case 0x6e0f:
case 0x6e10:
case 0x6e11:
case 0x6e12:
case 0x6e13:
case 0x6e14:
case 0x6e15:
case 0x6e16:
case 0x6e17:
case 0x6e18:
case 0x6e19:
case 0x6e1a:
case 0x6e1b:
case 0x6e1c:
case 0x6e1d:
case 0x6e1e:
case 0x6e1f:
case 0x6e20:
case 0x6e21:
case 0x6e22:
case 0x6e23:
case 0x6e24:
case 0x6e25:
case 0x6e26:
case 0x6e27:
case 0x6e28:
case 0x6e29:
case 0x6e2a:
case 0x6e2b:
case 0x6e2c:
case 0x6e2d:
case 0x6e2e:
case 0x6e2f:
case 0x6e30:
case 0x6e31:
case 0x6e32:
case 0x6e33:
case 0x6e34:
case 0x6e35:
case 0x6e36:
case 0x6e37:
case 0x6e38:
case 0x6e39:
case 0x6e3a:
case 0x6e3b:
case 0x6e3c:
case 0x6e3d:
case 0x6e3e:
case 0x6e3f:
case 0x6e40:
case 0x6e41:
case 0x6e42:
case 0x6e43:
case 0x6e44:
case 0x6e45:
case 0x6e46:
case 0x6e47:
case 0x6e48:
case 0x6e49:
case 0x6e4a:
case 0x6e4b:
case 0x6e4c:
case 0x6e4d:
case 0x6e4e:
case 0x6e4f:
case 0x6e50:
case 0x6e51:
case 0x6e52:
case 0x6e53:
case 0x6e54:
case 0x6e55:
case 0x6e56:
case 0x6e57:
case 0x6e58:
case 0x6e59:
case 0x6e5a:
case 0x6e5b:
case 0x6e5c:
case 0x6e5d:
case 0x6e5e:
case 0x6e5f:
case 0x6e60:
case 0x6e61:
case 0x6e62:
case 0x6e63:
case 0x6e64:
case 0x6e65:
case 0x6e66:
case 0x6e67:
case 0x6e68:
case 0x6e69:
case 0x6e6a:
case 0x6e6b:
case 0x6e6c:
case 0x6e6d:
case 0x6e6e:
case 0x6e6f:
case 0x6e70:
case 0x6e71:
case 0x6e72:
case 0x6e73:
case 0x6e74:
case 0x6e75:
case 0x6e76:
case 0x6e77:
case 0x6e78:
case 0x6e79:
case 0x6e7a:
case 0x6e7b:
case 0x6e7c:
case 0x6e7d:
case 0x6e7e:
case 0x6e7f:
case 0x6e80:
case 0x6e81:
case 0x6e82:
case 0x6e83:
case 0x6e84:
case 0x6e85:
case 0x6e86:
case 0x6e87:
case 0x6e88:
case 0x6e89:
case 0x6e8a:
case 0x6e8b:
case 0x6e8c:
case 0x6e8d:
case 0x6e8e:
case 0x6e8f:
case 0x6e90:
case 0x6e91:
case 0x6e92:
case 0x6e93:
case 0x6e94:
case 0x6e95:
case 0x6e96:
case 0x6e97:
case 0x6e98:
case 0x6e99:
case 0x6e9a:
case 0x6e9b:
case 0x6e9c:
case 0x6e9d:
case 0x6e9e:
case 0x6e9f:
case 0x6ea0:
case 0x6ea1:
case 0x6ea2:
case 0x6ea3:
case 0x6ea4:
case 0x6ea5:
case 0x6ea6:
case 0x6ea7:
case 0x6ea8:
case 0x6ea9:
case 0x6eaa:
case 0x6eab:
case 0x6eac:
case 0x6ead:
case 0x6eae:
case 0x6eaf:
case 0x6eb0:
case 0x6eb1:
case 0x6eb2:
case 0x6eb3:
case 0x6eb4:
case 0x6eb5:
case 0x6eb6:
case 0x6eb7:
case 0x6eb8:
case 0x6eb9:
case 0x6eba:
case 0x6ebb:
case 0x6ebc:
case 0x6ebd:
case 0x6ebe:
case 0x6ebf:
case 0x6ec0:
case 0x6ec1:
case 0x6ec2:
case 0x6ec3:
case 0x6ec4:
case 0x6ec5:
case 0x6ec6:
case 0x6ec7:
case 0x6ec8:
case 0x6ec9:
case 0x6eca:
case 0x6ecb:
case 0x6ecc:
case 0x6ecd:
case 0x6ece:
case 0x6ecf:
case 0x6ed0:
case 0x6ed1:
case 0x6ed2:
case 0x6ed3:
case 0x6ed4:
case 0x6ed5:
case 0x6ed6:
case 0x6ed7:
case 0x6ed8:
case 0x6ed9:
case 0x6eda:
case 0x6edb:
case 0x6edc:
case 0x6edd:
case 0x6ede:
case 0x6edf:
case 0x6ee0:
case 0x6ee1:
case 0x6ee2:
case 0x6ee3:
case 0x6ee4:
case 0x6ee5:
case 0x6ee6:
case 0x6ee7:
case 0x6ee8:
case 0x6ee9:
case 0x6eea:
case 0x6eeb:
case 0x6eec:
case 0x6eed:
case 0x6eee:
case 0x6eef:
case 0x6ef0:
case 0x6ef1:
case 0x6ef2:
case 0x6ef3:
case 0x6ef4:
case 0x6ef5:
case 0x6ef6:
case 0x6ef7:
case 0x6ef8:
case 0x6ef9:
case 0x6efa:
case 0x6efb:
case 0x6efc:
case 0x6efd:
case 0x6efe:
case 0x6eff:
	{
	 Bxx<0x0e>((int8)instr);
	}
	break;

case 0x6f00:
case 0x6f01:
case 0x6f02:
case 0x6f03:
case 0x6f04:
case 0x6f05:
case 0x6f06:
case 0x6f07:
case 0x6f08:
case 0x6f09:
case 0x6f0a:
case 0x6f0b:
case 0x6f0c:
case 0x6f0d:
case 0x6f0e:
case 0x6f0f:
case 0x6f10:
case 0x6f11:
case 0x6f12:
case 0x6f13:
case 0x6f14:
case 0x6f15:
case 0x6f16:
case 0x6f17:
case 0x6f18:
case 0x6f19:
case 0x6f1a:
case 0x6f1b:
case 0x6f1c:
case 0x6f1d:
case 0x6f1e:
case 0x6f1f:
case 0x6f20:
case 0x6f21:
case 0x6f22:
case 0x6f23:
case 0x6f24:
case 0x6f25:
case 0x6f26:
case 0x6f27:
case 0x6f28:
case 0x6f29:
case 0x6f2a:
case 0x6f2b:
case 0x6f2c:
case 0x6f2d:
case 0x6f2e:
case 0x6f2f:
case 0x6f30:
case 0x6f31:
case 0x6f32:
case 0x6f33:
case 0x6f34:
case 0x6f35:
case 0x6f36:
case 0x6f37:
case 0x6f38:
case 0x6f39:
case 0x6f3a:
case 0x6f3b:
case 0x6f3c:
case 0x6f3d:
case 0x6f3e:
case 0x6f3f:
case 0x6f40:
case 0x6f41:
case 0x6f42:
case 0x6f43:
case 0x6f44:
case 0x6f45:
case 0x6f46:
case 0x6f47:
case 0x6f48:
case 0x6f49:
case 0x6f4a:
case 0x6f4b:
case 0x6f4c:
case 0x6f4d:
case 0x6f4e:
case 0x6f4f:
case 0x6f50:
case 0x6f51:
case 0x6f52:
case 0x6f53:
case 0x6f54:
case 0x6f55:
case 0x6f56:
case 0x6f57:
case 0x6f58:
case 0x6f59:
case 0x6f5a:
case 0x6f5b:
case 0x6f5c:
case 0x6f5d:
case 0x6f5e:
case 0x6f5f:
case 0x6f60:
case 0x6f61:
case 0x6f62:
case 0x6f63:
case 0x6f64:
case 0x6f65:
case 0x6f66:
case 0x6f67:
case 0x6f68:
case 0x6f69:
case 0x6f6a:
case 0x6f6b:
case 0x6f6c:
case 0x6f6d:
case 0x6f6e:
case 0x6f6f:
case 0x6f70:
case 0x6f71:
case 0x6f72:
case 0x6f73:
case 0x6f74:
case 0x6f75:
case 0x6f76:
case 0x6f77:
case 0x6f78:
case 0x6f79:
case 0x6f7a:
case 0x6f7b:
case 0x6f7c:
case 0x6f7d:
case 0x6f7e:
case 0x6f7f:
case 0x6f80:
case 0x6f81:
case 0x6f82:
case 0x6f83:
case 0x6f84:
case 0x6f85:
case 0x6f86:
case 0x6f87:
case 0x6f88:
case 0x6f89:
case 0x6f8a:
case 0x6f8b:
case 0x6f8c:
case 0x6f8d:
case 0x6f8e:
case 0x6f8f:
case 0x6f90:
case 0x6f91:
case 0x6f92:
case 0x6f93:
case 0x6f94:
case 0x6f95:
case 0x6f96:
case 0x6f97:
case 0x6f98:
case 0x6f99:
case 0x6f9a:
case 0x6f9b:
case 0x6f9c:
case 0x6f9d:
case 0x6f9e:
case 0x6f9f:
case 0x6fa0:
case 0x6fa1:
case 0x6fa2:
case 0x6fa3:
case 0x6fa4:
case 0x6fa5:
case 0x6fa6:
case 0x6fa7:
case 0x6fa8:
case 0x6fa9:
case 0x6faa:
case 0x6fab:
case 0x6fac:
case 0x6fad:
case 0x6fae:
case 0x6faf:
case 0x6fb0:
case 0x6fb1:
case 0x6fb2:
case 0x6fb3:
case 0x6fb4:
case 0x6fb5:
case 0x6fb6:
case 0x6fb7:
case 0x6fb8:
case 0x6fb9:
case 0x6fba:
case 0x6fbb:
case 0x6fbc:
case 0x6fbd:
case 0x6fbe:
case 0x6fbf:
case 0x6fc0:
case 0x6fc1:
case 0x6fc2:
case 0x6fc3:
case 0x6fc4:
case 0x6fc5:
case 0x6fc6:
case 0x6fc7:
case 0x6fc8:
case 0x6fc9:
case 0x6fca:
case 0x6fcb:
case 0x6fcc:
case 0x6fcd:
case 0x6fce:
case 0x6fcf:
case 0x6fd0:
case 0x6fd1:
case 0x6fd2:
case 0x6fd3:
case 0x6fd4:
case 0x6fd5:
case 0x6fd6:
case 0x6fd7:
case 0x6fd8:
case 0x6fd9:
case 0x6fda:
case 0x6fdb:
case 0x6fdc:
case 0x6fdd:
case 0x6fde:
case 0x6fdf:
case 0x6fe0:
case 0x6fe1:
case 0x6fe2:
case 0x6fe3:
case 0x6fe4:
case 0x6fe5:
case 0x6fe6:
case 0x6fe7:
case 0x6fe8:
case 0x6fe9:
case 0x6fea:
case 0x6feb:
case 0x6fec:
case 0x6fed:
case 0x6fee:
case 0x6fef:
case 0x6ff0:
case 0x6ff1:
case 0x6ff2:
case 0x6ff3:
case 0x6ff4:
case 0x6ff5:
case 0x6ff6:
case 0x6ff7:
case 0x6ff8:
case 0x6ff9:
case 0x6ffa:
case 0x6ffb:
case 0x6ffc:
case 0x6ffd:
case 0x6ffe:
case 0x6fff:
	{
	 Bxx<0x0f>((int8)instr);
	}
	break;

case 0x50c8:
case 0x50c9:
case 0x50ca:
case 0x50cb:
case 0x50cc:
case 0x50cd:
case 0x50ce:
case 0x50cf:
	{
	 DBcc<0x00>(instr_b2_b0);
	}
	break;

case 0x51c8:
case 0x51c9:
case 0x51ca:
case 0x51cb:
case 0x51cc:
case 0x51cd:
case 0x51ce:
case 0x51cf:
	{
	 DBcc<0x01>(instr_b2_b0);
	}
	break;

case 0x52c8:
case 0x52c9:
case 0x52ca:
case 0x52cb:
case 0x52cc:
case 0x52cd:
case 0x52ce:
case 0x52cf:
	{
	 DBcc<0x02>(instr_b2_b0);
	}
	break;

case 0x53c8:
case 0x53c9:
case 0x53ca:
case 0x53cb:
case 0x53cc:
case 0x53cd:
case 0x53ce:
case 0x53cf:
	{
	 DBcc<0x03>(instr_b2_b0);
	}
	break;

case 0x54c8:
case 0x54c9:
case 0x54ca:
case 0x54cb:
case 0x54cc:
case 0x54cd:
case 0x54ce:
case 0x54cf:
	{
	 DBcc<0x04>(instr_b2_b0);
	}
	break;

case 0x55c8:
case 0x55c9:
case 0x55ca:
case 0x55cb:
case 0x55cc:
case 0x55cd:
case 0x55ce:
case 0x55cf:
	{
	 DBcc<0x05>(instr_b2_b0);
	}
	break;

case 0x56c8:
case 0x56c9:
case 0x56ca:
case 0x56cb:
case 0x56cc:
case 0x56cd:
case 0x56ce:
case 0x56cf:
	{
	 DBcc<0x06>(instr_b2_b0);
	}
	break;

case 0x57c8:
case 0x57c9:
case 0x57ca:
case 0x57cb:
case 0x57cc:
case 0x57cd:
case 0x57ce:
case 0x57cf:
	{
	 DBcc<0x07>(instr_b2_b0);
	}
	break;

case 0x58c8:
case 0x58c9:
case 0x58ca:
case 0x58cb:
case 0x58cc:
case 0x58cd:
case 0x58ce:
case 0x58cf:
	{
	 DBcc<0x08>(instr_b2_b0);
	}
	break;

case 0x59c8:
case 0x59c9:
case 0x59ca:
case 0x59cb:
case 0x59cc:
case 0x59cd:
case 0x59ce:
case 0x59cf:
	{
	 DBcc<0x09>(instr_b2_b0);
	}
	break;

case 0x5ac8:
case 0x5ac9:
case 0x5aca:
case 0x5acb:
case 0x5acc:
case 0x5acd:
case 0x5ace:
case 0x5acf:
	{
	 DBcc<0x0a>(instr_b2_b0);
	}
	break;

case 0x5bc8:
case 0x5bc9:
case 0x5bca:
case 0x5bcb:
case 0x5bcc:
case 0x5bcd:
case 0x5bce:
case 0x5bcf:
	{
	 DBcc<0x0b>(instr_b2_b0);
	}
	break;

case 0x5cc8:
case 0x5cc9:
case 0x5cca:
case 0x5ccb:
case 0x5ccc:
case 0x5ccd:
case 0x5cce:
case 0x5ccf:
	{
	 DBcc<0x0c>(instr_b2_b0);
	}
	break;

case 0x5dc8:
case 0x5dc9:
case 0x5dca:
case 0x5dcb:
case 0x5dcc:
case 0x5dcd:
case 0x5dce:
case 0x5dcf:
	{
	 DBcc<0x0d>(instr_b2_b0);
	}
	break;

case 0x5ec8:
case 0x5ec9:
case 0x5eca:
case 0x5ecb:
case 0x5ecc:
case 0x5ecd:
case 0x5ece:
case 0x5ecf:
	{
	 DBcc<0x0e>(instr_b2_b0);
	}
	break;

case 0x5fc8:
case 0x5fc9:
case 0x5fca:
case 0x5fcb:
case 0x5fcc:
case 0x5fcd:
case 0x5fce:
case 0x5fcf:
	{
	 DBcc<0x0f>(instr_b2_b0);
	}
	break;

case 0x0a3c:
	{
	 EORI_CCR();
	}
	break;

case 0xc148:
case 0xc149:
case 0xc14a:
case 0xc14b:
case 0xc14c:
case 0xc14d:
case 0xc14e:
case 0xc14f:
case 0xc348:
case 0xc349:
case 0xc34a:
case 0xc34b:
case 0xc34c:
case 0xc34d:
case 0xc34e:
case 0xc34f:
case 0xc548:
case 0xc549:
case 0xc54a:
case 0xc54b:
case 0xc54c:
case 0xc54d:
case 0xc54e:
case 0xc54f:
case 0xc748:
case 0xc749:
case 0xc74a:
case 0xc74b:
case 0xc74c:
case 0xc74d:
case 0xc74e:
case 0xc74f:
case 0xc948:
case 0xc949:
case 0xc94a:
case 0xc94b:
case 0xc94c:
case 0xc94d:
case 0xc94e:
case 0xc94f:
case 0xcb48:
case 0xcb49:
case 0xcb4a:
case 0xcb4b:
case 0xcb4c:
case 0xcb4d:
case 0xcb4e:
case 0xcb4f:
case 0xcd48:
case 0xcd49:
case 0xcd4a:
case 0xcd4b:
case 0xcd4c:
case 0xcd4d:
case 0xcd4e:
case 0xcd4f:
case 0xcf48:
case 0xcf49:
case 0xcf4a:
case 0xcf4b:
case 0xcf4c:
case 0xcf4d:
case 0xcf4e:
case 0xcf4f:
	{
	 EXG(&A[instr_b11_b9], &A[instr_b2_b0]); /* EXG Ax, Ay */
	}
	break;

case 0xc188:
case 0xc189:
case 0xc18a:
case 0xc18b:
case 0xc18c:
case 0xc18d:
case 0xc18e:
case 0xc18f:
case 0xc388:
case 0xc389:
case 0xc38a:
case 0xc38b:
case 0xc38c:
case 0xc38d:
case 0xc38e:
case 0xc38f:
case 0xc588:
case 0xc589:
case 0xc58a:
case 0xc58b:
case 0xc58c:
case 0xc58d:
case 0xc58e:
case 0xc58f:
case 0xc788:
case 0xc789:
case 0xc78a:
case 0xc78b:
case 0xc78c:
case 0xc78d:
case 0xc78e:
case 0xc78f:
case 0xc988:
case 0xc989:
case 0xc98a:
case 0xc98b:
case 0xc98c:
case 0xc98d:
case 0xc98e:
case 0xc98f:
case 0xcb88:
case 0xcb89:
case 0xcb8a:
case 0xcb8b:
case 0xcb8c:
case 0xcb8d:
case 0xcb8e:
case 0xcb8f:
case 0xcd88:
case 0xcd89:
case 0xcd8a:
case 0xcd8b:
case 0xcd8c:
case 0xcd8d:
case 0xcd8e:
case 0xcd8f:
case 0xcf88:
case 0xcf89:
case 0xcf8a:
case 0xcf8b:
case 0xcf8c:
case 0xcf8d:
case 0xcf8e:
case 0xcf8f:
	{
	 EXG(&D[instr_b11_b9], &A[instr_b2_b0]); /* EXG Dx, Ay */
	}
	break;

case 0xc140:
case 0xc141:
case 0xc142:
case 0xc143:
case 0xc144:
case 0xc145:
case 0xc146:
case 0xc147:
case 0xc340:
case 0xc341:
case 0xc342:
case 0xc343:
case 0xc344:
case 0xc345:
case 0xc346:
case 0xc347:
case 0xc540:
case 0xc541:
case 0xc542:
case 0xc543:
case 0xc544:
case 0xc545:
case 0xc546:
case 0xc547:
case 0xc740:
case 0xc741:
case 0xc742:
case 0xc743:
case 0xc744:
case 0xc745:
case 0xc746:
case 0xc747:
case 0xc940:
case 0xc941:
case 0xc942:
case 0xc943:
case 0xc944:
case 0xc945:
case 0xc946:
case 0xc947:
case 0xcb40:
case 0xcb41:
case 0xcb42:
case 0xcb43:
case 0xcb44:
case 0xcb45:
case 0xcb46:
case 0xcb47:
case 0xcd40:
case 0xcd41:
case 0xcd42:
case 0xcd43:
case 0xcd44:
case 0xcd45:
case 0xcd46:
case 0xcd47:
case 0xcf40:
case 0xcf41:
case 0xcf42:
case 0xcf43:
case 0xcf44:
case 0xcf45:
case 0xcf46:
case 0xcf47:
	{
	 EXG(&D[instr_b11_b9], &D[instr_b2_b0]); /* EXG Dx, Dy */
	}
	break;

case 0x41f9:
case 0x43f9:
case 0x45f9:
case 0x47f9:
case 0x49f9:
case 0x4bf9:
case 0x4df9:
case 0x4ff9:
	{
	 HAM<std::tuple<>, ABS_LONG> src(this); LEA(src, instr_b11_b9);
	}
	break;

case 0x4879:
	{
	 HAM<std::tuple<>, ABS_LONG> src(this); PEA(src);
	}
	break;

case 0x4ef9:
	{
	 HAM<std::tuple<>, ABS_LONG> targ(this); JMP(targ);
	}
	break;

case 0x4eb9:
	{
	 HAM<std::tuple<>, ABS_LONG> targ(this); JSR(targ);
	}
	break;

case 0x41f8:
case 0x43f8:
case 0x45f8:
case 0x47f8:
case 0x49f8:
case 0x4bf8:
case 0x4df8:
case 0x4ff8:
	{
	 HAM<std::tuple<>, ABS_SHORT> src(this); LEA(src, instr_b11_b9);
	}
	break;

case 0x4878:
	{
	 HAM<std::tuple<>, ABS_SHORT> src(this); PEA(src);
	}
	break;

case 0x4ef8:
	{
	 HAM<std::tuple<>, ABS_SHORT> targ(this); JMP(targ);
	}
	break;

case 0x4eb8:
	{
	 HAM<std::tuple<>, ABS_SHORT> targ(this); JSR(targ);
	}
	break;

case 0x41d0:
case 0x41d1:
case 0x41d2:
case 0x41d3:
case 0x41d4:
case 0x41d5:
case 0x41d6:
case 0x41d7:
case 0x43d0:
case 0x43d1:
case 0x43d2:
case 0x43d3:
case 0x43d4:
case 0x43d5:
case 0x43d6:
case 0x43d7:
case 0x45d0:
case 0x45d1:
case 0x45d2:
case 0x45d3:
case 0x45d4:
case 0x45d5:
case 0x45d6:
case 0x45d7:
case 0x47d0:
case 0x47d1:
case 0x47d2:
case 0x47d3:
case 0x47d4:
case 0x47d5:
case 0x47d6:
case 0x47d7:
case 0x49d0:
case 0x49d1:
case 0x49d2:
case 0x49d3:
case 0x49d4:
case 0x49d5:
case 0x49d6:
case 0x49d7:
case 0x4bd0:
case 0x4bd1:
case 0x4bd2:
case 0x4bd3:
case 0x4bd4:
case 0x4bd5:
case 0x4bd6:
case 0x4bd7:
case 0x4dd0:
case 0x4dd1:
case 0x4dd2:
case 0x4dd3:
case 0x4dd4:
case 0x4dd5:
case 0x4dd6:
case 0x4dd7:
case 0x4fd0:
case 0x4fd1:
case 0x4fd2:
case 0x4fd3:
case 0x4fd4:
case 0x4fd5:
case 0x4fd6:
case 0x4fd7:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR> src(this, instr_b2_b0); LEA(src, instr_b11_b9);
	}
	break;

case 0x4850:
case 0x4851:
case 0x4852:
case 0x4853:
case 0x4854:
case 0x4855:
case 0x4856:
case 0x4857:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR> src(this, instr_b2_b0); PEA(src);
	}
	break;

case 0x4ed0:
case 0x4ed1:
case 0x4ed2:
case 0x4ed3:
case 0x4ed4:
case 0x4ed5:
case 0x4ed6:
case 0x4ed7:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR> targ(this, instr_b2_b0); JMP(targ);
	}
	break;

case 0x4e90:
case 0x4e91:
case 0x4e92:
case 0x4e93:
case 0x4e94:
case 0x4e95:
case 0x4e96:
case 0x4e97:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR> targ(this, instr_b2_b0); JSR(targ);
	}
	break;

case 0x41e8:
case 0x41e9:
case 0x41ea:
case 0x41eb:
case 0x41ec:
case 0x41ed:
case 0x41ee:
case 0x41ef:
case 0x43e8:
case 0x43e9:
case 0x43ea:
case 0x43eb:
case 0x43ec:
case 0x43ed:
case 0x43ee:
case 0x43ef:
case 0x45e8:
case 0x45e9:
case 0x45ea:
case 0x45eb:
case 0x45ec:
case 0x45ed:
case 0x45ee:
case 0x45ef:
case 0x47e8:
case 0x47e9:
case 0x47ea:
case 0x47eb:
case 0x47ec:
case 0x47ed:
case 0x47ee:
case 0x47ef:
case 0x49e8:
case 0x49e9:
case 0x49ea:
case 0x49eb:
case 0x49ec:
case 0x49ed:
case 0x49ee:
case 0x49ef:
case 0x4be8:
case 0x4be9:
case 0x4bea:
case 0x4beb:
case 0x4bec:
case 0x4bed:
case 0x4bee:
case 0x4bef:
case 0x4de8:
case 0x4de9:
case 0x4dea:
case 0x4deb:
case 0x4dec:
case 0x4ded:
case 0x4dee:
case 0x4def:
case 0x4fe8:
case 0x4fe9:
case 0x4fea:
case 0x4feb:
case 0x4fec:
case 0x4fed:
case 0x4fee:
case 0x4fef:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); LEA(src, instr_b11_b9);
	}
	break;

case 0x4868:
case 0x4869:
case 0x486a:
case 0x486b:
case 0x486c:
case 0x486d:
case 0x486e:
case 0x486f:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); PEA(src);
	}
	break;

case 0x4ee8:
case 0x4ee9:
case 0x4eea:
case 0x4eeb:
case 0x4eec:
case 0x4eed:
case 0x4eee:
case 0x4eef:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); JMP(targ);
	}
	break;

case 0x4ea8:
case 0x4ea9:
case 0x4eaa:
case 0x4eab:
case 0x4eac:
case 0x4ead:
case 0x4eae:
case 0x4eaf:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); JSR(targ);
	}
	break;

case 0x41f0:
case 0x41f1:
case 0x41f2:
case 0x41f3:
case 0x41f4:
case 0x41f5:
case 0x41f6:
case 0x41f7:
case 0x43f0:
case 0x43f1:
case 0x43f2:
case 0x43f3:
case 0x43f4:
case 0x43f5:
case 0x43f6:
case 0x43f7:
case 0x45f0:
case 0x45f1:
case 0x45f2:
case 0x45f3:
case 0x45f4:
case 0x45f5:
case 0x45f6:
case 0x45f7:
case 0x47f0:
case 0x47f1:
case 0x47f2:
case 0x47f3:
case 0x47f4:
case 0x47f5:
case 0x47f6:
case 0x47f7:
case 0x49f0:
case 0x49f1:
case 0x49f2:
case 0x49f3:
case 0x49f4:
case 0x49f5:
case 0x49f6:
case 0x49f7:
case 0x4bf0:
case 0x4bf1:
case 0x4bf2:
case 0x4bf3:
case 0x4bf4:
case 0x4bf5:
case 0x4bf6:
case 0x4bf7:
case 0x4df0:
case 0x4df1:
case 0x4df2:
case 0x4df3:
case 0x4df4:
case 0x4df5:
case 0x4df6:
case 0x4df7:
case 0x4ff0:
case 0x4ff1:
case 0x4ff2:
case 0x4ff3:
case 0x4ff4:
case 0x4ff5:
case 0x4ff6:
case 0x4ff7:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); LEA(src, instr_b11_b9);
	}
	break;

case 0x4870:
case 0x4871:
case 0x4872:
case 0x4873:
case 0x4874:
case 0x4875:
case 0x4876:
case 0x4877:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); PEA(src);
	}
	break;

case 0x4ef0:
case 0x4ef1:
case 0x4ef2:
case 0x4ef3:
case 0x4ef4:
case 0x4ef5:
case 0x4ef6:
case 0x4ef7:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); JMP(targ);
	}
	break;

case 0x4eb0:
case 0x4eb1:
case 0x4eb2:
case 0x4eb3:
case 0x4eb4:
case 0x4eb5:
case 0x4eb6:
case 0x4eb7:
	{
	 HAM<std::tuple<>, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); JSR(targ);
	}
	break;

case 0x41fa:
case 0x43fa:
case 0x45fa:
case 0x47fa:
case 0x49fa:
case 0x4bfa:
case 0x4dfa:
case 0x4ffa:
	{
	 HAM<std::tuple<>, PC_DISP> src(this); LEA(src, instr_b11_b9);
	}
	break;

case 0x487a:
	{
	 HAM<std::tuple<>, PC_DISP> src(this); PEA(src);
	}
	break;

case 0x4efa:
	{
	 HAM<std::tuple<>, PC_DISP> targ(this); JMP(targ);
	}
	break;

case 0x4eba:
	{
	 HAM<std::tuple<>, PC_DISP> targ(this); JSR(targ);
	}
	break;

case 0x41fb:
case 0x43fb:
case 0x45fb:
case 0x47fb:
case 0x49fb:
case 0x4bfb:
case 0x4dfb:
case 0x4ffb:
	{
	 HAM<std::tuple<>, PC_INDEX> src(this); LEA(src, instr_b11_b9);
	}
	break;

case 0x487b:
	{
	 HAM<std::tuple<>, PC_INDEX> src(this); PEA(src);
	}
	break;

case 0x4efb:
	{
	 HAM<std::tuple<>, PC_INDEX> targ(this); JMP(targ);
	}
	break;

case 0x4ebb:
	{
	 HAM<std::tuple<>, PC_INDEX> targ(this); JSR(targ);
	}
	break;

case 0x4279:
	{
	 HAM<uint16, ABS_LONG> dst(this); CLR(dst);
	}
	break;

case 0x4479:
	{
	 HAM<uint16, ABS_LONG> dst(this); NEG(dst);
	}
	break;

case 0x4079:
	{
	 HAM<uint16, ABS_LONG> dst(this); NEGX(dst);
	}
	break;

case 0x4679:
	{
	 HAM<uint16, ABS_LONG> dst(this); NOT(dst);
	}
	break;

case 0x4a79:
	{
	 HAM<uint16, ABS_LONG> dst(this); TST(dst);
	}
	break;

case 0x81f9:
case 0x83f9:
case 0x85f9:
case 0x87f9:
case 0x89f9:
case 0x8bf9:
case 0x8df9:
case 0x8ff9:
	{
	 HAM<uint16, ABS_LONG> src(this); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80f9:
case 0x82f9:
case 0x84f9:
case 0x86f9:
case 0x88f9:
case 0x8af9:
case 0x8cf9:
case 0x8ef9:
	{
	 HAM<uint16, ABS_LONG> src(this); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33f9:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31f9:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x30b9:
case 0x32b9:
case 0x34b9:
case 0x36b9:
case 0x38b9:
case 0x3ab9:
case 0x3cb9:
case 0x3eb9:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3179:
case 0x3379:
case 0x3579:
case 0x3779:
case 0x3979:
case 0x3b79:
case 0x3d79:
case 0x3f79:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x31b9:
case 0x33b9:
case 0x35b9:
case 0x37b9:
case 0x39b9:
case 0x3bb9:
case 0x3db9:
case 0x3fb9:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30f9:
case 0x32f9:
case 0x34f9:
case 0x36f9:
case 0x38f9:
case 0x3af9:
case 0x3cf9:
case 0x3ef9:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3139:
case 0x3339:
case 0x3539:
case 0x3739:
case 0x3939:
case 0x3b39:
case 0x3d39:
case 0x3f39:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd079:
case 0xd279:
case 0xd479:
case 0xd679:
case 0xd879:
case 0xda79:
case 0xdc79:
case 0xde79:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc079:
case 0xc279:
case 0xc479:
case 0xc679:
case 0xc879:
case 0xca79:
case 0xcc79:
case 0xce79:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x41b9:
case 0x43b9:
case 0x45b9:
case 0x47b9:
case 0x49b9:
case 0x4bb9:
case 0x4db9:
case 0x4fb9:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb079:
case 0xb279:
case 0xb479:
case 0xb679:
case 0xb879:
case 0xba79:
case 0xbc79:
case 0xbe79:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x3039:
case 0x3239:
case 0x3439:
case 0x3639:
case 0x3839:
case 0x3a39:
case 0x3c39:
case 0x3e39:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8079:
case 0x8279:
case 0x8479:
case 0x8679:
case 0x8879:
case 0x8a79:
case 0x8c79:
case 0x8e79:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9079:
case 0x9279:
case 0x9479:
case 0x9679:
case 0x9879:
case 0x9a79:
case 0x9c79:
case 0x9e79:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0f9:
case 0xd2f9:
case 0xd4f9:
case 0xd6f9:
case 0xd8f9:
case 0xdaf9:
case 0xdcf9:
case 0xdef9:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0f9:
case 0xb2f9:
case 0xb4f9:
case 0xb6f9:
case 0xb8f9:
case 0xbaf9:
case 0xbcf9:
case 0xbef9:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90f9:
case 0x92f9:
case 0x94f9:
case 0x96f9:
case 0x98f9:
case 0x9af9:
case 0x9cf9:
case 0x9ef9:
	{
	 HAM<uint16, ABS_LONG> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x3079:
case 0x3279:
case 0x3479:
case 0x3679:
case 0x3879:
case 0x3a79:
case 0x3c79:
case 0x3e79:
	{
	 HAM<uint16, ABS_LONG> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44f9:
	{
	 HAM<uint16, ABS_LONG> src(this); MOVE_to_CCR(src);
	}
	break;

case 0xc1f9:
case 0xc3f9:
case 0xc5f9:
case 0xc7f9:
case 0xc9f9:
case 0xcbf9:
case 0xcdf9:
case 0xcff9:
	{
	 HAM<uint16, ABS_LONG> src(this); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0f9:
case 0xc2f9:
case 0xc4f9:
case 0xc6f9:
case 0xc8f9:
case 0xcaf9:
case 0xccf9:
case 0xcef9:
	{
	 HAM<uint16, ABS_LONG> src(this); MULU(src, instr_b11_b9);
	}
	break;

case 0xe1f9:
	{
	 HAM<uint16, ABS_LONG> targ(this); ASL(targ, 1);
	}
	break;

case 0xe0f9:
	{
	 HAM<uint16, ABS_LONG> targ(this); ASR(targ, 1);
	}
	break;

case 0xe3f9:
	{
	 HAM<uint16, ABS_LONG> targ(this); LSL(targ, 1);
	}
	break;

case 0xe2f9:
	{
	 HAM<uint16, ABS_LONG> targ(this); LSR(targ, 1);
	}
	break;

case 0xe7f9:
	{
	 HAM<uint16, ABS_LONG> targ(this); ROL(targ, 1);
	}
	break;

case 0xe6f9:
	{
	 HAM<uint16, ABS_LONG> targ(this); ROR(targ, 1);
	}
	break;

case 0xe5f9:
	{
	 HAM<uint16, ABS_LONG> targ(this); ROXL(targ, 1);
	}
	break;

case 0xe4f9:
	{
	 HAM<uint16, ABS_LONG> targ(this); ROXR(targ, 1);
	}
	break;

case 0x4278:
	{
	 HAM<uint16, ABS_SHORT> dst(this); CLR(dst);
	}
	break;

case 0x4478:
	{
	 HAM<uint16, ABS_SHORT> dst(this); NEG(dst);
	}
	break;

case 0x4078:
	{
	 HAM<uint16, ABS_SHORT> dst(this); NEGX(dst);
	}
	break;

case 0x4678:
	{
	 HAM<uint16, ABS_SHORT> dst(this); NOT(dst);
	}
	break;

case 0x4a78:
	{
	 HAM<uint16, ABS_SHORT> dst(this); TST(dst);
	}
	break;

case 0x81f8:
case 0x83f8:
case 0x85f8:
case 0x87f8:
case 0x89f8:
case 0x8bf8:
case 0x8df8:
case 0x8ff8:
	{
	 HAM<uint16, ABS_SHORT> src(this); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80f8:
case 0x82f8:
case 0x84f8:
case 0x86f8:
case 0x88f8:
case 0x8af8:
case 0x8cf8:
case 0x8ef8:
	{
	 HAM<uint16, ABS_SHORT> src(this); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33f8:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31f8:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x30b8:
case 0x32b8:
case 0x34b8:
case 0x36b8:
case 0x38b8:
case 0x3ab8:
case 0x3cb8:
case 0x3eb8:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3178:
case 0x3378:
case 0x3578:
case 0x3778:
case 0x3978:
case 0x3b78:
case 0x3d78:
case 0x3f78:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x31b8:
case 0x33b8:
case 0x35b8:
case 0x37b8:
case 0x39b8:
case 0x3bb8:
case 0x3db8:
case 0x3fb8:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30f8:
case 0x32f8:
case 0x34f8:
case 0x36f8:
case 0x38f8:
case 0x3af8:
case 0x3cf8:
case 0x3ef8:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3138:
case 0x3338:
case 0x3538:
case 0x3738:
case 0x3938:
case 0x3b38:
case 0x3d38:
case 0x3f38:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd078:
case 0xd278:
case 0xd478:
case 0xd678:
case 0xd878:
case 0xda78:
case 0xdc78:
case 0xde78:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc078:
case 0xc278:
case 0xc478:
case 0xc678:
case 0xc878:
case 0xca78:
case 0xcc78:
case 0xce78:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x41b8:
case 0x43b8:
case 0x45b8:
case 0x47b8:
case 0x49b8:
case 0x4bb8:
case 0x4db8:
case 0x4fb8:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb078:
case 0xb278:
case 0xb478:
case 0xb678:
case 0xb878:
case 0xba78:
case 0xbc78:
case 0xbe78:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x3038:
case 0x3238:
case 0x3438:
case 0x3638:
case 0x3838:
case 0x3a38:
case 0x3c38:
case 0x3e38:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8078:
case 0x8278:
case 0x8478:
case 0x8678:
case 0x8878:
case 0x8a78:
case 0x8c78:
case 0x8e78:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9078:
case 0x9278:
case 0x9478:
case 0x9678:
case 0x9878:
case 0x9a78:
case 0x9c78:
case 0x9e78:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0f8:
case 0xd2f8:
case 0xd4f8:
case 0xd6f8:
case 0xd8f8:
case 0xdaf8:
case 0xdcf8:
case 0xdef8:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0f8:
case 0xb2f8:
case 0xb4f8:
case 0xb6f8:
case 0xb8f8:
case 0xbaf8:
case 0xbcf8:
case 0xbef8:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90f8:
case 0x92f8:
case 0x94f8:
case 0x96f8:
case 0x98f8:
case 0x9af8:
case 0x9cf8:
case 0x9ef8:
	{
	 HAM<uint16, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x3078:
case 0x3278:
case 0x3478:
case 0x3678:
case 0x3878:
case 0x3a78:
case 0x3c78:
case 0x3e78:
	{
	 HAM<uint16, ABS_SHORT> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44f8:
	{
	 HAM<uint16, ABS_SHORT> src(this); MOVE_to_CCR(src);
	}
	break;

case 0xc1f8:
case 0xc3f8:
case 0xc5f8:
case 0xc7f8:
case 0xc9f8:
case 0xcbf8:
case 0xcdf8:
case 0xcff8:
	{
	 HAM<uint16, ABS_SHORT> src(this); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0f8:
case 0xc2f8:
case 0xc4f8:
case 0xc6f8:
case 0xc8f8:
case 0xcaf8:
case 0xccf8:
case 0xcef8:
	{
	 HAM<uint16, ABS_SHORT> src(this); MULU(src, instr_b11_b9);
	}
	break;

case 0xe1f8:
	{
	 HAM<uint16, ABS_SHORT> targ(this); ASL(targ, 1);
	}
	break;

case 0xe0f8:
	{
	 HAM<uint16, ABS_SHORT> targ(this); ASR(targ, 1);
	}
	break;

case 0xe3f8:
	{
	 HAM<uint16, ABS_SHORT> targ(this); LSL(targ, 1);
	}
	break;

case 0xe2f8:
	{
	 HAM<uint16, ABS_SHORT> targ(this); LSR(targ, 1);
	}
	break;

case 0xe7f8:
	{
	 HAM<uint16, ABS_SHORT> targ(this); ROL(targ, 1);
	}
	break;

case 0xe6f8:
	{
	 HAM<uint16, ABS_SHORT> targ(this); ROR(targ, 1);
	}
	break;

case 0xe5f8:
	{
	 HAM<uint16, ABS_SHORT> targ(this); ROXL(targ, 1);
	}
	break;

case 0xe4f8:
	{
	 HAM<uint16, ABS_SHORT> targ(this); ROXR(targ, 1);
	}
	break;

case 0x33c8:
case 0x33c9:
case 0x33ca:
case 0x33cb:
case 0x33cc:
case 0x33cd:
case 0x33ce:
case 0x33cf:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31c8:
case 0x31c9:
case 0x31ca:
case 0x31cb:
case 0x31cc:
case 0x31cd:
case 0x31ce:
case 0x31cf:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x3088:
case 0x3089:
case 0x308a:
case 0x308b:
case 0x308c:
case 0x308d:
case 0x308e:
case 0x308f:
case 0x3288:
case 0x3289:
case 0x328a:
case 0x328b:
case 0x328c:
case 0x328d:
case 0x328e:
case 0x328f:
case 0x3488:
case 0x3489:
case 0x348a:
case 0x348b:
case 0x348c:
case 0x348d:
case 0x348e:
case 0x348f:
case 0x3688:
case 0x3689:
case 0x368a:
case 0x368b:
case 0x368c:
case 0x368d:
case 0x368e:
case 0x368f:
case 0x3888:
case 0x3889:
case 0x388a:
case 0x388b:
case 0x388c:
case 0x388d:
case 0x388e:
case 0x388f:
case 0x3a88:
case 0x3a89:
case 0x3a8a:
case 0x3a8b:
case 0x3a8c:
case 0x3a8d:
case 0x3a8e:
case 0x3a8f:
case 0x3c88:
case 0x3c89:
case 0x3c8a:
case 0x3c8b:
case 0x3c8c:
case 0x3c8d:
case 0x3c8e:
case 0x3c8f:
case 0x3e88:
case 0x3e89:
case 0x3e8a:
case 0x3e8b:
case 0x3e8c:
case 0x3e8d:
case 0x3e8e:
case 0x3e8f:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3148:
case 0x3149:
case 0x314a:
case 0x314b:
case 0x314c:
case 0x314d:
case 0x314e:
case 0x314f:
case 0x3348:
case 0x3349:
case 0x334a:
case 0x334b:
case 0x334c:
case 0x334d:
case 0x334e:
case 0x334f:
case 0x3548:
case 0x3549:
case 0x354a:
case 0x354b:
case 0x354c:
case 0x354d:
case 0x354e:
case 0x354f:
case 0x3748:
case 0x3749:
case 0x374a:
case 0x374b:
case 0x374c:
case 0x374d:
case 0x374e:
case 0x374f:
case 0x3948:
case 0x3949:
case 0x394a:
case 0x394b:
case 0x394c:
case 0x394d:
case 0x394e:
case 0x394f:
case 0x3b48:
case 0x3b49:
case 0x3b4a:
case 0x3b4b:
case 0x3b4c:
case 0x3b4d:
case 0x3b4e:
case 0x3b4f:
case 0x3d48:
case 0x3d49:
case 0x3d4a:
case 0x3d4b:
case 0x3d4c:
case 0x3d4d:
case 0x3d4e:
case 0x3d4f:
case 0x3f48:
case 0x3f49:
case 0x3f4a:
case 0x3f4b:
case 0x3f4c:
case 0x3f4d:
case 0x3f4e:
case 0x3f4f:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3188:
case 0x3189:
case 0x318a:
case 0x318b:
case 0x318c:
case 0x318d:
case 0x318e:
case 0x318f:
case 0x3388:
case 0x3389:
case 0x338a:
case 0x338b:
case 0x338c:
case 0x338d:
case 0x338e:
case 0x338f:
case 0x3588:
case 0x3589:
case 0x358a:
case 0x358b:
case 0x358c:
case 0x358d:
case 0x358e:
case 0x358f:
case 0x3788:
case 0x3789:
case 0x378a:
case 0x378b:
case 0x378c:
case 0x378d:
case 0x378e:
case 0x378f:
case 0x3988:
case 0x3989:
case 0x398a:
case 0x398b:
case 0x398c:
case 0x398d:
case 0x398e:
case 0x398f:
case 0x3b88:
case 0x3b89:
case 0x3b8a:
case 0x3b8b:
case 0x3b8c:
case 0x3b8d:
case 0x3b8e:
case 0x3b8f:
case 0x3d88:
case 0x3d89:
case 0x3d8a:
case 0x3d8b:
case 0x3d8c:
case 0x3d8d:
case 0x3d8e:
case 0x3d8f:
case 0x3f88:
case 0x3f89:
case 0x3f8a:
case 0x3f8b:
case 0x3f8c:
case 0x3f8d:
case 0x3f8e:
case 0x3f8f:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30c8:
case 0x30c9:
case 0x30ca:
case 0x30cb:
case 0x30cc:
case 0x30cd:
case 0x30ce:
case 0x30cf:
case 0x32c8:
case 0x32c9:
case 0x32ca:
case 0x32cb:
case 0x32cc:
case 0x32cd:
case 0x32ce:
case 0x32cf:
case 0x34c8:
case 0x34c9:
case 0x34ca:
case 0x34cb:
case 0x34cc:
case 0x34cd:
case 0x34ce:
case 0x34cf:
case 0x36c8:
case 0x36c9:
case 0x36ca:
case 0x36cb:
case 0x36cc:
case 0x36cd:
case 0x36ce:
case 0x36cf:
case 0x38c8:
case 0x38c9:
case 0x38ca:
case 0x38cb:
case 0x38cc:
case 0x38cd:
case 0x38ce:
case 0x38cf:
case 0x3ac8:
case 0x3ac9:
case 0x3aca:
case 0x3acb:
case 0x3acc:
case 0x3acd:
case 0x3ace:
case 0x3acf:
case 0x3cc8:
case 0x3cc9:
case 0x3cca:
case 0x3ccb:
case 0x3ccc:
case 0x3ccd:
case 0x3cce:
case 0x3ccf:
case 0x3ec8:
case 0x3ec9:
case 0x3eca:
case 0x3ecb:
case 0x3ecc:
case 0x3ecd:
case 0x3ece:
case 0x3ecf:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3108:
case 0x3109:
case 0x310a:
case 0x310b:
case 0x310c:
case 0x310d:
case 0x310e:
case 0x310f:
case 0x3308:
case 0x3309:
case 0x330a:
case 0x330b:
case 0x330c:
case 0x330d:
case 0x330e:
case 0x330f:
case 0x3508:
case 0x3509:
case 0x350a:
case 0x350b:
case 0x350c:
case 0x350d:
case 0x350e:
case 0x350f:
case 0x3708:
case 0x3709:
case 0x370a:
case 0x370b:
case 0x370c:
case 0x370d:
case 0x370e:
case 0x370f:
case 0x3908:
case 0x3909:
case 0x390a:
case 0x390b:
case 0x390c:
case 0x390d:
case 0x390e:
case 0x390f:
case 0x3b08:
case 0x3b09:
case 0x3b0a:
case 0x3b0b:
case 0x3b0c:
case 0x3b0d:
case 0x3b0e:
case 0x3b0f:
case 0x3d08:
case 0x3d09:
case 0x3d0a:
case 0x3d0b:
case 0x3d0c:
case 0x3d0d:
case 0x3d0e:
case 0x3d0f:
case 0x3f08:
case 0x3f09:
case 0x3f0a:
case 0x3f0b:
case 0x3f0c:
case 0x3f0d:
case 0x3f0e:
case 0x3f0f:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd048:
case 0xd049:
case 0xd04a:
case 0xd04b:
case 0xd04c:
case 0xd04d:
case 0xd04e:
case 0xd04f:
case 0xd248:
case 0xd249:
case 0xd24a:
case 0xd24b:
case 0xd24c:
case 0xd24d:
case 0xd24e:
case 0xd24f:
case 0xd448:
case 0xd449:
case 0xd44a:
case 0xd44b:
case 0xd44c:
case 0xd44d:
case 0xd44e:
case 0xd44f:
case 0xd648:
case 0xd649:
case 0xd64a:
case 0xd64b:
case 0xd64c:
case 0xd64d:
case 0xd64e:
case 0xd64f:
case 0xd848:
case 0xd849:
case 0xd84a:
case 0xd84b:
case 0xd84c:
case 0xd84d:
case 0xd84e:
case 0xd84f:
case 0xda48:
case 0xda49:
case 0xda4a:
case 0xda4b:
case 0xda4c:
case 0xda4d:
case 0xda4e:
case 0xda4f:
case 0xdc48:
case 0xdc49:
case 0xdc4a:
case 0xdc4b:
case 0xdc4c:
case 0xdc4d:
case 0xdc4e:
case 0xdc4f:
case 0xde48:
case 0xde49:
case 0xde4a:
case 0xde4b:
case 0xde4c:
case 0xde4d:
case 0xde4e:
case 0xde4f:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb048:
case 0xb049:
case 0xb04a:
case 0xb04b:
case 0xb04c:
case 0xb04d:
case 0xb04e:
case 0xb04f:
case 0xb248:
case 0xb249:
case 0xb24a:
case 0xb24b:
case 0xb24c:
case 0xb24d:
case 0xb24e:
case 0xb24f:
case 0xb448:
case 0xb449:
case 0xb44a:
case 0xb44b:
case 0xb44c:
case 0xb44d:
case 0xb44e:
case 0xb44f:
case 0xb648:
case 0xb649:
case 0xb64a:
case 0xb64b:
case 0xb64c:
case 0xb64d:
case 0xb64e:
case 0xb64f:
case 0xb848:
case 0xb849:
case 0xb84a:
case 0xb84b:
case 0xb84c:
case 0xb84d:
case 0xb84e:
case 0xb84f:
case 0xba48:
case 0xba49:
case 0xba4a:
case 0xba4b:
case 0xba4c:
case 0xba4d:
case 0xba4e:
case 0xba4f:
case 0xbc48:
case 0xbc49:
case 0xbc4a:
case 0xbc4b:
case 0xbc4c:
case 0xbc4d:
case 0xbc4e:
case 0xbc4f:
case 0xbe48:
case 0xbe49:
case 0xbe4a:
case 0xbe4b:
case 0xbe4c:
case 0xbe4d:
case 0xbe4e:
case 0xbe4f:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x3008:
case 0x3009:
case 0x300a:
case 0x300b:
case 0x300c:
case 0x300d:
case 0x300e:
case 0x300f:
case 0x3208:
case 0x3209:
case 0x320a:
case 0x320b:
case 0x320c:
case 0x320d:
case 0x320e:
case 0x320f:
case 0x3408:
case 0x3409:
case 0x340a:
case 0x340b:
case 0x340c:
case 0x340d:
case 0x340e:
case 0x340f:
case 0x3608:
case 0x3609:
case 0x360a:
case 0x360b:
case 0x360c:
case 0x360d:
case 0x360e:
case 0x360f:
case 0x3808:
case 0x3809:
case 0x380a:
case 0x380b:
case 0x380c:
case 0x380d:
case 0x380e:
case 0x380f:
case 0x3a08:
case 0x3a09:
case 0x3a0a:
case 0x3a0b:
case 0x3a0c:
case 0x3a0d:
case 0x3a0e:
case 0x3a0f:
case 0x3c08:
case 0x3c09:
case 0x3c0a:
case 0x3c0b:
case 0x3c0c:
case 0x3c0d:
case 0x3c0e:
case 0x3c0f:
case 0x3e08:
case 0x3e09:
case 0x3e0a:
case 0x3e0b:
case 0x3e0c:
case 0x3e0d:
case 0x3e0e:
case 0x3e0f:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x9048:
case 0x9049:
case 0x904a:
case 0x904b:
case 0x904c:
case 0x904d:
case 0x904e:
case 0x904f:
case 0x9248:
case 0x9249:
case 0x924a:
case 0x924b:
case 0x924c:
case 0x924d:
case 0x924e:
case 0x924f:
case 0x9448:
case 0x9449:
case 0x944a:
case 0x944b:
case 0x944c:
case 0x944d:
case 0x944e:
case 0x944f:
case 0x9648:
case 0x9649:
case 0x964a:
case 0x964b:
case 0x964c:
case 0x964d:
case 0x964e:
case 0x964f:
case 0x9848:
case 0x9849:
case 0x984a:
case 0x984b:
case 0x984c:
case 0x984d:
case 0x984e:
case 0x984f:
case 0x9a48:
case 0x9a49:
case 0x9a4a:
case 0x9a4b:
case 0x9a4c:
case 0x9a4d:
case 0x9a4e:
case 0x9a4f:
case 0x9c48:
case 0x9c49:
case 0x9c4a:
case 0x9c4b:
case 0x9c4c:
case 0x9c4d:
case 0x9c4e:
case 0x9c4f:
case 0x9e48:
case 0x9e49:
case 0x9e4a:
case 0x9e4b:
case 0x9e4c:
case 0x9e4d:
case 0x9e4e:
case 0x9e4f:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0c8:
case 0xd0c9:
case 0xd0ca:
case 0xd0cb:
case 0xd0cc:
case 0xd0cd:
case 0xd0ce:
case 0xd0cf:
case 0xd2c8:
case 0xd2c9:
case 0xd2ca:
case 0xd2cb:
case 0xd2cc:
case 0xd2cd:
case 0xd2ce:
case 0xd2cf:
case 0xd4c8:
case 0xd4c9:
case 0xd4ca:
case 0xd4cb:
case 0xd4cc:
case 0xd4cd:
case 0xd4ce:
case 0xd4cf:
case 0xd6c8:
case 0xd6c9:
case 0xd6ca:
case 0xd6cb:
case 0xd6cc:
case 0xd6cd:
case 0xd6ce:
case 0xd6cf:
case 0xd8c8:
case 0xd8c9:
case 0xd8ca:
case 0xd8cb:
case 0xd8cc:
case 0xd8cd:
case 0xd8ce:
case 0xd8cf:
case 0xdac8:
case 0xdac9:
case 0xdaca:
case 0xdacb:
case 0xdacc:
case 0xdacd:
case 0xdace:
case 0xdacf:
case 0xdcc8:
case 0xdcc9:
case 0xdcca:
case 0xdccb:
case 0xdccc:
case 0xdccd:
case 0xdcce:
case 0xdccf:
case 0xdec8:
case 0xdec9:
case 0xdeca:
case 0xdecb:
case 0xdecc:
case 0xdecd:
case 0xdece:
case 0xdecf:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0c8:
case 0xb0c9:
case 0xb0ca:
case 0xb0cb:
case 0xb0cc:
case 0xb0cd:
case 0xb0ce:
case 0xb0cf:
case 0xb2c8:
case 0xb2c9:
case 0xb2ca:
case 0xb2cb:
case 0xb2cc:
case 0xb2cd:
case 0xb2ce:
case 0xb2cf:
case 0xb4c8:
case 0xb4c9:
case 0xb4ca:
case 0xb4cb:
case 0xb4cc:
case 0xb4cd:
case 0xb4ce:
case 0xb4cf:
case 0xb6c8:
case 0xb6c9:
case 0xb6ca:
case 0xb6cb:
case 0xb6cc:
case 0xb6cd:
case 0xb6ce:
case 0xb6cf:
case 0xb8c8:
case 0xb8c9:
case 0xb8ca:
case 0xb8cb:
case 0xb8cc:
case 0xb8cd:
case 0xb8ce:
case 0xb8cf:
case 0xbac8:
case 0xbac9:
case 0xbaca:
case 0xbacb:
case 0xbacc:
case 0xbacd:
case 0xbace:
case 0xbacf:
case 0xbcc8:
case 0xbcc9:
case 0xbcca:
case 0xbccb:
case 0xbccc:
case 0xbccd:
case 0xbcce:
case 0xbccf:
case 0xbec8:
case 0xbec9:
case 0xbeca:
case 0xbecb:
case 0xbecc:
case 0xbecd:
case 0xbece:
case 0xbecf:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90c8:
case 0x90c9:
case 0x90ca:
case 0x90cb:
case 0x90cc:
case 0x90cd:
case 0x90ce:
case 0x90cf:
case 0x92c8:
case 0x92c9:
case 0x92ca:
case 0x92cb:
case 0x92cc:
case 0x92cd:
case 0x92ce:
case 0x92cf:
case 0x94c8:
case 0x94c9:
case 0x94ca:
case 0x94cb:
case 0x94cc:
case 0x94cd:
case 0x94ce:
case 0x94cf:
case 0x96c8:
case 0x96c9:
case 0x96ca:
case 0x96cb:
case 0x96cc:
case 0x96cd:
case 0x96ce:
case 0x96cf:
case 0x98c8:
case 0x98c9:
case 0x98ca:
case 0x98cb:
case 0x98cc:
case 0x98cd:
case 0x98ce:
case 0x98cf:
case 0x9ac8:
case 0x9ac9:
case 0x9aca:
case 0x9acb:
case 0x9acc:
case 0x9acd:
case 0x9ace:
case 0x9acf:
case 0x9cc8:
case 0x9cc9:
case 0x9cca:
case 0x9ccb:
case 0x9ccc:
case 0x9ccd:
case 0x9cce:
case 0x9ccf:
case 0x9ec8:
case 0x9ec9:
case 0x9eca:
case 0x9ecb:
case 0x9ecc:
case 0x9ecd:
case 0x9ece:
case 0x9ecf:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x3048:
case 0x3049:
case 0x304a:
case 0x304b:
case 0x304c:
case 0x304d:
case 0x304e:
case 0x304f:
case 0x3248:
case 0x3249:
case 0x324a:
case 0x324b:
case 0x324c:
case 0x324d:
case 0x324e:
case 0x324f:
case 0x3448:
case 0x3449:
case 0x344a:
case 0x344b:
case 0x344c:
case 0x344d:
case 0x344e:
case 0x344f:
case 0x3648:
case 0x3649:
case 0x364a:
case 0x364b:
case 0x364c:
case 0x364d:
case 0x364e:
case 0x364f:
case 0x3848:
case 0x3849:
case 0x384a:
case 0x384b:
case 0x384c:
case 0x384d:
case 0x384e:
case 0x384f:
case 0x3a48:
case 0x3a49:
case 0x3a4a:
case 0x3a4b:
case 0x3a4c:
case 0x3a4d:
case 0x3a4e:
case 0x3a4f:
case 0x3c48:
case 0x3c49:
case 0x3c4a:
case 0x3c4b:
case 0x3c4c:
case 0x3c4d:
case 0x3c4e:
case 0x3c4f:
case 0x3e48:
case 0x3e49:
case 0x3e4a:
case 0x3e4b:
case 0x3e4c:
case 0x3e4d:
case 0x3e4e:
case 0x3e4f:
	{
	 HAM<uint16, ADDR_REG_DIR> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x4250:
case 0x4251:
case 0x4252:
case 0x4253:
case 0x4254:
case 0x4255:
case 0x4256:
case 0x4257:
	{
	 HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4450:
case 0x4451:
case 0x4452:
case 0x4453:
case 0x4454:
case 0x4455:
case 0x4456:
case 0x4457:
	{
	 HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4050:
case 0x4051:
case 0x4052:
case 0x4053:
case 0x4054:
case 0x4055:
case 0x4056:
case 0x4057:
	{
	 HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4650:
case 0x4651:
case 0x4652:
case 0x4653:
case 0x4654:
case 0x4655:
case 0x4656:
case 0x4657:
	{
	 HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4a50:
case 0x4a51:
case 0x4a52:
case 0x4a53:
case 0x4a54:
case 0x4a55:
case 0x4a56:
case 0x4a57:
	{
	 HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x81d0:
case 0x81d1:
case 0x81d2:
case 0x81d3:
case 0x81d4:
case 0x81d5:
case 0x81d6:
case 0x81d7:
case 0x83d0:
case 0x83d1:
case 0x83d2:
case 0x83d3:
case 0x83d4:
case 0x83d5:
case 0x83d6:
case 0x83d7:
case 0x85d0:
case 0x85d1:
case 0x85d2:
case 0x85d3:
case 0x85d4:
case 0x85d5:
case 0x85d6:
case 0x85d7:
case 0x87d0:
case 0x87d1:
case 0x87d2:
case 0x87d3:
case 0x87d4:
case 0x87d5:
case 0x87d6:
case 0x87d7:
case 0x89d0:
case 0x89d1:
case 0x89d2:
case 0x89d3:
case 0x89d4:
case 0x89d5:
case 0x89d6:
case 0x89d7:
case 0x8bd0:
case 0x8bd1:
case 0x8bd2:
case 0x8bd3:
case 0x8bd4:
case 0x8bd5:
case 0x8bd6:
case 0x8bd7:
case 0x8dd0:
case 0x8dd1:
case 0x8dd2:
case 0x8dd3:
case 0x8dd4:
case 0x8dd5:
case 0x8dd6:
case 0x8dd7:
case 0x8fd0:
case 0x8fd1:
case 0x8fd2:
case 0x8fd3:
case 0x8fd4:
case 0x8fd5:
case 0x8fd6:
case 0x8fd7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80d0:
case 0x80d1:
case 0x80d2:
case 0x80d3:
case 0x80d4:
case 0x80d5:
case 0x80d6:
case 0x80d7:
case 0x82d0:
case 0x82d1:
case 0x82d2:
case 0x82d3:
case 0x82d4:
case 0x82d5:
case 0x82d6:
case 0x82d7:
case 0x84d0:
case 0x84d1:
case 0x84d2:
case 0x84d3:
case 0x84d4:
case 0x84d5:
case 0x84d6:
case 0x84d7:
case 0x86d0:
case 0x86d1:
case 0x86d2:
case 0x86d3:
case 0x86d4:
case 0x86d5:
case 0x86d6:
case 0x86d7:
case 0x88d0:
case 0x88d1:
case 0x88d2:
case 0x88d3:
case 0x88d4:
case 0x88d5:
case 0x88d6:
case 0x88d7:
case 0x8ad0:
case 0x8ad1:
case 0x8ad2:
case 0x8ad3:
case 0x8ad4:
case 0x8ad5:
case 0x8ad6:
case 0x8ad7:
case 0x8cd0:
case 0x8cd1:
case 0x8cd2:
case 0x8cd3:
case 0x8cd4:
case 0x8cd5:
case 0x8cd6:
case 0x8cd7:
case 0x8ed0:
case 0x8ed1:
case 0x8ed2:
case 0x8ed3:
case 0x8ed4:
case 0x8ed5:
case 0x8ed6:
case 0x8ed7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33d0:
case 0x33d1:
case 0x33d2:
case 0x33d3:
case 0x33d4:
case 0x33d5:
case 0x33d6:
case 0x33d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31d0:
case 0x31d1:
case 0x31d2:
case 0x31d3:
case 0x31d4:
case 0x31d5:
case 0x31d6:
case 0x31d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x3090:
case 0x3091:
case 0x3092:
case 0x3093:
case 0x3094:
case 0x3095:
case 0x3096:
case 0x3097:
case 0x3290:
case 0x3291:
case 0x3292:
case 0x3293:
case 0x3294:
case 0x3295:
case 0x3296:
case 0x3297:
case 0x3490:
case 0x3491:
case 0x3492:
case 0x3493:
case 0x3494:
case 0x3495:
case 0x3496:
case 0x3497:
case 0x3690:
case 0x3691:
case 0x3692:
case 0x3693:
case 0x3694:
case 0x3695:
case 0x3696:
case 0x3697:
case 0x3890:
case 0x3891:
case 0x3892:
case 0x3893:
case 0x3894:
case 0x3895:
case 0x3896:
case 0x3897:
case 0x3a90:
case 0x3a91:
case 0x3a92:
case 0x3a93:
case 0x3a94:
case 0x3a95:
case 0x3a96:
case 0x3a97:
case 0x3c90:
case 0x3c91:
case 0x3c92:
case 0x3c93:
case 0x3c94:
case 0x3c95:
case 0x3c96:
case 0x3c97:
case 0x3e90:
case 0x3e91:
case 0x3e92:
case 0x3e93:
case 0x3e94:
case 0x3e95:
case 0x3e96:
case 0x3e97:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3150:
case 0x3151:
case 0x3152:
case 0x3153:
case 0x3154:
case 0x3155:
case 0x3156:
case 0x3157:
case 0x3350:
case 0x3351:
case 0x3352:
case 0x3353:
case 0x3354:
case 0x3355:
case 0x3356:
case 0x3357:
case 0x3550:
case 0x3551:
case 0x3552:
case 0x3553:
case 0x3554:
case 0x3555:
case 0x3556:
case 0x3557:
case 0x3750:
case 0x3751:
case 0x3752:
case 0x3753:
case 0x3754:
case 0x3755:
case 0x3756:
case 0x3757:
case 0x3950:
case 0x3951:
case 0x3952:
case 0x3953:
case 0x3954:
case 0x3955:
case 0x3956:
case 0x3957:
case 0x3b50:
case 0x3b51:
case 0x3b52:
case 0x3b53:
case 0x3b54:
case 0x3b55:
case 0x3b56:
case 0x3b57:
case 0x3d50:
case 0x3d51:
case 0x3d52:
case 0x3d53:
case 0x3d54:
case 0x3d55:
case 0x3d56:
case 0x3d57:
case 0x3f50:
case 0x3f51:
case 0x3f52:
case 0x3f53:
case 0x3f54:
case 0x3f55:
case 0x3f56:
case 0x3f57:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3190:
case 0x3191:
case 0x3192:
case 0x3193:
case 0x3194:
case 0x3195:
case 0x3196:
case 0x3197:
case 0x3390:
case 0x3391:
case 0x3392:
case 0x3393:
case 0x3394:
case 0x3395:
case 0x3396:
case 0x3397:
case 0x3590:
case 0x3591:
case 0x3592:
case 0x3593:
case 0x3594:
case 0x3595:
case 0x3596:
case 0x3597:
case 0x3790:
case 0x3791:
case 0x3792:
case 0x3793:
case 0x3794:
case 0x3795:
case 0x3796:
case 0x3797:
case 0x3990:
case 0x3991:
case 0x3992:
case 0x3993:
case 0x3994:
case 0x3995:
case 0x3996:
case 0x3997:
case 0x3b90:
case 0x3b91:
case 0x3b92:
case 0x3b93:
case 0x3b94:
case 0x3b95:
case 0x3b96:
case 0x3b97:
case 0x3d90:
case 0x3d91:
case 0x3d92:
case 0x3d93:
case 0x3d94:
case 0x3d95:
case 0x3d96:
case 0x3d97:
case 0x3f90:
case 0x3f91:
case 0x3f92:
case 0x3f93:
case 0x3f94:
case 0x3f95:
case 0x3f96:
case 0x3f97:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30d0:
case 0x30d1:
case 0x30d2:
case 0x30d3:
case 0x30d4:
case 0x30d5:
case 0x30d6:
case 0x30d7:
case 0x32d0:
case 0x32d1:
case 0x32d2:
case 0x32d3:
case 0x32d4:
case 0x32d5:
case 0x32d6:
case 0x32d7:
case 0x34d0:
case 0x34d1:
case 0x34d2:
case 0x34d3:
case 0x34d4:
case 0x34d5:
case 0x34d6:
case 0x34d7:
case 0x36d0:
case 0x36d1:
case 0x36d2:
case 0x36d3:
case 0x36d4:
case 0x36d5:
case 0x36d6:
case 0x36d7:
case 0x38d0:
case 0x38d1:
case 0x38d2:
case 0x38d3:
case 0x38d4:
case 0x38d5:
case 0x38d6:
case 0x38d7:
case 0x3ad0:
case 0x3ad1:
case 0x3ad2:
case 0x3ad3:
case 0x3ad4:
case 0x3ad5:
case 0x3ad6:
case 0x3ad7:
case 0x3cd0:
case 0x3cd1:
case 0x3cd2:
case 0x3cd3:
case 0x3cd4:
case 0x3cd5:
case 0x3cd6:
case 0x3cd7:
case 0x3ed0:
case 0x3ed1:
case 0x3ed2:
case 0x3ed3:
case 0x3ed4:
case 0x3ed5:
case 0x3ed6:
case 0x3ed7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3110:
case 0x3111:
case 0x3112:
case 0x3113:
case 0x3114:
case 0x3115:
case 0x3116:
case 0x3117:
case 0x3310:
case 0x3311:
case 0x3312:
case 0x3313:
case 0x3314:
case 0x3315:
case 0x3316:
case 0x3317:
case 0x3510:
case 0x3511:
case 0x3512:
case 0x3513:
case 0x3514:
case 0x3515:
case 0x3516:
case 0x3517:
case 0x3710:
case 0x3711:
case 0x3712:
case 0x3713:
case 0x3714:
case 0x3715:
case 0x3716:
case 0x3717:
case 0x3910:
case 0x3911:
case 0x3912:
case 0x3913:
case 0x3914:
case 0x3915:
case 0x3916:
case 0x3917:
case 0x3b10:
case 0x3b11:
case 0x3b12:
case 0x3b13:
case 0x3b14:
case 0x3b15:
case 0x3b16:
case 0x3b17:
case 0x3d10:
case 0x3d11:
case 0x3d12:
case 0x3d13:
case 0x3d14:
case 0x3d15:
case 0x3d16:
case 0x3d17:
case 0x3f10:
case 0x3f11:
case 0x3f12:
case 0x3f13:
case 0x3f14:
case 0x3f15:
case 0x3f16:
case 0x3f17:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd050:
case 0xd051:
case 0xd052:
case 0xd053:
case 0xd054:
case 0xd055:
case 0xd056:
case 0xd057:
case 0xd250:
case 0xd251:
case 0xd252:
case 0xd253:
case 0xd254:
case 0xd255:
case 0xd256:
case 0xd257:
case 0xd450:
case 0xd451:
case 0xd452:
case 0xd453:
case 0xd454:
case 0xd455:
case 0xd456:
case 0xd457:
case 0xd650:
case 0xd651:
case 0xd652:
case 0xd653:
case 0xd654:
case 0xd655:
case 0xd656:
case 0xd657:
case 0xd850:
case 0xd851:
case 0xd852:
case 0xd853:
case 0xd854:
case 0xd855:
case 0xd856:
case 0xd857:
case 0xda50:
case 0xda51:
case 0xda52:
case 0xda53:
case 0xda54:
case 0xda55:
case 0xda56:
case 0xda57:
case 0xdc50:
case 0xdc51:
case 0xdc52:
case 0xdc53:
case 0xdc54:
case 0xdc55:
case 0xdc56:
case 0xdc57:
case 0xde50:
case 0xde51:
case 0xde52:
case 0xde53:
case 0xde54:
case 0xde55:
case 0xde56:
case 0xde57:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc050:
case 0xc051:
case 0xc052:
case 0xc053:
case 0xc054:
case 0xc055:
case 0xc056:
case 0xc057:
case 0xc250:
case 0xc251:
case 0xc252:
case 0xc253:
case 0xc254:
case 0xc255:
case 0xc256:
case 0xc257:
case 0xc450:
case 0xc451:
case 0xc452:
case 0xc453:
case 0xc454:
case 0xc455:
case 0xc456:
case 0xc457:
case 0xc650:
case 0xc651:
case 0xc652:
case 0xc653:
case 0xc654:
case 0xc655:
case 0xc656:
case 0xc657:
case 0xc850:
case 0xc851:
case 0xc852:
case 0xc853:
case 0xc854:
case 0xc855:
case 0xc856:
case 0xc857:
case 0xca50:
case 0xca51:
case 0xca52:
case 0xca53:
case 0xca54:
case 0xca55:
case 0xca56:
case 0xca57:
case 0xcc50:
case 0xcc51:
case 0xcc52:
case 0xcc53:
case 0xcc54:
case 0xcc55:
case 0xcc56:
case 0xcc57:
case 0xce50:
case 0xce51:
case 0xce52:
case 0xce53:
case 0xce54:
case 0xce55:
case 0xce56:
case 0xce57:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x4190:
case 0x4191:
case 0x4192:
case 0x4193:
case 0x4194:
case 0x4195:
case 0x4196:
case 0x4197:
case 0x4390:
case 0x4391:
case 0x4392:
case 0x4393:
case 0x4394:
case 0x4395:
case 0x4396:
case 0x4397:
case 0x4590:
case 0x4591:
case 0x4592:
case 0x4593:
case 0x4594:
case 0x4595:
case 0x4596:
case 0x4597:
case 0x4790:
case 0x4791:
case 0x4792:
case 0x4793:
case 0x4794:
case 0x4795:
case 0x4796:
case 0x4797:
case 0x4990:
case 0x4991:
case 0x4992:
case 0x4993:
case 0x4994:
case 0x4995:
case 0x4996:
case 0x4997:
case 0x4b90:
case 0x4b91:
case 0x4b92:
case 0x4b93:
case 0x4b94:
case 0x4b95:
case 0x4b96:
case 0x4b97:
case 0x4d90:
case 0x4d91:
case 0x4d92:
case 0x4d93:
case 0x4d94:
case 0x4d95:
case 0x4d96:
case 0x4d97:
case 0x4f90:
case 0x4f91:
case 0x4f92:
case 0x4f93:
case 0x4f94:
case 0x4f95:
case 0x4f96:
case 0x4f97:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb050:
case 0xb051:
case 0xb052:
case 0xb053:
case 0xb054:
case 0xb055:
case 0xb056:
case 0xb057:
case 0xb250:
case 0xb251:
case 0xb252:
case 0xb253:
case 0xb254:
case 0xb255:
case 0xb256:
case 0xb257:
case 0xb450:
case 0xb451:
case 0xb452:
case 0xb453:
case 0xb454:
case 0xb455:
case 0xb456:
case 0xb457:
case 0xb650:
case 0xb651:
case 0xb652:
case 0xb653:
case 0xb654:
case 0xb655:
case 0xb656:
case 0xb657:
case 0xb850:
case 0xb851:
case 0xb852:
case 0xb853:
case 0xb854:
case 0xb855:
case 0xb856:
case 0xb857:
case 0xba50:
case 0xba51:
case 0xba52:
case 0xba53:
case 0xba54:
case 0xba55:
case 0xba56:
case 0xba57:
case 0xbc50:
case 0xbc51:
case 0xbc52:
case 0xbc53:
case 0xbc54:
case 0xbc55:
case 0xbc56:
case 0xbc57:
case 0xbe50:
case 0xbe51:
case 0xbe52:
case 0xbe53:
case 0xbe54:
case 0xbe55:
case 0xbe56:
case 0xbe57:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x3010:
case 0x3011:
case 0x3012:
case 0x3013:
case 0x3014:
case 0x3015:
case 0x3016:
case 0x3017:
case 0x3210:
case 0x3211:
case 0x3212:
case 0x3213:
case 0x3214:
case 0x3215:
case 0x3216:
case 0x3217:
case 0x3410:
case 0x3411:
case 0x3412:
case 0x3413:
case 0x3414:
case 0x3415:
case 0x3416:
case 0x3417:
case 0x3610:
case 0x3611:
case 0x3612:
case 0x3613:
case 0x3614:
case 0x3615:
case 0x3616:
case 0x3617:
case 0x3810:
case 0x3811:
case 0x3812:
case 0x3813:
case 0x3814:
case 0x3815:
case 0x3816:
case 0x3817:
case 0x3a10:
case 0x3a11:
case 0x3a12:
case 0x3a13:
case 0x3a14:
case 0x3a15:
case 0x3a16:
case 0x3a17:
case 0x3c10:
case 0x3c11:
case 0x3c12:
case 0x3c13:
case 0x3c14:
case 0x3c15:
case 0x3c16:
case 0x3c17:
case 0x3e10:
case 0x3e11:
case 0x3e12:
case 0x3e13:
case 0x3e14:
case 0x3e15:
case 0x3e16:
case 0x3e17:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8050:
case 0x8051:
case 0x8052:
case 0x8053:
case 0x8054:
case 0x8055:
case 0x8056:
case 0x8057:
case 0x8250:
case 0x8251:
case 0x8252:
case 0x8253:
case 0x8254:
case 0x8255:
case 0x8256:
case 0x8257:
case 0x8450:
case 0x8451:
case 0x8452:
case 0x8453:
case 0x8454:
case 0x8455:
case 0x8456:
case 0x8457:
case 0x8650:
case 0x8651:
case 0x8652:
case 0x8653:
case 0x8654:
case 0x8655:
case 0x8656:
case 0x8657:
case 0x8850:
case 0x8851:
case 0x8852:
case 0x8853:
case 0x8854:
case 0x8855:
case 0x8856:
case 0x8857:
case 0x8a50:
case 0x8a51:
case 0x8a52:
case 0x8a53:
case 0x8a54:
case 0x8a55:
case 0x8a56:
case 0x8a57:
case 0x8c50:
case 0x8c51:
case 0x8c52:
case 0x8c53:
case 0x8c54:
case 0x8c55:
case 0x8c56:
case 0x8c57:
case 0x8e50:
case 0x8e51:
case 0x8e52:
case 0x8e53:
case 0x8e54:
case 0x8e55:
case 0x8e56:
case 0x8e57:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9050:
case 0x9051:
case 0x9052:
case 0x9053:
case 0x9054:
case 0x9055:
case 0x9056:
case 0x9057:
case 0x9250:
case 0x9251:
case 0x9252:
case 0x9253:
case 0x9254:
case 0x9255:
case 0x9256:
case 0x9257:
case 0x9450:
case 0x9451:
case 0x9452:
case 0x9453:
case 0x9454:
case 0x9455:
case 0x9456:
case 0x9457:
case 0x9650:
case 0x9651:
case 0x9652:
case 0x9653:
case 0x9654:
case 0x9655:
case 0x9656:
case 0x9657:
case 0x9850:
case 0x9851:
case 0x9852:
case 0x9853:
case 0x9854:
case 0x9855:
case 0x9856:
case 0x9857:
case 0x9a50:
case 0x9a51:
case 0x9a52:
case 0x9a53:
case 0x9a54:
case 0x9a55:
case 0x9a56:
case 0x9a57:
case 0x9c50:
case 0x9c51:
case 0x9c52:
case 0x9c53:
case 0x9c54:
case 0x9c55:
case 0x9c56:
case 0x9c57:
case 0x9e50:
case 0x9e51:
case 0x9e52:
case 0x9e53:
case 0x9e54:
case 0x9e55:
case 0x9e56:
case 0x9e57:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0d0:
case 0xd0d1:
case 0xd0d2:
case 0xd0d3:
case 0xd0d4:
case 0xd0d5:
case 0xd0d6:
case 0xd0d7:
case 0xd2d0:
case 0xd2d1:
case 0xd2d2:
case 0xd2d3:
case 0xd2d4:
case 0xd2d5:
case 0xd2d6:
case 0xd2d7:
case 0xd4d0:
case 0xd4d1:
case 0xd4d2:
case 0xd4d3:
case 0xd4d4:
case 0xd4d5:
case 0xd4d6:
case 0xd4d7:
case 0xd6d0:
case 0xd6d1:
case 0xd6d2:
case 0xd6d3:
case 0xd6d4:
case 0xd6d5:
case 0xd6d6:
case 0xd6d7:
case 0xd8d0:
case 0xd8d1:
case 0xd8d2:
case 0xd8d3:
case 0xd8d4:
case 0xd8d5:
case 0xd8d6:
case 0xd8d7:
case 0xdad0:
case 0xdad1:
case 0xdad2:
case 0xdad3:
case 0xdad4:
case 0xdad5:
case 0xdad6:
case 0xdad7:
case 0xdcd0:
case 0xdcd1:
case 0xdcd2:
case 0xdcd3:
case 0xdcd4:
case 0xdcd5:
case 0xdcd6:
case 0xdcd7:
case 0xded0:
case 0xded1:
case 0xded2:
case 0xded3:
case 0xded4:
case 0xded5:
case 0xded6:
case 0xded7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0d0:
case 0xb0d1:
case 0xb0d2:
case 0xb0d3:
case 0xb0d4:
case 0xb0d5:
case 0xb0d6:
case 0xb0d7:
case 0xb2d0:
case 0xb2d1:
case 0xb2d2:
case 0xb2d3:
case 0xb2d4:
case 0xb2d5:
case 0xb2d6:
case 0xb2d7:
case 0xb4d0:
case 0xb4d1:
case 0xb4d2:
case 0xb4d3:
case 0xb4d4:
case 0xb4d5:
case 0xb4d6:
case 0xb4d7:
case 0xb6d0:
case 0xb6d1:
case 0xb6d2:
case 0xb6d3:
case 0xb6d4:
case 0xb6d5:
case 0xb6d6:
case 0xb6d7:
case 0xb8d0:
case 0xb8d1:
case 0xb8d2:
case 0xb8d3:
case 0xb8d4:
case 0xb8d5:
case 0xb8d6:
case 0xb8d7:
case 0xbad0:
case 0xbad1:
case 0xbad2:
case 0xbad3:
case 0xbad4:
case 0xbad5:
case 0xbad6:
case 0xbad7:
case 0xbcd0:
case 0xbcd1:
case 0xbcd2:
case 0xbcd3:
case 0xbcd4:
case 0xbcd5:
case 0xbcd6:
case 0xbcd7:
case 0xbed0:
case 0xbed1:
case 0xbed2:
case 0xbed3:
case 0xbed4:
case 0xbed5:
case 0xbed6:
case 0xbed7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90d0:
case 0x90d1:
case 0x90d2:
case 0x90d3:
case 0x90d4:
case 0x90d5:
case 0x90d6:
case 0x90d7:
case 0x92d0:
case 0x92d1:
case 0x92d2:
case 0x92d3:
case 0x92d4:
case 0x92d5:
case 0x92d6:
case 0x92d7:
case 0x94d0:
case 0x94d1:
case 0x94d2:
case 0x94d3:
case 0x94d4:
case 0x94d5:
case 0x94d6:
case 0x94d7:
case 0x96d0:
case 0x96d1:
case 0x96d2:
case 0x96d3:
case 0x96d4:
case 0x96d5:
case 0x96d6:
case 0x96d7:
case 0x98d0:
case 0x98d1:
case 0x98d2:
case 0x98d3:
case 0x98d4:
case 0x98d5:
case 0x98d6:
case 0x98d7:
case 0x9ad0:
case 0x9ad1:
case 0x9ad2:
case 0x9ad3:
case 0x9ad4:
case 0x9ad5:
case 0x9ad6:
case 0x9ad7:
case 0x9cd0:
case 0x9cd1:
case 0x9cd2:
case 0x9cd3:
case 0x9cd4:
case 0x9cd5:
case 0x9cd6:
case 0x9cd7:
case 0x9ed0:
case 0x9ed1:
case 0x9ed2:
case 0x9ed3:
case 0x9ed4:
case 0x9ed5:
case 0x9ed6:
case 0x9ed7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x3050:
case 0x3051:
case 0x3052:
case 0x3053:
case 0x3054:
case 0x3055:
case 0x3056:
case 0x3057:
case 0x3250:
case 0x3251:
case 0x3252:
case 0x3253:
case 0x3254:
case 0x3255:
case 0x3256:
case 0x3257:
case 0x3450:
case 0x3451:
case 0x3452:
case 0x3453:
case 0x3454:
case 0x3455:
case 0x3456:
case 0x3457:
case 0x3650:
case 0x3651:
case 0x3652:
case 0x3653:
case 0x3654:
case 0x3655:
case 0x3656:
case 0x3657:
case 0x3850:
case 0x3851:
case 0x3852:
case 0x3853:
case 0x3854:
case 0x3855:
case 0x3856:
case 0x3857:
case 0x3a50:
case 0x3a51:
case 0x3a52:
case 0x3a53:
case 0x3a54:
case 0x3a55:
case 0x3a56:
case 0x3a57:
case 0x3c50:
case 0x3c51:
case 0x3c52:
case 0x3c53:
case 0x3c54:
case 0x3c55:
case 0x3c56:
case 0x3c57:
case 0x3e50:
case 0x3e51:
case 0x3e52:
case 0x3e53:
case 0x3e54:
case 0x3e55:
case 0x3e56:
case 0x3e57:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44d0:
case 0x44d1:
case 0x44d2:
case 0x44d3:
case 0x44d4:
case 0x44d5:
case 0x44d6:
case 0x44d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); MOVE_to_CCR(src);
	}
	break;

case 0xc1d0:
case 0xc1d1:
case 0xc1d2:
case 0xc1d3:
case 0xc1d4:
case 0xc1d5:
case 0xc1d6:
case 0xc1d7:
case 0xc3d0:
case 0xc3d1:
case 0xc3d2:
case 0xc3d3:
case 0xc3d4:
case 0xc3d5:
case 0xc3d6:
case 0xc3d7:
case 0xc5d0:
case 0xc5d1:
case 0xc5d2:
case 0xc5d3:
case 0xc5d4:
case 0xc5d5:
case 0xc5d6:
case 0xc5d7:
case 0xc7d0:
case 0xc7d1:
case 0xc7d2:
case 0xc7d3:
case 0xc7d4:
case 0xc7d5:
case 0xc7d6:
case 0xc7d7:
case 0xc9d0:
case 0xc9d1:
case 0xc9d2:
case 0xc9d3:
case 0xc9d4:
case 0xc9d5:
case 0xc9d6:
case 0xc9d7:
case 0xcbd0:
case 0xcbd1:
case 0xcbd2:
case 0xcbd3:
case 0xcbd4:
case 0xcbd5:
case 0xcbd6:
case 0xcbd7:
case 0xcdd0:
case 0xcdd1:
case 0xcdd2:
case 0xcdd3:
case 0xcdd4:
case 0xcdd5:
case 0xcdd6:
case 0xcdd7:
case 0xcfd0:
case 0xcfd1:
case 0xcfd2:
case 0xcfd3:
case 0xcfd4:
case 0xcfd5:
case 0xcfd6:
case 0xcfd7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0d0:
case 0xc0d1:
case 0xc0d2:
case 0xc0d3:
case 0xc0d4:
case 0xc0d5:
case 0xc0d6:
case 0xc0d7:
case 0xc2d0:
case 0xc2d1:
case 0xc2d2:
case 0xc2d3:
case 0xc2d4:
case 0xc2d5:
case 0xc2d6:
case 0xc2d7:
case 0xc4d0:
case 0xc4d1:
case 0xc4d2:
case 0xc4d3:
case 0xc4d4:
case 0xc4d5:
case 0xc4d6:
case 0xc4d7:
case 0xc6d0:
case 0xc6d1:
case 0xc6d2:
case 0xc6d3:
case 0xc6d4:
case 0xc6d5:
case 0xc6d6:
case 0xc6d7:
case 0xc8d0:
case 0xc8d1:
case 0xc8d2:
case 0xc8d3:
case 0xc8d4:
case 0xc8d5:
case 0xc8d6:
case 0xc8d7:
case 0xcad0:
case 0xcad1:
case 0xcad2:
case 0xcad3:
case 0xcad4:
case 0xcad5:
case 0xcad6:
case 0xcad7:
case 0xccd0:
case 0xccd1:
case 0xccd2:
case 0xccd3:
case 0xccd4:
case 0xccd5:
case 0xccd6:
case 0xccd7:
case 0xced0:
case 0xced1:
case 0xced2:
case 0xced3:
case 0xced4:
case 0xced5:
case 0xced6:
case 0xced7:
	{
	 HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); MULU(src, instr_b11_b9);
	}
	break;

case 0xe1d0:
case 0xe1d1:
case 0xe1d2:
case 0xe1d3:
case 0xe1d4:
case 0xe1d5:
case 0xe1d6:
case 0xe1d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> targ(this, instr_b2_b0); ASL(targ, 1);
	}
	break;

case 0xe0d0:
case 0xe0d1:
case 0xe0d2:
case 0xe0d3:
case 0xe0d4:
case 0xe0d5:
case 0xe0d6:
case 0xe0d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> targ(this, instr_b2_b0); ASR(targ, 1);
	}
	break;

case 0xe3d0:
case 0xe3d1:
case 0xe3d2:
case 0xe3d3:
case 0xe3d4:
case 0xe3d5:
case 0xe3d6:
case 0xe3d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> targ(this, instr_b2_b0); LSL(targ, 1);
	}
	break;

case 0xe2d0:
case 0xe2d1:
case 0xe2d2:
case 0xe2d3:
case 0xe2d4:
case 0xe2d5:
case 0xe2d6:
case 0xe2d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> targ(this, instr_b2_b0); LSR(targ, 1);
	}
	break;

case 0xe7d0:
case 0xe7d1:
case 0xe7d2:
case 0xe7d3:
case 0xe7d4:
case 0xe7d5:
case 0xe7d6:
case 0xe7d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> targ(this, instr_b2_b0); ROL(targ, 1);
	}
	break;

case 0xe6d0:
case 0xe6d1:
case 0xe6d2:
case 0xe6d3:
case 0xe6d4:
case 0xe6d5:
case 0xe6d6:
case 0xe6d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> targ(this, instr_b2_b0); ROR(targ, 1);
	}
	break;

case 0xe5d0:
case 0xe5d1:
case 0xe5d2:
case 0xe5d3:
case 0xe5d4:
case 0xe5d5:
case 0xe5d6:
case 0xe5d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> targ(this, instr_b2_b0); ROXL(targ, 1);
	}
	break;

case 0xe4d0:
case 0xe4d1:
case 0xe4d2:
case 0xe4d3:
case 0xe4d4:
case 0xe4d5:
case 0xe4d6:
case 0xe4d7:
	{
	 HAM<uint16, ADDR_REG_INDIR> targ(this, instr_b2_b0); ROXR(targ, 1);
	}
	break;

case 0x4268:
case 0x4269:
case 0x426a:
case 0x426b:
case 0x426c:
case 0x426d:
case 0x426e:
case 0x426f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4468:
case 0x4469:
case 0x446a:
case 0x446b:
case 0x446c:
case 0x446d:
case 0x446e:
case 0x446f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4068:
case 0x4069:
case 0x406a:
case 0x406b:
case 0x406c:
case 0x406d:
case 0x406e:
case 0x406f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4668:
case 0x4669:
case 0x466a:
case 0x466b:
case 0x466c:
case 0x466d:
case 0x466e:
case 0x466f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4a68:
case 0x4a69:
case 0x4a6a:
case 0x4a6b:
case 0x4a6c:
case 0x4a6d:
case 0x4a6e:
case 0x4a6f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x81e8:
case 0x81e9:
case 0x81ea:
case 0x81eb:
case 0x81ec:
case 0x81ed:
case 0x81ee:
case 0x81ef:
case 0x83e8:
case 0x83e9:
case 0x83ea:
case 0x83eb:
case 0x83ec:
case 0x83ed:
case 0x83ee:
case 0x83ef:
case 0x85e8:
case 0x85e9:
case 0x85ea:
case 0x85eb:
case 0x85ec:
case 0x85ed:
case 0x85ee:
case 0x85ef:
case 0x87e8:
case 0x87e9:
case 0x87ea:
case 0x87eb:
case 0x87ec:
case 0x87ed:
case 0x87ee:
case 0x87ef:
case 0x89e8:
case 0x89e9:
case 0x89ea:
case 0x89eb:
case 0x89ec:
case 0x89ed:
case 0x89ee:
case 0x89ef:
case 0x8be8:
case 0x8be9:
case 0x8bea:
case 0x8beb:
case 0x8bec:
case 0x8bed:
case 0x8bee:
case 0x8bef:
case 0x8de8:
case 0x8de9:
case 0x8dea:
case 0x8deb:
case 0x8dec:
case 0x8ded:
case 0x8dee:
case 0x8def:
case 0x8fe8:
case 0x8fe9:
case 0x8fea:
case 0x8feb:
case 0x8fec:
case 0x8fed:
case 0x8fee:
case 0x8fef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80e8:
case 0x80e9:
case 0x80ea:
case 0x80eb:
case 0x80ec:
case 0x80ed:
case 0x80ee:
case 0x80ef:
case 0x82e8:
case 0x82e9:
case 0x82ea:
case 0x82eb:
case 0x82ec:
case 0x82ed:
case 0x82ee:
case 0x82ef:
case 0x84e8:
case 0x84e9:
case 0x84ea:
case 0x84eb:
case 0x84ec:
case 0x84ed:
case 0x84ee:
case 0x84ef:
case 0x86e8:
case 0x86e9:
case 0x86ea:
case 0x86eb:
case 0x86ec:
case 0x86ed:
case 0x86ee:
case 0x86ef:
case 0x88e8:
case 0x88e9:
case 0x88ea:
case 0x88eb:
case 0x88ec:
case 0x88ed:
case 0x88ee:
case 0x88ef:
case 0x8ae8:
case 0x8ae9:
case 0x8aea:
case 0x8aeb:
case 0x8aec:
case 0x8aed:
case 0x8aee:
case 0x8aef:
case 0x8ce8:
case 0x8ce9:
case 0x8cea:
case 0x8ceb:
case 0x8cec:
case 0x8ced:
case 0x8cee:
case 0x8cef:
case 0x8ee8:
case 0x8ee9:
case 0x8eea:
case 0x8eeb:
case 0x8eec:
case 0x8eed:
case 0x8eee:
case 0x8eef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33e8:
case 0x33e9:
case 0x33ea:
case 0x33eb:
case 0x33ec:
case 0x33ed:
case 0x33ee:
case 0x33ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31e8:
case 0x31e9:
case 0x31ea:
case 0x31eb:
case 0x31ec:
case 0x31ed:
case 0x31ee:
case 0x31ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x30a8:
case 0x30a9:
case 0x30aa:
case 0x30ab:
case 0x30ac:
case 0x30ad:
case 0x30ae:
case 0x30af:
case 0x32a8:
case 0x32a9:
case 0x32aa:
case 0x32ab:
case 0x32ac:
case 0x32ad:
case 0x32ae:
case 0x32af:
case 0x34a8:
case 0x34a9:
case 0x34aa:
case 0x34ab:
case 0x34ac:
case 0x34ad:
case 0x34ae:
case 0x34af:
case 0x36a8:
case 0x36a9:
case 0x36aa:
case 0x36ab:
case 0x36ac:
case 0x36ad:
case 0x36ae:
case 0x36af:
case 0x38a8:
case 0x38a9:
case 0x38aa:
case 0x38ab:
case 0x38ac:
case 0x38ad:
case 0x38ae:
case 0x38af:
case 0x3aa8:
case 0x3aa9:
case 0x3aaa:
case 0x3aab:
case 0x3aac:
case 0x3aad:
case 0x3aae:
case 0x3aaf:
case 0x3ca8:
case 0x3ca9:
case 0x3caa:
case 0x3cab:
case 0x3cac:
case 0x3cad:
case 0x3cae:
case 0x3caf:
case 0x3ea8:
case 0x3ea9:
case 0x3eaa:
case 0x3eab:
case 0x3eac:
case 0x3ead:
case 0x3eae:
case 0x3eaf:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3168:
case 0x3169:
case 0x316a:
case 0x316b:
case 0x316c:
case 0x316d:
case 0x316e:
case 0x316f:
case 0x3368:
case 0x3369:
case 0x336a:
case 0x336b:
case 0x336c:
case 0x336d:
case 0x336e:
case 0x336f:
case 0x3568:
case 0x3569:
case 0x356a:
case 0x356b:
case 0x356c:
case 0x356d:
case 0x356e:
case 0x356f:
case 0x3768:
case 0x3769:
case 0x376a:
case 0x376b:
case 0x376c:
case 0x376d:
case 0x376e:
case 0x376f:
case 0x3968:
case 0x3969:
case 0x396a:
case 0x396b:
case 0x396c:
case 0x396d:
case 0x396e:
case 0x396f:
case 0x3b68:
case 0x3b69:
case 0x3b6a:
case 0x3b6b:
case 0x3b6c:
case 0x3b6d:
case 0x3b6e:
case 0x3b6f:
case 0x3d68:
case 0x3d69:
case 0x3d6a:
case 0x3d6b:
case 0x3d6c:
case 0x3d6d:
case 0x3d6e:
case 0x3d6f:
case 0x3f68:
case 0x3f69:
case 0x3f6a:
case 0x3f6b:
case 0x3f6c:
case 0x3f6d:
case 0x3f6e:
case 0x3f6f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x31a8:
case 0x31a9:
case 0x31aa:
case 0x31ab:
case 0x31ac:
case 0x31ad:
case 0x31ae:
case 0x31af:
case 0x33a8:
case 0x33a9:
case 0x33aa:
case 0x33ab:
case 0x33ac:
case 0x33ad:
case 0x33ae:
case 0x33af:
case 0x35a8:
case 0x35a9:
case 0x35aa:
case 0x35ab:
case 0x35ac:
case 0x35ad:
case 0x35ae:
case 0x35af:
case 0x37a8:
case 0x37a9:
case 0x37aa:
case 0x37ab:
case 0x37ac:
case 0x37ad:
case 0x37ae:
case 0x37af:
case 0x39a8:
case 0x39a9:
case 0x39aa:
case 0x39ab:
case 0x39ac:
case 0x39ad:
case 0x39ae:
case 0x39af:
case 0x3ba8:
case 0x3ba9:
case 0x3baa:
case 0x3bab:
case 0x3bac:
case 0x3bad:
case 0x3bae:
case 0x3baf:
case 0x3da8:
case 0x3da9:
case 0x3daa:
case 0x3dab:
case 0x3dac:
case 0x3dad:
case 0x3dae:
case 0x3daf:
case 0x3fa8:
case 0x3fa9:
case 0x3faa:
case 0x3fab:
case 0x3fac:
case 0x3fad:
case 0x3fae:
case 0x3faf:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30e8:
case 0x30e9:
case 0x30ea:
case 0x30eb:
case 0x30ec:
case 0x30ed:
case 0x30ee:
case 0x30ef:
case 0x32e8:
case 0x32e9:
case 0x32ea:
case 0x32eb:
case 0x32ec:
case 0x32ed:
case 0x32ee:
case 0x32ef:
case 0x34e8:
case 0x34e9:
case 0x34ea:
case 0x34eb:
case 0x34ec:
case 0x34ed:
case 0x34ee:
case 0x34ef:
case 0x36e8:
case 0x36e9:
case 0x36ea:
case 0x36eb:
case 0x36ec:
case 0x36ed:
case 0x36ee:
case 0x36ef:
case 0x38e8:
case 0x38e9:
case 0x38ea:
case 0x38eb:
case 0x38ec:
case 0x38ed:
case 0x38ee:
case 0x38ef:
case 0x3ae8:
case 0x3ae9:
case 0x3aea:
case 0x3aeb:
case 0x3aec:
case 0x3aed:
case 0x3aee:
case 0x3aef:
case 0x3ce8:
case 0x3ce9:
case 0x3cea:
case 0x3ceb:
case 0x3cec:
case 0x3ced:
case 0x3cee:
case 0x3cef:
case 0x3ee8:
case 0x3ee9:
case 0x3eea:
case 0x3eeb:
case 0x3eec:
case 0x3eed:
case 0x3eee:
case 0x3eef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3128:
case 0x3129:
case 0x312a:
case 0x312b:
case 0x312c:
case 0x312d:
case 0x312e:
case 0x312f:
case 0x3328:
case 0x3329:
case 0x332a:
case 0x332b:
case 0x332c:
case 0x332d:
case 0x332e:
case 0x332f:
case 0x3528:
case 0x3529:
case 0x352a:
case 0x352b:
case 0x352c:
case 0x352d:
case 0x352e:
case 0x352f:
case 0x3728:
case 0x3729:
case 0x372a:
case 0x372b:
case 0x372c:
case 0x372d:
case 0x372e:
case 0x372f:
case 0x3928:
case 0x3929:
case 0x392a:
case 0x392b:
case 0x392c:
case 0x392d:
case 0x392e:
case 0x392f:
case 0x3b28:
case 0x3b29:
case 0x3b2a:
case 0x3b2b:
case 0x3b2c:
case 0x3b2d:
case 0x3b2e:
case 0x3b2f:
case 0x3d28:
case 0x3d29:
case 0x3d2a:
case 0x3d2b:
case 0x3d2c:
case 0x3d2d:
case 0x3d2e:
case 0x3d2f:
case 0x3f28:
case 0x3f29:
case 0x3f2a:
case 0x3f2b:
case 0x3f2c:
case 0x3f2d:
case 0x3f2e:
case 0x3f2f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd068:
case 0xd069:
case 0xd06a:
case 0xd06b:
case 0xd06c:
case 0xd06d:
case 0xd06e:
case 0xd06f:
case 0xd268:
case 0xd269:
case 0xd26a:
case 0xd26b:
case 0xd26c:
case 0xd26d:
case 0xd26e:
case 0xd26f:
case 0xd468:
case 0xd469:
case 0xd46a:
case 0xd46b:
case 0xd46c:
case 0xd46d:
case 0xd46e:
case 0xd46f:
case 0xd668:
case 0xd669:
case 0xd66a:
case 0xd66b:
case 0xd66c:
case 0xd66d:
case 0xd66e:
case 0xd66f:
case 0xd868:
case 0xd869:
case 0xd86a:
case 0xd86b:
case 0xd86c:
case 0xd86d:
case 0xd86e:
case 0xd86f:
case 0xda68:
case 0xda69:
case 0xda6a:
case 0xda6b:
case 0xda6c:
case 0xda6d:
case 0xda6e:
case 0xda6f:
case 0xdc68:
case 0xdc69:
case 0xdc6a:
case 0xdc6b:
case 0xdc6c:
case 0xdc6d:
case 0xdc6e:
case 0xdc6f:
case 0xde68:
case 0xde69:
case 0xde6a:
case 0xde6b:
case 0xde6c:
case 0xde6d:
case 0xde6e:
case 0xde6f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc068:
case 0xc069:
case 0xc06a:
case 0xc06b:
case 0xc06c:
case 0xc06d:
case 0xc06e:
case 0xc06f:
case 0xc268:
case 0xc269:
case 0xc26a:
case 0xc26b:
case 0xc26c:
case 0xc26d:
case 0xc26e:
case 0xc26f:
case 0xc468:
case 0xc469:
case 0xc46a:
case 0xc46b:
case 0xc46c:
case 0xc46d:
case 0xc46e:
case 0xc46f:
case 0xc668:
case 0xc669:
case 0xc66a:
case 0xc66b:
case 0xc66c:
case 0xc66d:
case 0xc66e:
case 0xc66f:
case 0xc868:
case 0xc869:
case 0xc86a:
case 0xc86b:
case 0xc86c:
case 0xc86d:
case 0xc86e:
case 0xc86f:
case 0xca68:
case 0xca69:
case 0xca6a:
case 0xca6b:
case 0xca6c:
case 0xca6d:
case 0xca6e:
case 0xca6f:
case 0xcc68:
case 0xcc69:
case 0xcc6a:
case 0xcc6b:
case 0xcc6c:
case 0xcc6d:
case 0xcc6e:
case 0xcc6f:
case 0xce68:
case 0xce69:
case 0xce6a:
case 0xce6b:
case 0xce6c:
case 0xce6d:
case 0xce6e:
case 0xce6f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x41a8:
case 0x41a9:
case 0x41aa:
case 0x41ab:
case 0x41ac:
case 0x41ad:
case 0x41ae:
case 0x41af:
case 0x43a8:
case 0x43a9:
case 0x43aa:
case 0x43ab:
case 0x43ac:
case 0x43ad:
case 0x43ae:
case 0x43af:
case 0x45a8:
case 0x45a9:
case 0x45aa:
case 0x45ab:
case 0x45ac:
case 0x45ad:
case 0x45ae:
case 0x45af:
case 0x47a8:
case 0x47a9:
case 0x47aa:
case 0x47ab:
case 0x47ac:
case 0x47ad:
case 0x47ae:
case 0x47af:
case 0x49a8:
case 0x49a9:
case 0x49aa:
case 0x49ab:
case 0x49ac:
case 0x49ad:
case 0x49ae:
case 0x49af:
case 0x4ba8:
case 0x4ba9:
case 0x4baa:
case 0x4bab:
case 0x4bac:
case 0x4bad:
case 0x4bae:
case 0x4baf:
case 0x4da8:
case 0x4da9:
case 0x4daa:
case 0x4dab:
case 0x4dac:
case 0x4dad:
case 0x4dae:
case 0x4daf:
case 0x4fa8:
case 0x4fa9:
case 0x4faa:
case 0x4fab:
case 0x4fac:
case 0x4fad:
case 0x4fae:
case 0x4faf:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb068:
case 0xb069:
case 0xb06a:
case 0xb06b:
case 0xb06c:
case 0xb06d:
case 0xb06e:
case 0xb06f:
case 0xb268:
case 0xb269:
case 0xb26a:
case 0xb26b:
case 0xb26c:
case 0xb26d:
case 0xb26e:
case 0xb26f:
case 0xb468:
case 0xb469:
case 0xb46a:
case 0xb46b:
case 0xb46c:
case 0xb46d:
case 0xb46e:
case 0xb46f:
case 0xb668:
case 0xb669:
case 0xb66a:
case 0xb66b:
case 0xb66c:
case 0xb66d:
case 0xb66e:
case 0xb66f:
case 0xb868:
case 0xb869:
case 0xb86a:
case 0xb86b:
case 0xb86c:
case 0xb86d:
case 0xb86e:
case 0xb86f:
case 0xba68:
case 0xba69:
case 0xba6a:
case 0xba6b:
case 0xba6c:
case 0xba6d:
case 0xba6e:
case 0xba6f:
case 0xbc68:
case 0xbc69:
case 0xbc6a:
case 0xbc6b:
case 0xbc6c:
case 0xbc6d:
case 0xbc6e:
case 0xbc6f:
case 0xbe68:
case 0xbe69:
case 0xbe6a:
case 0xbe6b:
case 0xbe6c:
case 0xbe6d:
case 0xbe6e:
case 0xbe6f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x3028:
case 0x3029:
case 0x302a:
case 0x302b:
case 0x302c:
case 0x302d:
case 0x302e:
case 0x302f:
case 0x3228:
case 0x3229:
case 0x322a:
case 0x322b:
case 0x322c:
case 0x322d:
case 0x322e:
case 0x322f:
case 0x3428:
case 0x3429:
case 0x342a:
case 0x342b:
case 0x342c:
case 0x342d:
case 0x342e:
case 0x342f:
case 0x3628:
case 0x3629:
case 0x362a:
case 0x362b:
case 0x362c:
case 0x362d:
case 0x362e:
case 0x362f:
case 0x3828:
case 0x3829:
case 0x382a:
case 0x382b:
case 0x382c:
case 0x382d:
case 0x382e:
case 0x382f:
case 0x3a28:
case 0x3a29:
case 0x3a2a:
case 0x3a2b:
case 0x3a2c:
case 0x3a2d:
case 0x3a2e:
case 0x3a2f:
case 0x3c28:
case 0x3c29:
case 0x3c2a:
case 0x3c2b:
case 0x3c2c:
case 0x3c2d:
case 0x3c2e:
case 0x3c2f:
case 0x3e28:
case 0x3e29:
case 0x3e2a:
case 0x3e2b:
case 0x3e2c:
case 0x3e2d:
case 0x3e2e:
case 0x3e2f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8068:
case 0x8069:
case 0x806a:
case 0x806b:
case 0x806c:
case 0x806d:
case 0x806e:
case 0x806f:
case 0x8268:
case 0x8269:
case 0x826a:
case 0x826b:
case 0x826c:
case 0x826d:
case 0x826e:
case 0x826f:
case 0x8468:
case 0x8469:
case 0x846a:
case 0x846b:
case 0x846c:
case 0x846d:
case 0x846e:
case 0x846f:
case 0x8668:
case 0x8669:
case 0x866a:
case 0x866b:
case 0x866c:
case 0x866d:
case 0x866e:
case 0x866f:
case 0x8868:
case 0x8869:
case 0x886a:
case 0x886b:
case 0x886c:
case 0x886d:
case 0x886e:
case 0x886f:
case 0x8a68:
case 0x8a69:
case 0x8a6a:
case 0x8a6b:
case 0x8a6c:
case 0x8a6d:
case 0x8a6e:
case 0x8a6f:
case 0x8c68:
case 0x8c69:
case 0x8c6a:
case 0x8c6b:
case 0x8c6c:
case 0x8c6d:
case 0x8c6e:
case 0x8c6f:
case 0x8e68:
case 0x8e69:
case 0x8e6a:
case 0x8e6b:
case 0x8e6c:
case 0x8e6d:
case 0x8e6e:
case 0x8e6f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9068:
case 0x9069:
case 0x906a:
case 0x906b:
case 0x906c:
case 0x906d:
case 0x906e:
case 0x906f:
case 0x9268:
case 0x9269:
case 0x926a:
case 0x926b:
case 0x926c:
case 0x926d:
case 0x926e:
case 0x926f:
case 0x9468:
case 0x9469:
case 0x946a:
case 0x946b:
case 0x946c:
case 0x946d:
case 0x946e:
case 0x946f:
case 0x9668:
case 0x9669:
case 0x966a:
case 0x966b:
case 0x966c:
case 0x966d:
case 0x966e:
case 0x966f:
case 0x9868:
case 0x9869:
case 0x986a:
case 0x986b:
case 0x986c:
case 0x986d:
case 0x986e:
case 0x986f:
case 0x9a68:
case 0x9a69:
case 0x9a6a:
case 0x9a6b:
case 0x9a6c:
case 0x9a6d:
case 0x9a6e:
case 0x9a6f:
case 0x9c68:
case 0x9c69:
case 0x9c6a:
case 0x9c6b:
case 0x9c6c:
case 0x9c6d:
case 0x9c6e:
case 0x9c6f:
case 0x9e68:
case 0x9e69:
case 0x9e6a:
case 0x9e6b:
case 0x9e6c:
case 0x9e6d:
case 0x9e6e:
case 0x9e6f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0e8:
case 0xd0e9:
case 0xd0ea:
case 0xd0eb:
case 0xd0ec:
case 0xd0ed:
case 0xd0ee:
case 0xd0ef:
case 0xd2e8:
case 0xd2e9:
case 0xd2ea:
case 0xd2eb:
case 0xd2ec:
case 0xd2ed:
case 0xd2ee:
case 0xd2ef:
case 0xd4e8:
case 0xd4e9:
case 0xd4ea:
case 0xd4eb:
case 0xd4ec:
case 0xd4ed:
case 0xd4ee:
case 0xd4ef:
case 0xd6e8:
case 0xd6e9:
case 0xd6ea:
case 0xd6eb:
case 0xd6ec:
case 0xd6ed:
case 0xd6ee:
case 0xd6ef:
case 0xd8e8:
case 0xd8e9:
case 0xd8ea:
case 0xd8eb:
case 0xd8ec:
case 0xd8ed:
case 0xd8ee:
case 0xd8ef:
case 0xdae8:
case 0xdae9:
case 0xdaea:
case 0xdaeb:
case 0xdaec:
case 0xdaed:
case 0xdaee:
case 0xdaef:
case 0xdce8:
case 0xdce9:
case 0xdcea:
case 0xdceb:
case 0xdcec:
case 0xdced:
case 0xdcee:
case 0xdcef:
case 0xdee8:
case 0xdee9:
case 0xdeea:
case 0xdeeb:
case 0xdeec:
case 0xdeed:
case 0xdeee:
case 0xdeef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0e8:
case 0xb0e9:
case 0xb0ea:
case 0xb0eb:
case 0xb0ec:
case 0xb0ed:
case 0xb0ee:
case 0xb0ef:
case 0xb2e8:
case 0xb2e9:
case 0xb2ea:
case 0xb2eb:
case 0xb2ec:
case 0xb2ed:
case 0xb2ee:
case 0xb2ef:
case 0xb4e8:
case 0xb4e9:
case 0xb4ea:
case 0xb4eb:
case 0xb4ec:
case 0xb4ed:
case 0xb4ee:
case 0xb4ef:
case 0xb6e8:
case 0xb6e9:
case 0xb6ea:
case 0xb6eb:
case 0xb6ec:
case 0xb6ed:
case 0xb6ee:
case 0xb6ef:
case 0xb8e8:
case 0xb8e9:
case 0xb8ea:
case 0xb8eb:
case 0xb8ec:
case 0xb8ed:
case 0xb8ee:
case 0xb8ef:
case 0xbae8:
case 0xbae9:
case 0xbaea:
case 0xbaeb:
case 0xbaec:
case 0xbaed:
case 0xbaee:
case 0xbaef:
case 0xbce8:
case 0xbce9:
case 0xbcea:
case 0xbceb:
case 0xbcec:
case 0xbced:
case 0xbcee:
case 0xbcef:
case 0xbee8:
case 0xbee9:
case 0xbeea:
case 0xbeeb:
case 0xbeec:
case 0xbeed:
case 0xbeee:
case 0xbeef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90e8:
case 0x90e9:
case 0x90ea:
case 0x90eb:
case 0x90ec:
case 0x90ed:
case 0x90ee:
case 0x90ef:
case 0x92e8:
case 0x92e9:
case 0x92ea:
case 0x92eb:
case 0x92ec:
case 0x92ed:
case 0x92ee:
case 0x92ef:
case 0x94e8:
case 0x94e9:
case 0x94ea:
case 0x94eb:
case 0x94ec:
case 0x94ed:
case 0x94ee:
case 0x94ef:
case 0x96e8:
case 0x96e9:
case 0x96ea:
case 0x96eb:
case 0x96ec:
case 0x96ed:
case 0x96ee:
case 0x96ef:
case 0x98e8:
case 0x98e9:
case 0x98ea:
case 0x98eb:
case 0x98ec:
case 0x98ed:
case 0x98ee:
case 0x98ef:
case 0x9ae8:
case 0x9ae9:
case 0x9aea:
case 0x9aeb:
case 0x9aec:
case 0x9aed:
case 0x9aee:
case 0x9aef:
case 0x9ce8:
case 0x9ce9:
case 0x9cea:
case 0x9ceb:
case 0x9cec:
case 0x9ced:
case 0x9cee:
case 0x9cef:
case 0x9ee8:
case 0x9ee9:
case 0x9eea:
case 0x9eeb:
case 0x9eec:
case 0x9eed:
case 0x9eee:
case 0x9eef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x3068:
case 0x3069:
case 0x306a:
case 0x306b:
case 0x306c:
case 0x306d:
case 0x306e:
case 0x306f:
case 0x3268:
case 0x3269:
case 0x326a:
case 0x326b:
case 0x326c:
case 0x326d:
case 0x326e:
case 0x326f:
case 0x3468:
case 0x3469:
case 0x346a:
case 0x346b:
case 0x346c:
case 0x346d:
case 0x346e:
case 0x346f:
case 0x3668:
case 0x3669:
case 0x366a:
case 0x366b:
case 0x366c:
case 0x366d:
case 0x366e:
case 0x366f:
case 0x3868:
case 0x3869:
case 0x386a:
case 0x386b:
case 0x386c:
case 0x386d:
case 0x386e:
case 0x386f:
case 0x3a68:
case 0x3a69:
case 0x3a6a:
case 0x3a6b:
case 0x3a6c:
case 0x3a6d:
case 0x3a6e:
case 0x3a6f:
case 0x3c68:
case 0x3c69:
case 0x3c6a:
case 0x3c6b:
case 0x3c6c:
case 0x3c6d:
case 0x3c6e:
case 0x3c6f:
case 0x3e68:
case 0x3e69:
case 0x3e6a:
case 0x3e6b:
case 0x3e6c:
case 0x3e6d:
case 0x3e6e:
case 0x3e6f:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44e8:
case 0x44e9:
case 0x44ea:
case 0x44eb:
case 0x44ec:
case 0x44ed:
case 0x44ee:
case 0x44ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); MOVE_to_CCR(src);
	}
	break;

case 0xc1e8:
case 0xc1e9:
case 0xc1ea:
case 0xc1eb:
case 0xc1ec:
case 0xc1ed:
case 0xc1ee:
case 0xc1ef:
case 0xc3e8:
case 0xc3e9:
case 0xc3ea:
case 0xc3eb:
case 0xc3ec:
case 0xc3ed:
case 0xc3ee:
case 0xc3ef:
case 0xc5e8:
case 0xc5e9:
case 0xc5ea:
case 0xc5eb:
case 0xc5ec:
case 0xc5ed:
case 0xc5ee:
case 0xc5ef:
case 0xc7e8:
case 0xc7e9:
case 0xc7ea:
case 0xc7eb:
case 0xc7ec:
case 0xc7ed:
case 0xc7ee:
case 0xc7ef:
case 0xc9e8:
case 0xc9e9:
case 0xc9ea:
case 0xc9eb:
case 0xc9ec:
case 0xc9ed:
case 0xc9ee:
case 0xc9ef:
case 0xcbe8:
case 0xcbe9:
case 0xcbea:
case 0xcbeb:
case 0xcbec:
case 0xcbed:
case 0xcbee:
case 0xcbef:
case 0xcde8:
case 0xcde9:
case 0xcdea:
case 0xcdeb:
case 0xcdec:
case 0xcded:
case 0xcdee:
case 0xcdef:
case 0xcfe8:
case 0xcfe9:
case 0xcfea:
case 0xcfeb:
case 0xcfec:
case 0xcfed:
case 0xcfee:
case 0xcfef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0e8:
case 0xc0e9:
case 0xc0ea:
case 0xc0eb:
case 0xc0ec:
case 0xc0ed:
case 0xc0ee:
case 0xc0ef:
case 0xc2e8:
case 0xc2e9:
case 0xc2ea:
case 0xc2eb:
case 0xc2ec:
case 0xc2ed:
case 0xc2ee:
case 0xc2ef:
case 0xc4e8:
case 0xc4e9:
case 0xc4ea:
case 0xc4eb:
case 0xc4ec:
case 0xc4ed:
case 0xc4ee:
case 0xc4ef:
case 0xc6e8:
case 0xc6e9:
case 0xc6ea:
case 0xc6eb:
case 0xc6ec:
case 0xc6ed:
case 0xc6ee:
case 0xc6ef:
case 0xc8e8:
case 0xc8e9:
case 0xc8ea:
case 0xc8eb:
case 0xc8ec:
case 0xc8ed:
case 0xc8ee:
case 0xc8ef:
case 0xcae8:
case 0xcae9:
case 0xcaea:
case 0xcaeb:
case 0xcaec:
case 0xcaed:
case 0xcaee:
case 0xcaef:
case 0xcce8:
case 0xcce9:
case 0xccea:
case 0xcceb:
case 0xccec:
case 0xcced:
case 0xccee:
case 0xccef:
case 0xcee8:
case 0xcee9:
case 0xceea:
case 0xceeb:
case 0xceec:
case 0xceed:
case 0xceee:
case 0xceef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); MULU(src, instr_b11_b9);
	}
	break;

case 0xe1e8:
case 0xe1e9:
case 0xe1ea:
case 0xe1eb:
case 0xe1ec:
case 0xe1ed:
case 0xe1ee:
case 0xe1ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); ASL(targ, 1);
	}
	break;

case 0xe0e8:
case 0xe0e9:
case 0xe0ea:
case 0xe0eb:
case 0xe0ec:
case 0xe0ed:
case 0xe0ee:
case 0xe0ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); ASR(targ, 1);
	}
	break;

case 0xe3e8:
case 0xe3e9:
case 0xe3ea:
case 0xe3eb:
case 0xe3ec:
case 0xe3ed:
case 0xe3ee:
case 0xe3ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); LSL(targ, 1);
	}
	break;

case 0xe2e8:
case 0xe2e9:
case 0xe2ea:
case 0xe2eb:
case 0xe2ec:
case 0xe2ed:
case 0xe2ee:
case 0xe2ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); LSR(targ, 1);
	}
	break;

case 0xe7e8:
case 0xe7e9:
case 0xe7ea:
case 0xe7eb:
case 0xe7ec:
case 0xe7ed:
case 0xe7ee:
case 0xe7ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); ROL(targ, 1);
	}
	break;

case 0xe6e8:
case 0xe6e9:
case 0xe6ea:
case 0xe6eb:
case 0xe6ec:
case 0xe6ed:
case 0xe6ee:
case 0xe6ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); ROR(targ, 1);
	}
	break;

case 0xe5e8:
case 0xe5e9:
case 0xe5ea:
case 0xe5eb:
case 0xe5ec:
case 0xe5ed:
case 0xe5ee:
case 0xe5ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); ROXL(targ, 1);
	}
	break;

case 0xe4e8:
case 0xe4e9:
case 0xe4ea:
case 0xe4eb:
case 0xe4ec:
case 0xe4ed:
case 0xe4ee:
case 0xe4ef:
	{
	 HAM<uint16, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); ROXR(targ, 1);
	}
	break;

case 0x4270:
case 0x4271:
case 0x4272:
case 0x4273:
case 0x4274:
case 0x4275:
case 0x4276:
case 0x4277:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4470:
case 0x4471:
case 0x4472:
case 0x4473:
case 0x4474:
case 0x4475:
case 0x4476:
case 0x4477:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4070:
case 0x4071:
case 0x4072:
case 0x4073:
case 0x4074:
case 0x4075:
case 0x4076:
case 0x4077:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4670:
case 0x4671:
case 0x4672:
case 0x4673:
case 0x4674:
case 0x4675:
case 0x4676:
case 0x4677:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4a70:
case 0x4a71:
case 0x4a72:
case 0x4a73:
case 0x4a74:
case 0x4a75:
case 0x4a76:
case 0x4a77:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x81f0:
case 0x81f1:
case 0x81f2:
case 0x81f3:
case 0x81f4:
case 0x81f5:
case 0x81f6:
case 0x81f7:
case 0x83f0:
case 0x83f1:
case 0x83f2:
case 0x83f3:
case 0x83f4:
case 0x83f5:
case 0x83f6:
case 0x83f7:
case 0x85f0:
case 0x85f1:
case 0x85f2:
case 0x85f3:
case 0x85f4:
case 0x85f5:
case 0x85f6:
case 0x85f7:
case 0x87f0:
case 0x87f1:
case 0x87f2:
case 0x87f3:
case 0x87f4:
case 0x87f5:
case 0x87f6:
case 0x87f7:
case 0x89f0:
case 0x89f1:
case 0x89f2:
case 0x89f3:
case 0x89f4:
case 0x89f5:
case 0x89f6:
case 0x89f7:
case 0x8bf0:
case 0x8bf1:
case 0x8bf2:
case 0x8bf3:
case 0x8bf4:
case 0x8bf5:
case 0x8bf6:
case 0x8bf7:
case 0x8df0:
case 0x8df1:
case 0x8df2:
case 0x8df3:
case 0x8df4:
case 0x8df5:
case 0x8df6:
case 0x8df7:
case 0x8ff0:
case 0x8ff1:
case 0x8ff2:
case 0x8ff3:
case 0x8ff4:
case 0x8ff5:
case 0x8ff6:
case 0x8ff7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80f0:
case 0x80f1:
case 0x80f2:
case 0x80f3:
case 0x80f4:
case 0x80f5:
case 0x80f6:
case 0x80f7:
case 0x82f0:
case 0x82f1:
case 0x82f2:
case 0x82f3:
case 0x82f4:
case 0x82f5:
case 0x82f6:
case 0x82f7:
case 0x84f0:
case 0x84f1:
case 0x84f2:
case 0x84f3:
case 0x84f4:
case 0x84f5:
case 0x84f6:
case 0x84f7:
case 0x86f0:
case 0x86f1:
case 0x86f2:
case 0x86f3:
case 0x86f4:
case 0x86f5:
case 0x86f6:
case 0x86f7:
case 0x88f0:
case 0x88f1:
case 0x88f2:
case 0x88f3:
case 0x88f4:
case 0x88f5:
case 0x88f6:
case 0x88f7:
case 0x8af0:
case 0x8af1:
case 0x8af2:
case 0x8af3:
case 0x8af4:
case 0x8af5:
case 0x8af6:
case 0x8af7:
case 0x8cf0:
case 0x8cf1:
case 0x8cf2:
case 0x8cf3:
case 0x8cf4:
case 0x8cf5:
case 0x8cf6:
case 0x8cf7:
case 0x8ef0:
case 0x8ef1:
case 0x8ef2:
case 0x8ef3:
case 0x8ef4:
case 0x8ef5:
case 0x8ef6:
case 0x8ef7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33f0:
case 0x33f1:
case 0x33f2:
case 0x33f3:
case 0x33f4:
case 0x33f5:
case 0x33f6:
case 0x33f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31f0:
case 0x31f1:
case 0x31f2:
case 0x31f3:
case 0x31f4:
case 0x31f5:
case 0x31f6:
case 0x31f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x30b0:
case 0x30b1:
case 0x30b2:
case 0x30b3:
case 0x30b4:
case 0x30b5:
case 0x30b6:
case 0x30b7:
case 0x32b0:
case 0x32b1:
case 0x32b2:
case 0x32b3:
case 0x32b4:
case 0x32b5:
case 0x32b6:
case 0x32b7:
case 0x34b0:
case 0x34b1:
case 0x34b2:
case 0x34b3:
case 0x34b4:
case 0x34b5:
case 0x34b6:
case 0x34b7:
case 0x36b0:
case 0x36b1:
case 0x36b2:
case 0x36b3:
case 0x36b4:
case 0x36b5:
case 0x36b6:
case 0x36b7:
case 0x38b0:
case 0x38b1:
case 0x38b2:
case 0x38b3:
case 0x38b4:
case 0x38b5:
case 0x38b6:
case 0x38b7:
case 0x3ab0:
case 0x3ab1:
case 0x3ab2:
case 0x3ab3:
case 0x3ab4:
case 0x3ab5:
case 0x3ab6:
case 0x3ab7:
case 0x3cb0:
case 0x3cb1:
case 0x3cb2:
case 0x3cb3:
case 0x3cb4:
case 0x3cb5:
case 0x3cb6:
case 0x3cb7:
case 0x3eb0:
case 0x3eb1:
case 0x3eb2:
case 0x3eb3:
case 0x3eb4:
case 0x3eb5:
case 0x3eb6:
case 0x3eb7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3170:
case 0x3171:
case 0x3172:
case 0x3173:
case 0x3174:
case 0x3175:
case 0x3176:
case 0x3177:
case 0x3370:
case 0x3371:
case 0x3372:
case 0x3373:
case 0x3374:
case 0x3375:
case 0x3376:
case 0x3377:
case 0x3570:
case 0x3571:
case 0x3572:
case 0x3573:
case 0x3574:
case 0x3575:
case 0x3576:
case 0x3577:
case 0x3770:
case 0x3771:
case 0x3772:
case 0x3773:
case 0x3774:
case 0x3775:
case 0x3776:
case 0x3777:
case 0x3970:
case 0x3971:
case 0x3972:
case 0x3973:
case 0x3974:
case 0x3975:
case 0x3976:
case 0x3977:
case 0x3b70:
case 0x3b71:
case 0x3b72:
case 0x3b73:
case 0x3b74:
case 0x3b75:
case 0x3b76:
case 0x3b77:
case 0x3d70:
case 0x3d71:
case 0x3d72:
case 0x3d73:
case 0x3d74:
case 0x3d75:
case 0x3d76:
case 0x3d77:
case 0x3f70:
case 0x3f71:
case 0x3f72:
case 0x3f73:
case 0x3f74:
case 0x3f75:
case 0x3f76:
case 0x3f77:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x31b0:
case 0x31b1:
case 0x31b2:
case 0x31b3:
case 0x31b4:
case 0x31b5:
case 0x31b6:
case 0x31b7:
case 0x33b0:
case 0x33b1:
case 0x33b2:
case 0x33b3:
case 0x33b4:
case 0x33b5:
case 0x33b6:
case 0x33b7:
case 0x35b0:
case 0x35b1:
case 0x35b2:
case 0x35b3:
case 0x35b4:
case 0x35b5:
case 0x35b6:
case 0x35b7:
case 0x37b0:
case 0x37b1:
case 0x37b2:
case 0x37b3:
case 0x37b4:
case 0x37b5:
case 0x37b6:
case 0x37b7:
case 0x39b0:
case 0x39b1:
case 0x39b2:
case 0x39b3:
case 0x39b4:
case 0x39b5:
case 0x39b6:
case 0x39b7:
case 0x3bb0:
case 0x3bb1:
case 0x3bb2:
case 0x3bb3:
case 0x3bb4:
case 0x3bb5:
case 0x3bb6:
case 0x3bb7:
case 0x3db0:
case 0x3db1:
case 0x3db2:
case 0x3db3:
case 0x3db4:
case 0x3db5:
case 0x3db6:
case 0x3db7:
case 0x3fb0:
case 0x3fb1:
case 0x3fb2:
case 0x3fb3:
case 0x3fb4:
case 0x3fb5:
case 0x3fb6:
case 0x3fb7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30f0:
case 0x30f1:
case 0x30f2:
case 0x30f3:
case 0x30f4:
case 0x30f5:
case 0x30f6:
case 0x30f7:
case 0x32f0:
case 0x32f1:
case 0x32f2:
case 0x32f3:
case 0x32f4:
case 0x32f5:
case 0x32f6:
case 0x32f7:
case 0x34f0:
case 0x34f1:
case 0x34f2:
case 0x34f3:
case 0x34f4:
case 0x34f5:
case 0x34f6:
case 0x34f7:
case 0x36f0:
case 0x36f1:
case 0x36f2:
case 0x36f3:
case 0x36f4:
case 0x36f5:
case 0x36f6:
case 0x36f7:
case 0x38f0:
case 0x38f1:
case 0x38f2:
case 0x38f3:
case 0x38f4:
case 0x38f5:
case 0x38f6:
case 0x38f7:
case 0x3af0:
case 0x3af1:
case 0x3af2:
case 0x3af3:
case 0x3af4:
case 0x3af5:
case 0x3af6:
case 0x3af7:
case 0x3cf0:
case 0x3cf1:
case 0x3cf2:
case 0x3cf3:
case 0x3cf4:
case 0x3cf5:
case 0x3cf6:
case 0x3cf7:
case 0x3ef0:
case 0x3ef1:
case 0x3ef2:
case 0x3ef3:
case 0x3ef4:
case 0x3ef5:
case 0x3ef6:
case 0x3ef7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3130:
case 0x3131:
case 0x3132:
case 0x3133:
case 0x3134:
case 0x3135:
case 0x3136:
case 0x3137:
case 0x3330:
case 0x3331:
case 0x3332:
case 0x3333:
case 0x3334:
case 0x3335:
case 0x3336:
case 0x3337:
case 0x3530:
case 0x3531:
case 0x3532:
case 0x3533:
case 0x3534:
case 0x3535:
case 0x3536:
case 0x3537:
case 0x3730:
case 0x3731:
case 0x3732:
case 0x3733:
case 0x3734:
case 0x3735:
case 0x3736:
case 0x3737:
case 0x3930:
case 0x3931:
case 0x3932:
case 0x3933:
case 0x3934:
case 0x3935:
case 0x3936:
case 0x3937:
case 0x3b30:
case 0x3b31:
case 0x3b32:
case 0x3b33:
case 0x3b34:
case 0x3b35:
case 0x3b36:
case 0x3b37:
case 0x3d30:
case 0x3d31:
case 0x3d32:
case 0x3d33:
case 0x3d34:
case 0x3d35:
case 0x3d36:
case 0x3d37:
case 0x3f30:
case 0x3f31:
case 0x3f32:
case 0x3f33:
case 0x3f34:
case 0x3f35:
case 0x3f36:
case 0x3f37:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd070:
case 0xd071:
case 0xd072:
case 0xd073:
case 0xd074:
case 0xd075:
case 0xd076:
case 0xd077:
case 0xd270:
case 0xd271:
case 0xd272:
case 0xd273:
case 0xd274:
case 0xd275:
case 0xd276:
case 0xd277:
case 0xd470:
case 0xd471:
case 0xd472:
case 0xd473:
case 0xd474:
case 0xd475:
case 0xd476:
case 0xd477:
case 0xd670:
case 0xd671:
case 0xd672:
case 0xd673:
case 0xd674:
case 0xd675:
case 0xd676:
case 0xd677:
case 0xd870:
case 0xd871:
case 0xd872:
case 0xd873:
case 0xd874:
case 0xd875:
case 0xd876:
case 0xd877:
case 0xda70:
case 0xda71:
case 0xda72:
case 0xda73:
case 0xda74:
case 0xda75:
case 0xda76:
case 0xda77:
case 0xdc70:
case 0xdc71:
case 0xdc72:
case 0xdc73:
case 0xdc74:
case 0xdc75:
case 0xdc76:
case 0xdc77:
case 0xde70:
case 0xde71:
case 0xde72:
case 0xde73:
case 0xde74:
case 0xde75:
case 0xde76:
case 0xde77:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc070:
case 0xc071:
case 0xc072:
case 0xc073:
case 0xc074:
case 0xc075:
case 0xc076:
case 0xc077:
case 0xc270:
case 0xc271:
case 0xc272:
case 0xc273:
case 0xc274:
case 0xc275:
case 0xc276:
case 0xc277:
case 0xc470:
case 0xc471:
case 0xc472:
case 0xc473:
case 0xc474:
case 0xc475:
case 0xc476:
case 0xc477:
case 0xc670:
case 0xc671:
case 0xc672:
case 0xc673:
case 0xc674:
case 0xc675:
case 0xc676:
case 0xc677:
case 0xc870:
case 0xc871:
case 0xc872:
case 0xc873:
case 0xc874:
case 0xc875:
case 0xc876:
case 0xc877:
case 0xca70:
case 0xca71:
case 0xca72:
case 0xca73:
case 0xca74:
case 0xca75:
case 0xca76:
case 0xca77:
case 0xcc70:
case 0xcc71:
case 0xcc72:
case 0xcc73:
case 0xcc74:
case 0xcc75:
case 0xcc76:
case 0xcc77:
case 0xce70:
case 0xce71:
case 0xce72:
case 0xce73:
case 0xce74:
case 0xce75:
case 0xce76:
case 0xce77:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x41b0:
case 0x41b1:
case 0x41b2:
case 0x41b3:
case 0x41b4:
case 0x41b5:
case 0x41b6:
case 0x41b7:
case 0x43b0:
case 0x43b1:
case 0x43b2:
case 0x43b3:
case 0x43b4:
case 0x43b5:
case 0x43b6:
case 0x43b7:
case 0x45b0:
case 0x45b1:
case 0x45b2:
case 0x45b3:
case 0x45b4:
case 0x45b5:
case 0x45b6:
case 0x45b7:
case 0x47b0:
case 0x47b1:
case 0x47b2:
case 0x47b3:
case 0x47b4:
case 0x47b5:
case 0x47b6:
case 0x47b7:
case 0x49b0:
case 0x49b1:
case 0x49b2:
case 0x49b3:
case 0x49b4:
case 0x49b5:
case 0x49b6:
case 0x49b7:
case 0x4bb0:
case 0x4bb1:
case 0x4bb2:
case 0x4bb3:
case 0x4bb4:
case 0x4bb5:
case 0x4bb6:
case 0x4bb7:
case 0x4db0:
case 0x4db1:
case 0x4db2:
case 0x4db3:
case 0x4db4:
case 0x4db5:
case 0x4db6:
case 0x4db7:
case 0x4fb0:
case 0x4fb1:
case 0x4fb2:
case 0x4fb3:
case 0x4fb4:
case 0x4fb5:
case 0x4fb6:
case 0x4fb7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb070:
case 0xb071:
case 0xb072:
case 0xb073:
case 0xb074:
case 0xb075:
case 0xb076:
case 0xb077:
case 0xb270:
case 0xb271:
case 0xb272:
case 0xb273:
case 0xb274:
case 0xb275:
case 0xb276:
case 0xb277:
case 0xb470:
case 0xb471:
case 0xb472:
case 0xb473:
case 0xb474:
case 0xb475:
case 0xb476:
case 0xb477:
case 0xb670:
case 0xb671:
case 0xb672:
case 0xb673:
case 0xb674:
case 0xb675:
case 0xb676:
case 0xb677:
case 0xb870:
case 0xb871:
case 0xb872:
case 0xb873:
case 0xb874:
case 0xb875:
case 0xb876:
case 0xb877:
case 0xba70:
case 0xba71:
case 0xba72:
case 0xba73:
case 0xba74:
case 0xba75:
case 0xba76:
case 0xba77:
case 0xbc70:
case 0xbc71:
case 0xbc72:
case 0xbc73:
case 0xbc74:
case 0xbc75:
case 0xbc76:
case 0xbc77:
case 0xbe70:
case 0xbe71:
case 0xbe72:
case 0xbe73:
case 0xbe74:
case 0xbe75:
case 0xbe76:
case 0xbe77:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x3030:
case 0x3031:
case 0x3032:
case 0x3033:
case 0x3034:
case 0x3035:
case 0x3036:
case 0x3037:
case 0x3230:
case 0x3231:
case 0x3232:
case 0x3233:
case 0x3234:
case 0x3235:
case 0x3236:
case 0x3237:
case 0x3430:
case 0x3431:
case 0x3432:
case 0x3433:
case 0x3434:
case 0x3435:
case 0x3436:
case 0x3437:
case 0x3630:
case 0x3631:
case 0x3632:
case 0x3633:
case 0x3634:
case 0x3635:
case 0x3636:
case 0x3637:
case 0x3830:
case 0x3831:
case 0x3832:
case 0x3833:
case 0x3834:
case 0x3835:
case 0x3836:
case 0x3837:
case 0x3a30:
case 0x3a31:
case 0x3a32:
case 0x3a33:
case 0x3a34:
case 0x3a35:
case 0x3a36:
case 0x3a37:
case 0x3c30:
case 0x3c31:
case 0x3c32:
case 0x3c33:
case 0x3c34:
case 0x3c35:
case 0x3c36:
case 0x3c37:
case 0x3e30:
case 0x3e31:
case 0x3e32:
case 0x3e33:
case 0x3e34:
case 0x3e35:
case 0x3e36:
case 0x3e37:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8070:
case 0x8071:
case 0x8072:
case 0x8073:
case 0x8074:
case 0x8075:
case 0x8076:
case 0x8077:
case 0x8270:
case 0x8271:
case 0x8272:
case 0x8273:
case 0x8274:
case 0x8275:
case 0x8276:
case 0x8277:
case 0x8470:
case 0x8471:
case 0x8472:
case 0x8473:
case 0x8474:
case 0x8475:
case 0x8476:
case 0x8477:
case 0x8670:
case 0x8671:
case 0x8672:
case 0x8673:
case 0x8674:
case 0x8675:
case 0x8676:
case 0x8677:
case 0x8870:
case 0x8871:
case 0x8872:
case 0x8873:
case 0x8874:
case 0x8875:
case 0x8876:
case 0x8877:
case 0x8a70:
case 0x8a71:
case 0x8a72:
case 0x8a73:
case 0x8a74:
case 0x8a75:
case 0x8a76:
case 0x8a77:
case 0x8c70:
case 0x8c71:
case 0x8c72:
case 0x8c73:
case 0x8c74:
case 0x8c75:
case 0x8c76:
case 0x8c77:
case 0x8e70:
case 0x8e71:
case 0x8e72:
case 0x8e73:
case 0x8e74:
case 0x8e75:
case 0x8e76:
case 0x8e77:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9070:
case 0x9071:
case 0x9072:
case 0x9073:
case 0x9074:
case 0x9075:
case 0x9076:
case 0x9077:
case 0x9270:
case 0x9271:
case 0x9272:
case 0x9273:
case 0x9274:
case 0x9275:
case 0x9276:
case 0x9277:
case 0x9470:
case 0x9471:
case 0x9472:
case 0x9473:
case 0x9474:
case 0x9475:
case 0x9476:
case 0x9477:
case 0x9670:
case 0x9671:
case 0x9672:
case 0x9673:
case 0x9674:
case 0x9675:
case 0x9676:
case 0x9677:
case 0x9870:
case 0x9871:
case 0x9872:
case 0x9873:
case 0x9874:
case 0x9875:
case 0x9876:
case 0x9877:
case 0x9a70:
case 0x9a71:
case 0x9a72:
case 0x9a73:
case 0x9a74:
case 0x9a75:
case 0x9a76:
case 0x9a77:
case 0x9c70:
case 0x9c71:
case 0x9c72:
case 0x9c73:
case 0x9c74:
case 0x9c75:
case 0x9c76:
case 0x9c77:
case 0x9e70:
case 0x9e71:
case 0x9e72:
case 0x9e73:
case 0x9e74:
case 0x9e75:
case 0x9e76:
case 0x9e77:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0f0:
case 0xd0f1:
case 0xd0f2:
case 0xd0f3:
case 0xd0f4:
case 0xd0f5:
case 0xd0f6:
case 0xd0f7:
case 0xd2f0:
case 0xd2f1:
case 0xd2f2:
case 0xd2f3:
case 0xd2f4:
case 0xd2f5:
case 0xd2f6:
case 0xd2f7:
case 0xd4f0:
case 0xd4f1:
case 0xd4f2:
case 0xd4f3:
case 0xd4f4:
case 0xd4f5:
case 0xd4f6:
case 0xd4f7:
case 0xd6f0:
case 0xd6f1:
case 0xd6f2:
case 0xd6f3:
case 0xd6f4:
case 0xd6f5:
case 0xd6f6:
case 0xd6f7:
case 0xd8f0:
case 0xd8f1:
case 0xd8f2:
case 0xd8f3:
case 0xd8f4:
case 0xd8f5:
case 0xd8f6:
case 0xd8f7:
case 0xdaf0:
case 0xdaf1:
case 0xdaf2:
case 0xdaf3:
case 0xdaf4:
case 0xdaf5:
case 0xdaf6:
case 0xdaf7:
case 0xdcf0:
case 0xdcf1:
case 0xdcf2:
case 0xdcf3:
case 0xdcf4:
case 0xdcf5:
case 0xdcf6:
case 0xdcf7:
case 0xdef0:
case 0xdef1:
case 0xdef2:
case 0xdef3:
case 0xdef4:
case 0xdef5:
case 0xdef6:
case 0xdef7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0f0:
case 0xb0f1:
case 0xb0f2:
case 0xb0f3:
case 0xb0f4:
case 0xb0f5:
case 0xb0f6:
case 0xb0f7:
case 0xb2f0:
case 0xb2f1:
case 0xb2f2:
case 0xb2f3:
case 0xb2f4:
case 0xb2f5:
case 0xb2f6:
case 0xb2f7:
case 0xb4f0:
case 0xb4f1:
case 0xb4f2:
case 0xb4f3:
case 0xb4f4:
case 0xb4f5:
case 0xb4f6:
case 0xb4f7:
case 0xb6f0:
case 0xb6f1:
case 0xb6f2:
case 0xb6f3:
case 0xb6f4:
case 0xb6f5:
case 0xb6f6:
case 0xb6f7:
case 0xb8f0:
case 0xb8f1:
case 0xb8f2:
case 0xb8f3:
case 0xb8f4:
case 0xb8f5:
case 0xb8f6:
case 0xb8f7:
case 0xbaf0:
case 0xbaf1:
case 0xbaf2:
case 0xbaf3:
case 0xbaf4:
case 0xbaf5:
case 0xbaf6:
case 0xbaf7:
case 0xbcf0:
case 0xbcf1:
case 0xbcf2:
case 0xbcf3:
case 0xbcf4:
case 0xbcf5:
case 0xbcf6:
case 0xbcf7:
case 0xbef0:
case 0xbef1:
case 0xbef2:
case 0xbef3:
case 0xbef4:
case 0xbef5:
case 0xbef6:
case 0xbef7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90f0:
case 0x90f1:
case 0x90f2:
case 0x90f3:
case 0x90f4:
case 0x90f5:
case 0x90f6:
case 0x90f7:
case 0x92f0:
case 0x92f1:
case 0x92f2:
case 0x92f3:
case 0x92f4:
case 0x92f5:
case 0x92f6:
case 0x92f7:
case 0x94f0:
case 0x94f1:
case 0x94f2:
case 0x94f3:
case 0x94f4:
case 0x94f5:
case 0x94f6:
case 0x94f7:
case 0x96f0:
case 0x96f1:
case 0x96f2:
case 0x96f3:
case 0x96f4:
case 0x96f5:
case 0x96f6:
case 0x96f7:
case 0x98f0:
case 0x98f1:
case 0x98f2:
case 0x98f3:
case 0x98f4:
case 0x98f5:
case 0x98f6:
case 0x98f7:
case 0x9af0:
case 0x9af1:
case 0x9af2:
case 0x9af3:
case 0x9af4:
case 0x9af5:
case 0x9af6:
case 0x9af7:
case 0x9cf0:
case 0x9cf1:
case 0x9cf2:
case 0x9cf3:
case 0x9cf4:
case 0x9cf5:
case 0x9cf6:
case 0x9cf7:
case 0x9ef0:
case 0x9ef1:
case 0x9ef2:
case 0x9ef3:
case 0x9ef4:
case 0x9ef5:
case 0x9ef6:
case 0x9ef7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x3070:
case 0x3071:
case 0x3072:
case 0x3073:
case 0x3074:
case 0x3075:
case 0x3076:
case 0x3077:
case 0x3270:
case 0x3271:
case 0x3272:
case 0x3273:
case 0x3274:
case 0x3275:
case 0x3276:
case 0x3277:
case 0x3470:
case 0x3471:
case 0x3472:
case 0x3473:
case 0x3474:
case 0x3475:
case 0x3476:
case 0x3477:
case 0x3670:
case 0x3671:
case 0x3672:
case 0x3673:
case 0x3674:
case 0x3675:
case 0x3676:
case 0x3677:
case 0x3870:
case 0x3871:
case 0x3872:
case 0x3873:
case 0x3874:
case 0x3875:
case 0x3876:
case 0x3877:
case 0x3a70:
case 0x3a71:
case 0x3a72:
case 0x3a73:
case 0x3a74:
case 0x3a75:
case 0x3a76:
case 0x3a77:
case 0x3c70:
case 0x3c71:
case 0x3c72:
case 0x3c73:
case 0x3c74:
case 0x3c75:
case 0x3c76:
case 0x3c77:
case 0x3e70:
case 0x3e71:
case 0x3e72:
case 0x3e73:
case 0x3e74:
case 0x3e75:
case 0x3e76:
case 0x3e77:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44f0:
case 0x44f1:
case 0x44f2:
case 0x44f3:
case 0x44f4:
case 0x44f5:
case 0x44f6:
case 0x44f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); MOVE_to_CCR(src);
	}
	break;

case 0xc1f0:
case 0xc1f1:
case 0xc1f2:
case 0xc1f3:
case 0xc1f4:
case 0xc1f5:
case 0xc1f6:
case 0xc1f7:
case 0xc3f0:
case 0xc3f1:
case 0xc3f2:
case 0xc3f3:
case 0xc3f4:
case 0xc3f5:
case 0xc3f6:
case 0xc3f7:
case 0xc5f0:
case 0xc5f1:
case 0xc5f2:
case 0xc5f3:
case 0xc5f4:
case 0xc5f5:
case 0xc5f6:
case 0xc5f7:
case 0xc7f0:
case 0xc7f1:
case 0xc7f2:
case 0xc7f3:
case 0xc7f4:
case 0xc7f5:
case 0xc7f6:
case 0xc7f7:
case 0xc9f0:
case 0xc9f1:
case 0xc9f2:
case 0xc9f3:
case 0xc9f4:
case 0xc9f5:
case 0xc9f6:
case 0xc9f7:
case 0xcbf0:
case 0xcbf1:
case 0xcbf2:
case 0xcbf3:
case 0xcbf4:
case 0xcbf5:
case 0xcbf6:
case 0xcbf7:
case 0xcdf0:
case 0xcdf1:
case 0xcdf2:
case 0xcdf3:
case 0xcdf4:
case 0xcdf5:
case 0xcdf6:
case 0xcdf7:
case 0xcff0:
case 0xcff1:
case 0xcff2:
case 0xcff3:
case 0xcff4:
case 0xcff5:
case 0xcff6:
case 0xcff7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0f0:
case 0xc0f1:
case 0xc0f2:
case 0xc0f3:
case 0xc0f4:
case 0xc0f5:
case 0xc0f6:
case 0xc0f7:
case 0xc2f0:
case 0xc2f1:
case 0xc2f2:
case 0xc2f3:
case 0xc2f4:
case 0xc2f5:
case 0xc2f6:
case 0xc2f7:
case 0xc4f0:
case 0xc4f1:
case 0xc4f2:
case 0xc4f3:
case 0xc4f4:
case 0xc4f5:
case 0xc4f6:
case 0xc4f7:
case 0xc6f0:
case 0xc6f1:
case 0xc6f2:
case 0xc6f3:
case 0xc6f4:
case 0xc6f5:
case 0xc6f6:
case 0xc6f7:
case 0xc8f0:
case 0xc8f1:
case 0xc8f2:
case 0xc8f3:
case 0xc8f4:
case 0xc8f5:
case 0xc8f6:
case 0xc8f7:
case 0xcaf0:
case 0xcaf1:
case 0xcaf2:
case 0xcaf3:
case 0xcaf4:
case 0xcaf5:
case 0xcaf6:
case 0xcaf7:
case 0xccf0:
case 0xccf1:
case 0xccf2:
case 0xccf3:
case 0xccf4:
case 0xccf5:
case 0xccf6:
case 0xccf7:
case 0xcef0:
case 0xcef1:
case 0xcef2:
case 0xcef3:
case 0xcef4:
case 0xcef5:
case 0xcef6:
case 0xcef7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); MULU(src, instr_b11_b9);
	}
	break;

case 0xe1f0:
case 0xe1f1:
case 0xe1f2:
case 0xe1f3:
case 0xe1f4:
case 0xe1f5:
case 0xe1f6:
case 0xe1f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); ASL(targ, 1);
	}
	break;

case 0xe0f0:
case 0xe0f1:
case 0xe0f2:
case 0xe0f3:
case 0xe0f4:
case 0xe0f5:
case 0xe0f6:
case 0xe0f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); ASR(targ, 1);
	}
	break;

case 0xe3f0:
case 0xe3f1:
case 0xe3f2:
case 0xe3f3:
case 0xe3f4:
case 0xe3f5:
case 0xe3f6:
case 0xe3f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); LSL(targ, 1);
	}
	break;

case 0xe2f0:
case 0xe2f1:
case 0xe2f2:
case 0xe2f3:
case 0xe2f4:
case 0xe2f5:
case 0xe2f6:
case 0xe2f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); LSR(targ, 1);
	}
	break;

case 0xe7f0:
case 0xe7f1:
case 0xe7f2:
case 0xe7f3:
case 0xe7f4:
case 0xe7f5:
case 0xe7f6:
case 0xe7f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); ROL(targ, 1);
	}
	break;

case 0xe6f0:
case 0xe6f1:
case 0xe6f2:
case 0xe6f3:
case 0xe6f4:
case 0xe6f5:
case 0xe6f6:
case 0xe6f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); ROR(targ, 1);
	}
	break;

case 0xe5f0:
case 0xe5f1:
case 0xe5f2:
case 0xe5f3:
case 0xe5f4:
case 0xe5f5:
case 0xe5f6:
case 0xe5f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); ROXL(targ, 1);
	}
	break;

case 0xe4f0:
case 0xe4f1:
case 0xe4f2:
case 0xe4f3:
case 0xe4f4:
case 0xe4f5:
case 0xe4f6:
case 0xe4f7:
	{
	 HAM<uint16, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); ROXR(targ, 1);
	}
	break;

case 0x4258:
case 0x4259:
case 0x425a:
case 0x425b:
case 0x425c:
case 0x425d:
case 0x425e:
case 0x425f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4458:
case 0x4459:
case 0x445a:
case 0x445b:
case 0x445c:
case 0x445d:
case 0x445e:
case 0x445f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4058:
case 0x4059:
case 0x405a:
case 0x405b:
case 0x405c:
case 0x405d:
case 0x405e:
case 0x405f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4658:
case 0x4659:
case 0x465a:
case 0x465b:
case 0x465c:
case 0x465d:
case 0x465e:
case 0x465f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4a58:
case 0x4a59:
case 0x4a5a:
case 0x4a5b:
case 0x4a5c:
case 0x4a5d:
case 0x4a5e:
case 0x4a5f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x81d8:
case 0x81d9:
case 0x81da:
case 0x81db:
case 0x81dc:
case 0x81dd:
case 0x81de:
case 0x81df:
case 0x83d8:
case 0x83d9:
case 0x83da:
case 0x83db:
case 0x83dc:
case 0x83dd:
case 0x83de:
case 0x83df:
case 0x85d8:
case 0x85d9:
case 0x85da:
case 0x85db:
case 0x85dc:
case 0x85dd:
case 0x85de:
case 0x85df:
case 0x87d8:
case 0x87d9:
case 0x87da:
case 0x87db:
case 0x87dc:
case 0x87dd:
case 0x87de:
case 0x87df:
case 0x89d8:
case 0x89d9:
case 0x89da:
case 0x89db:
case 0x89dc:
case 0x89dd:
case 0x89de:
case 0x89df:
case 0x8bd8:
case 0x8bd9:
case 0x8bda:
case 0x8bdb:
case 0x8bdc:
case 0x8bdd:
case 0x8bde:
case 0x8bdf:
case 0x8dd8:
case 0x8dd9:
case 0x8dda:
case 0x8ddb:
case 0x8ddc:
case 0x8ddd:
case 0x8dde:
case 0x8ddf:
case 0x8fd8:
case 0x8fd9:
case 0x8fda:
case 0x8fdb:
case 0x8fdc:
case 0x8fdd:
case 0x8fde:
case 0x8fdf:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80d8:
case 0x80d9:
case 0x80da:
case 0x80db:
case 0x80dc:
case 0x80dd:
case 0x80de:
case 0x80df:
case 0x82d8:
case 0x82d9:
case 0x82da:
case 0x82db:
case 0x82dc:
case 0x82dd:
case 0x82de:
case 0x82df:
case 0x84d8:
case 0x84d9:
case 0x84da:
case 0x84db:
case 0x84dc:
case 0x84dd:
case 0x84de:
case 0x84df:
case 0x86d8:
case 0x86d9:
case 0x86da:
case 0x86db:
case 0x86dc:
case 0x86dd:
case 0x86de:
case 0x86df:
case 0x88d8:
case 0x88d9:
case 0x88da:
case 0x88db:
case 0x88dc:
case 0x88dd:
case 0x88de:
case 0x88df:
case 0x8ad8:
case 0x8ad9:
case 0x8ada:
case 0x8adb:
case 0x8adc:
case 0x8add:
case 0x8ade:
case 0x8adf:
case 0x8cd8:
case 0x8cd9:
case 0x8cda:
case 0x8cdb:
case 0x8cdc:
case 0x8cdd:
case 0x8cde:
case 0x8cdf:
case 0x8ed8:
case 0x8ed9:
case 0x8eda:
case 0x8edb:
case 0x8edc:
case 0x8edd:
case 0x8ede:
case 0x8edf:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33d8:
case 0x33d9:
case 0x33da:
case 0x33db:
case 0x33dc:
case 0x33dd:
case 0x33de:
case 0x33df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31d8:
case 0x31d9:
case 0x31da:
case 0x31db:
case 0x31dc:
case 0x31dd:
case 0x31de:
case 0x31df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x3098:
case 0x3099:
case 0x309a:
case 0x309b:
case 0x309c:
case 0x309d:
case 0x309e:
case 0x309f:
case 0x3298:
case 0x3299:
case 0x329a:
case 0x329b:
case 0x329c:
case 0x329d:
case 0x329e:
case 0x329f:
case 0x3498:
case 0x3499:
case 0x349a:
case 0x349b:
case 0x349c:
case 0x349d:
case 0x349e:
case 0x349f:
case 0x3698:
case 0x3699:
case 0x369a:
case 0x369b:
case 0x369c:
case 0x369d:
case 0x369e:
case 0x369f:
case 0x3898:
case 0x3899:
case 0x389a:
case 0x389b:
case 0x389c:
case 0x389d:
case 0x389e:
case 0x389f:
case 0x3a98:
case 0x3a99:
case 0x3a9a:
case 0x3a9b:
case 0x3a9c:
case 0x3a9d:
case 0x3a9e:
case 0x3a9f:
case 0x3c98:
case 0x3c99:
case 0x3c9a:
case 0x3c9b:
case 0x3c9c:
case 0x3c9d:
case 0x3c9e:
case 0x3c9f:
case 0x3e98:
case 0x3e99:
case 0x3e9a:
case 0x3e9b:
case 0x3e9c:
case 0x3e9d:
case 0x3e9e:
case 0x3e9f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3158:
case 0x3159:
case 0x315a:
case 0x315b:
case 0x315c:
case 0x315d:
case 0x315e:
case 0x315f:
case 0x3358:
case 0x3359:
case 0x335a:
case 0x335b:
case 0x335c:
case 0x335d:
case 0x335e:
case 0x335f:
case 0x3558:
case 0x3559:
case 0x355a:
case 0x355b:
case 0x355c:
case 0x355d:
case 0x355e:
case 0x355f:
case 0x3758:
case 0x3759:
case 0x375a:
case 0x375b:
case 0x375c:
case 0x375d:
case 0x375e:
case 0x375f:
case 0x3958:
case 0x3959:
case 0x395a:
case 0x395b:
case 0x395c:
case 0x395d:
case 0x395e:
case 0x395f:
case 0x3b58:
case 0x3b59:
case 0x3b5a:
case 0x3b5b:
case 0x3b5c:
case 0x3b5d:
case 0x3b5e:
case 0x3b5f:
case 0x3d58:
case 0x3d59:
case 0x3d5a:
case 0x3d5b:
case 0x3d5c:
case 0x3d5d:
case 0x3d5e:
case 0x3d5f:
case 0x3f58:
case 0x3f59:
case 0x3f5a:
case 0x3f5b:
case 0x3f5c:
case 0x3f5d:
case 0x3f5e:
case 0x3f5f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3198:
case 0x3199:
case 0x319a:
case 0x319b:
case 0x319c:
case 0x319d:
case 0x319e:
case 0x319f:
case 0x3398:
case 0x3399:
case 0x339a:
case 0x339b:
case 0x339c:
case 0x339d:
case 0x339e:
case 0x339f:
case 0x3598:
case 0x3599:
case 0x359a:
case 0x359b:
case 0x359c:
case 0x359d:
case 0x359e:
case 0x359f:
case 0x3798:
case 0x3799:
case 0x379a:
case 0x379b:
case 0x379c:
case 0x379d:
case 0x379e:
case 0x379f:
case 0x3998:
case 0x3999:
case 0x399a:
case 0x399b:
case 0x399c:
case 0x399d:
case 0x399e:
case 0x399f:
case 0x3b98:
case 0x3b99:
case 0x3b9a:
case 0x3b9b:
case 0x3b9c:
case 0x3b9d:
case 0x3b9e:
case 0x3b9f:
case 0x3d98:
case 0x3d99:
case 0x3d9a:
case 0x3d9b:
case 0x3d9c:
case 0x3d9d:
case 0x3d9e:
case 0x3d9f:
case 0x3f98:
case 0x3f99:
case 0x3f9a:
case 0x3f9b:
case 0x3f9c:
case 0x3f9d:
case 0x3f9e:
case 0x3f9f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xb148:
case 0xb149:
case 0xb14a:
case 0xb14b:
case 0xb14c:
case 0xb14d:
case 0xb14e:
case 0xb14f:
case 0xb348:
case 0xb349:
case 0xb34a:
case 0xb34b:
case 0xb34c:
case 0xb34d:
case 0xb34e:
case 0xb34f:
case 0xb548:
case 0xb549:
case 0xb54a:
case 0xb54b:
case 0xb54c:
case 0xb54d:
case 0xb54e:
case 0xb54f:
case 0xb748:
case 0xb749:
case 0xb74a:
case 0xb74b:
case 0xb74c:
case 0xb74d:
case 0xb74e:
case 0xb74f:
case 0xb948:
case 0xb949:
case 0xb94a:
case 0xb94b:
case 0xb94c:
case 0xb94d:
case 0xb94e:
case 0xb94f:
case 0xbb48:
case 0xbb49:
case 0xbb4a:
case 0xbb4b:
case 0xbb4c:
case 0xbb4d:
case 0xbb4e:
case 0xbb4f:
case 0xbd48:
case 0xbd49:
case 0xbd4a:
case 0xbd4b:
case 0xbd4c:
case 0xbd4d:
case 0xbd4e:
case 0xbd4f:
case 0xbf48:
case 0xbf49:
case 0xbf4a:
case 0xbf4b:
case 0xbf4c:
case 0xbf4d:
case 0xbf4e:
case 0xbf4f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x30d8:
case 0x30d9:
case 0x30da:
case 0x30db:
case 0x30dc:
case 0x30dd:
case 0x30de:
case 0x30df:
case 0x32d8:
case 0x32d9:
case 0x32da:
case 0x32db:
case 0x32dc:
case 0x32dd:
case 0x32de:
case 0x32df:
case 0x34d8:
case 0x34d9:
case 0x34da:
case 0x34db:
case 0x34dc:
case 0x34dd:
case 0x34de:
case 0x34df:
case 0x36d8:
case 0x36d9:
case 0x36da:
case 0x36db:
case 0x36dc:
case 0x36dd:
case 0x36de:
case 0x36df:
case 0x38d8:
case 0x38d9:
case 0x38da:
case 0x38db:
case 0x38dc:
case 0x38dd:
case 0x38de:
case 0x38df:
case 0x3ad8:
case 0x3ad9:
case 0x3ada:
case 0x3adb:
case 0x3adc:
case 0x3add:
case 0x3ade:
case 0x3adf:
case 0x3cd8:
case 0x3cd9:
case 0x3cda:
case 0x3cdb:
case 0x3cdc:
case 0x3cdd:
case 0x3cde:
case 0x3cdf:
case 0x3ed8:
case 0x3ed9:
case 0x3eda:
case 0x3edb:
case 0x3edc:
case 0x3edd:
case 0x3ede:
case 0x3edf:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3118:
case 0x3119:
case 0x311a:
case 0x311b:
case 0x311c:
case 0x311d:
case 0x311e:
case 0x311f:
case 0x3318:
case 0x3319:
case 0x331a:
case 0x331b:
case 0x331c:
case 0x331d:
case 0x331e:
case 0x331f:
case 0x3518:
case 0x3519:
case 0x351a:
case 0x351b:
case 0x351c:
case 0x351d:
case 0x351e:
case 0x351f:
case 0x3718:
case 0x3719:
case 0x371a:
case 0x371b:
case 0x371c:
case 0x371d:
case 0x371e:
case 0x371f:
case 0x3918:
case 0x3919:
case 0x391a:
case 0x391b:
case 0x391c:
case 0x391d:
case 0x391e:
case 0x391f:
case 0x3b18:
case 0x3b19:
case 0x3b1a:
case 0x3b1b:
case 0x3b1c:
case 0x3b1d:
case 0x3b1e:
case 0x3b1f:
case 0x3d18:
case 0x3d19:
case 0x3d1a:
case 0x3d1b:
case 0x3d1c:
case 0x3d1d:
case 0x3d1e:
case 0x3d1f:
case 0x3f18:
case 0x3f19:
case 0x3f1a:
case 0x3f1b:
case 0x3f1c:
case 0x3f1d:
case 0x3f1e:
case 0x3f1f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd058:
case 0xd059:
case 0xd05a:
case 0xd05b:
case 0xd05c:
case 0xd05d:
case 0xd05e:
case 0xd05f:
case 0xd258:
case 0xd259:
case 0xd25a:
case 0xd25b:
case 0xd25c:
case 0xd25d:
case 0xd25e:
case 0xd25f:
case 0xd458:
case 0xd459:
case 0xd45a:
case 0xd45b:
case 0xd45c:
case 0xd45d:
case 0xd45e:
case 0xd45f:
case 0xd658:
case 0xd659:
case 0xd65a:
case 0xd65b:
case 0xd65c:
case 0xd65d:
case 0xd65e:
case 0xd65f:
case 0xd858:
case 0xd859:
case 0xd85a:
case 0xd85b:
case 0xd85c:
case 0xd85d:
case 0xd85e:
case 0xd85f:
case 0xda58:
case 0xda59:
case 0xda5a:
case 0xda5b:
case 0xda5c:
case 0xda5d:
case 0xda5e:
case 0xda5f:
case 0xdc58:
case 0xdc59:
case 0xdc5a:
case 0xdc5b:
case 0xdc5c:
case 0xdc5d:
case 0xdc5e:
case 0xdc5f:
case 0xde58:
case 0xde59:
case 0xde5a:
case 0xde5b:
case 0xde5c:
case 0xde5d:
case 0xde5e:
case 0xde5f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc058:
case 0xc059:
case 0xc05a:
case 0xc05b:
case 0xc05c:
case 0xc05d:
case 0xc05e:
case 0xc05f:
case 0xc258:
case 0xc259:
case 0xc25a:
case 0xc25b:
case 0xc25c:
case 0xc25d:
case 0xc25e:
case 0xc25f:
case 0xc458:
case 0xc459:
case 0xc45a:
case 0xc45b:
case 0xc45c:
case 0xc45d:
case 0xc45e:
case 0xc45f:
case 0xc658:
case 0xc659:
case 0xc65a:
case 0xc65b:
case 0xc65c:
case 0xc65d:
case 0xc65e:
case 0xc65f:
case 0xc858:
case 0xc859:
case 0xc85a:
case 0xc85b:
case 0xc85c:
case 0xc85d:
case 0xc85e:
case 0xc85f:
case 0xca58:
case 0xca59:
case 0xca5a:
case 0xca5b:
case 0xca5c:
case 0xca5d:
case 0xca5e:
case 0xca5f:
case 0xcc58:
case 0xcc59:
case 0xcc5a:
case 0xcc5b:
case 0xcc5c:
case 0xcc5d:
case 0xcc5e:
case 0xcc5f:
case 0xce58:
case 0xce59:
case 0xce5a:
case 0xce5b:
case 0xce5c:
case 0xce5d:
case 0xce5e:
case 0xce5f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x4198:
case 0x4199:
case 0x419a:
case 0x419b:
case 0x419c:
case 0x419d:
case 0x419e:
case 0x419f:
case 0x4398:
case 0x4399:
case 0x439a:
case 0x439b:
case 0x439c:
case 0x439d:
case 0x439e:
case 0x439f:
case 0x4598:
case 0x4599:
case 0x459a:
case 0x459b:
case 0x459c:
case 0x459d:
case 0x459e:
case 0x459f:
case 0x4798:
case 0x4799:
case 0x479a:
case 0x479b:
case 0x479c:
case 0x479d:
case 0x479e:
case 0x479f:
case 0x4998:
case 0x4999:
case 0x499a:
case 0x499b:
case 0x499c:
case 0x499d:
case 0x499e:
case 0x499f:
case 0x4b98:
case 0x4b99:
case 0x4b9a:
case 0x4b9b:
case 0x4b9c:
case 0x4b9d:
case 0x4b9e:
case 0x4b9f:
case 0x4d98:
case 0x4d99:
case 0x4d9a:
case 0x4d9b:
case 0x4d9c:
case 0x4d9d:
case 0x4d9e:
case 0x4d9f:
case 0x4f98:
case 0x4f99:
case 0x4f9a:
case 0x4f9b:
case 0x4f9c:
case 0x4f9d:
case 0x4f9e:
case 0x4f9f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb058:
case 0xb059:
case 0xb05a:
case 0xb05b:
case 0xb05c:
case 0xb05d:
case 0xb05e:
case 0xb05f:
case 0xb258:
case 0xb259:
case 0xb25a:
case 0xb25b:
case 0xb25c:
case 0xb25d:
case 0xb25e:
case 0xb25f:
case 0xb458:
case 0xb459:
case 0xb45a:
case 0xb45b:
case 0xb45c:
case 0xb45d:
case 0xb45e:
case 0xb45f:
case 0xb658:
case 0xb659:
case 0xb65a:
case 0xb65b:
case 0xb65c:
case 0xb65d:
case 0xb65e:
case 0xb65f:
case 0xb858:
case 0xb859:
case 0xb85a:
case 0xb85b:
case 0xb85c:
case 0xb85d:
case 0xb85e:
case 0xb85f:
case 0xba58:
case 0xba59:
case 0xba5a:
case 0xba5b:
case 0xba5c:
case 0xba5d:
case 0xba5e:
case 0xba5f:
case 0xbc58:
case 0xbc59:
case 0xbc5a:
case 0xbc5b:
case 0xbc5c:
case 0xbc5d:
case 0xbc5e:
case 0xbc5f:
case 0xbe58:
case 0xbe59:
case 0xbe5a:
case 0xbe5b:
case 0xbe5c:
case 0xbe5d:
case 0xbe5e:
case 0xbe5f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x3018:
case 0x3019:
case 0x301a:
case 0x301b:
case 0x301c:
case 0x301d:
case 0x301e:
case 0x301f:
case 0x3218:
case 0x3219:
case 0x321a:
case 0x321b:
case 0x321c:
case 0x321d:
case 0x321e:
case 0x321f:
case 0x3418:
case 0x3419:
case 0x341a:
case 0x341b:
case 0x341c:
case 0x341d:
case 0x341e:
case 0x341f:
case 0x3618:
case 0x3619:
case 0x361a:
case 0x361b:
case 0x361c:
case 0x361d:
case 0x361e:
case 0x361f:
case 0x3818:
case 0x3819:
case 0x381a:
case 0x381b:
case 0x381c:
case 0x381d:
case 0x381e:
case 0x381f:
case 0x3a18:
case 0x3a19:
case 0x3a1a:
case 0x3a1b:
case 0x3a1c:
case 0x3a1d:
case 0x3a1e:
case 0x3a1f:
case 0x3c18:
case 0x3c19:
case 0x3c1a:
case 0x3c1b:
case 0x3c1c:
case 0x3c1d:
case 0x3c1e:
case 0x3c1f:
case 0x3e18:
case 0x3e19:
case 0x3e1a:
case 0x3e1b:
case 0x3e1c:
case 0x3e1d:
case 0x3e1e:
case 0x3e1f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8058:
case 0x8059:
case 0x805a:
case 0x805b:
case 0x805c:
case 0x805d:
case 0x805e:
case 0x805f:
case 0x8258:
case 0x8259:
case 0x825a:
case 0x825b:
case 0x825c:
case 0x825d:
case 0x825e:
case 0x825f:
case 0x8458:
case 0x8459:
case 0x845a:
case 0x845b:
case 0x845c:
case 0x845d:
case 0x845e:
case 0x845f:
case 0x8658:
case 0x8659:
case 0x865a:
case 0x865b:
case 0x865c:
case 0x865d:
case 0x865e:
case 0x865f:
case 0x8858:
case 0x8859:
case 0x885a:
case 0x885b:
case 0x885c:
case 0x885d:
case 0x885e:
case 0x885f:
case 0x8a58:
case 0x8a59:
case 0x8a5a:
case 0x8a5b:
case 0x8a5c:
case 0x8a5d:
case 0x8a5e:
case 0x8a5f:
case 0x8c58:
case 0x8c59:
case 0x8c5a:
case 0x8c5b:
case 0x8c5c:
case 0x8c5d:
case 0x8c5e:
case 0x8c5f:
case 0x8e58:
case 0x8e59:
case 0x8e5a:
case 0x8e5b:
case 0x8e5c:
case 0x8e5d:
case 0x8e5e:
case 0x8e5f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9058:
case 0x9059:
case 0x905a:
case 0x905b:
case 0x905c:
case 0x905d:
case 0x905e:
case 0x905f:
case 0x9258:
case 0x9259:
case 0x925a:
case 0x925b:
case 0x925c:
case 0x925d:
case 0x925e:
case 0x925f:
case 0x9458:
case 0x9459:
case 0x945a:
case 0x945b:
case 0x945c:
case 0x945d:
case 0x945e:
case 0x945f:
case 0x9658:
case 0x9659:
case 0x965a:
case 0x965b:
case 0x965c:
case 0x965d:
case 0x965e:
case 0x965f:
case 0x9858:
case 0x9859:
case 0x985a:
case 0x985b:
case 0x985c:
case 0x985d:
case 0x985e:
case 0x985f:
case 0x9a58:
case 0x9a59:
case 0x9a5a:
case 0x9a5b:
case 0x9a5c:
case 0x9a5d:
case 0x9a5e:
case 0x9a5f:
case 0x9c58:
case 0x9c59:
case 0x9c5a:
case 0x9c5b:
case 0x9c5c:
case 0x9c5d:
case 0x9c5e:
case 0x9c5f:
case 0x9e58:
case 0x9e59:
case 0x9e5a:
case 0x9e5b:
case 0x9e5c:
case 0x9e5d:
case 0x9e5e:
case 0x9e5f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0d8:
case 0xd0d9:
case 0xd0da:
case 0xd0db:
case 0xd0dc:
case 0xd0dd:
case 0xd0de:
case 0xd0df:
case 0xd2d8:
case 0xd2d9:
case 0xd2da:
case 0xd2db:
case 0xd2dc:
case 0xd2dd:
case 0xd2de:
case 0xd2df:
case 0xd4d8:
case 0xd4d9:
case 0xd4da:
case 0xd4db:
case 0xd4dc:
case 0xd4dd:
case 0xd4de:
case 0xd4df:
case 0xd6d8:
case 0xd6d9:
case 0xd6da:
case 0xd6db:
case 0xd6dc:
case 0xd6dd:
case 0xd6de:
case 0xd6df:
case 0xd8d8:
case 0xd8d9:
case 0xd8da:
case 0xd8db:
case 0xd8dc:
case 0xd8dd:
case 0xd8de:
case 0xd8df:
case 0xdad8:
case 0xdad9:
case 0xdada:
case 0xdadb:
case 0xdadc:
case 0xdadd:
case 0xdade:
case 0xdadf:
case 0xdcd8:
case 0xdcd9:
case 0xdcda:
case 0xdcdb:
case 0xdcdc:
case 0xdcdd:
case 0xdcde:
case 0xdcdf:
case 0xded8:
case 0xded9:
case 0xdeda:
case 0xdedb:
case 0xdedc:
case 0xdedd:
case 0xdede:
case 0xdedf:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0d8:
case 0xb0d9:
case 0xb0da:
case 0xb0db:
case 0xb0dc:
case 0xb0dd:
case 0xb0de:
case 0xb0df:
case 0xb2d8:
case 0xb2d9:
case 0xb2da:
case 0xb2db:
case 0xb2dc:
case 0xb2dd:
case 0xb2de:
case 0xb2df:
case 0xb4d8:
case 0xb4d9:
case 0xb4da:
case 0xb4db:
case 0xb4dc:
case 0xb4dd:
case 0xb4de:
case 0xb4df:
case 0xb6d8:
case 0xb6d9:
case 0xb6da:
case 0xb6db:
case 0xb6dc:
case 0xb6dd:
case 0xb6de:
case 0xb6df:
case 0xb8d8:
case 0xb8d9:
case 0xb8da:
case 0xb8db:
case 0xb8dc:
case 0xb8dd:
case 0xb8de:
case 0xb8df:
case 0xbad8:
case 0xbad9:
case 0xbada:
case 0xbadb:
case 0xbadc:
case 0xbadd:
case 0xbade:
case 0xbadf:
case 0xbcd8:
case 0xbcd9:
case 0xbcda:
case 0xbcdb:
case 0xbcdc:
case 0xbcdd:
case 0xbcde:
case 0xbcdf:
case 0xbed8:
case 0xbed9:
case 0xbeda:
case 0xbedb:
case 0xbedc:
case 0xbedd:
case 0xbede:
case 0xbedf:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90d8:
case 0x90d9:
case 0x90da:
case 0x90db:
case 0x90dc:
case 0x90dd:
case 0x90de:
case 0x90df:
case 0x92d8:
case 0x92d9:
case 0x92da:
case 0x92db:
case 0x92dc:
case 0x92dd:
case 0x92de:
case 0x92df:
case 0x94d8:
case 0x94d9:
case 0x94da:
case 0x94db:
case 0x94dc:
case 0x94dd:
case 0x94de:
case 0x94df:
case 0x96d8:
case 0x96d9:
case 0x96da:
case 0x96db:
case 0x96dc:
case 0x96dd:
case 0x96de:
case 0x96df:
case 0x98d8:
case 0x98d9:
case 0x98da:
case 0x98db:
case 0x98dc:
case 0x98dd:
case 0x98de:
case 0x98df:
case 0x9ad8:
case 0x9ad9:
case 0x9ada:
case 0x9adb:
case 0x9adc:
case 0x9add:
case 0x9ade:
case 0x9adf:
case 0x9cd8:
case 0x9cd9:
case 0x9cda:
case 0x9cdb:
case 0x9cdc:
case 0x9cdd:
case 0x9cde:
case 0x9cdf:
case 0x9ed8:
case 0x9ed9:
case 0x9eda:
case 0x9edb:
case 0x9edc:
case 0x9edd:
case 0x9ede:
case 0x9edf:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x3058:
case 0x3059:
case 0x305a:
case 0x305b:
case 0x305c:
case 0x305d:
case 0x305e:
case 0x305f:
case 0x3258:
case 0x3259:
case 0x325a:
case 0x325b:
case 0x325c:
case 0x325d:
case 0x325e:
case 0x325f:
case 0x3458:
case 0x3459:
case 0x345a:
case 0x345b:
case 0x345c:
case 0x345d:
case 0x345e:
case 0x345f:
case 0x3658:
case 0x3659:
case 0x365a:
case 0x365b:
case 0x365c:
case 0x365d:
case 0x365e:
case 0x365f:
case 0x3858:
case 0x3859:
case 0x385a:
case 0x385b:
case 0x385c:
case 0x385d:
case 0x385e:
case 0x385f:
case 0x3a58:
case 0x3a59:
case 0x3a5a:
case 0x3a5b:
case 0x3a5c:
case 0x3a5d:
case 0x3a5e:
case 0x3a5f:
case 0x3c58:
case 0x3c59:
case 0x3c5a:
case 0x3c5b:
case 0x3c5c:
case 0x3c5d:
case 0x3c5e:
case 0x3c5f:
case 0x3e58:
case 0x3e59:
case 0x3e5a:
case 0x3e5b:
case 0x3e5c:
case 0x3e5d:
case 0x3e5e:
case 0x3e5f:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44d8:
case 0x44d9:
case 0x44da:
case 0x44db:
case 0x44dc:
case 0x44dd:
case 0x44de:
case 0x44df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); MOVE_to_CCR(src);
	}
	break;

case 0xc1d8:
case 0xc1d9:
case 0xc1da:
case 0xc1db:
case 0xc1dc:
case 0xc1dd:
case 0xc1de:
case 0xc1df:
case 0xc3d8:
case 0xc3d9:
case 0xc3da:
case 0xc3db:
case 0xc3dc:
case 0xc3dd:
case 0xc3de:
case 0xc3df:
case 0xc5d8:
case 0xc5d9:
case 0xc5da:
case 0xc5db:
case 0xc5dc:
case 0xc5dd:
case 0xc5de:
case 0xc5df:
case 0xc7d8:
case 0xc7d9:
case 0xc7da:
case 0xc7db:
case 0xc7dc:
case 0xc7dd:
case 0xc7de:
case 0xc7df:
case 0xc9d8:
case 0xc9d9:
case 0xc9da:
case 0xc9db:
case 0xc9dc:
case 0xc9dd:
case 0xc9de:
case 0xc9df:
case 0xcbd8:
case 0xcbd9:
case 0xcbda:
case 0xcbdb:
case 0xcbdc:
case 0xcbdd:
case 0xcbde:
case 0xcbdf:
case 0xcdd8:
case 0xcdd9:
case 0xcdda:
case 0xcddb:
case 0xcddc:
case 0xcddd:
case 0xcdde:
case 0xcddf:
case 0xcfd8:
case 0xcfd9:
case 0xcfda:
case 0xcfdb:
case 0xcfdc:
case 0xcfdd:
case 0xcfde:
case 0xcfdf:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0d8:
case 0xc0d9:
case 0xc0da:
case 0xc0db:
case 0xc0dc:
case 0xc0dd:
case 0xc0de:
case 0xc0df:
case 0xc2d8:
case 0xc2d9:
case 0xc2da:
case 0xc2db:
case 0xc2dc:
case 0xc2dd:
case 0xc2de:
case 0xc2df:
case 0xc4d8:
case 0xc4d9:
case 0xc4da:
case 0xc4db:
case 0xc4dc:
case 0xc4dd:
case 0xc4de:
case 0xc4df:
case 0xc6d8:
case 0xc6d9:
case 0xc6da:
case 0xc6db:
case 0xc6dc:
case 0xc6dd:
case 0xc6de:
case 0xc6df:
case 0xc8d8:
case 0xc8d9:
case 0xc8da:
case 0xc8db:
case 0xc8dc:
case 0xc8dd:
case 0xc8de:
case 0xc8df:
case 0xcad8:
case 0xcad9:
case 0xcada:
case 0xcadb:
case 0xcadc:
case 0xcadd:
case 0xcade:
case 0xcadf:
case 0xccd8:
case 0xccd9:
case 0xccda:
case 0xccdb:
case 0xccdc:
case 0xccdd:
case 0xccde:
case 0xccdf:
case 0xced8:
case 0xced9:
case 0xceda:
case 0xcedb:
case 0xcedc:
case 0xcedd:
case 0xcede:
case 0xcedf:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); MULU(src, instr_b11_b9);
	}
	break;

case 0xe1d8:
case 0xe1d9:
case 0xe1da:
case 0xe1db:
case 0xe1dc:
case 0xe1dd:
case 0xe1de:
case 0xe1df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); ASL(targ, 1);
	}
	break;

case 0xe0d8:
case 0xe0d9:
case 0xe0da:
case 0xe0db:
case 0xe0dc:
case 0xe0dd:
case 0xe0de:
case 0xe0df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); ASR(targ, 1);
	}
	break;

case 0xe3d8:
case 0xe3d9:
case 0xe3da:
case 0xe3db:
case 0xe3dc:
case 0xe3dd:
case 0xe3de:
case 0xe3df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); LSL(targ, 1);
	}
	break;

case 0xe2d8:
case 0xe2d9:
case 0xe2da:
case 0xe2db:
case 0xe2dc:
case 0xe2dd:
case 0xe2de:
case 0xe2df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); LSR(targ, 1);
	}
	break;

case 0xe7d8:
case 0xe7d9:
case 0xe7da:
case 0xe7db:
case 0xe7dc:
case 0xe7dd:
case 0xe7de:
case 0xe7df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); ROL(targ, 1);
	}
	break;

case 0xe6d8:
case 0xe6d9:
case 0xe6da:
case 0xe6db:
case 0xe6dc:
case 0xe6dd:
case 0xe6de:
case 0xe6df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); ROR(targ, 1);
	}
	break;

case 0xe5d8:
case 0xe5d9:
case 0xe5da:
case 0xe5db:
case 0xe5dc:
case 0xe5dd:
case 0xe5de:
case 0xe5df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); ROXL(targ, 1);
	}
	break;

case 0xe4d8:
case 0xe4d9:
case 0xe4da:
case 0xe4db:
case 0xe4dc:
case 0xe4dd:
case 0xe4de:
case 0xe4df:
	{
	 HAM<uint16, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); ROXR(targ, 1);
	}
	break;

case 0x4260:
case 0x4261:
case 0x4262:
case 0x4263:
case 0x4264:
case 0x4265:
case 0x4266:
case 0x4267:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4460:
case 0x4461:
case 0x4462:
case 0x4463:
case 0x4464:
case 0x4465:
case 0x4466:
case 0x4467:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4060:
case 0x4061:
case 0x4062:
case 0x4063:
case 0x4064:
case 0x4065:
case 0x4066:
case 0x4067:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4660:
case 0x4661:
case 0x4662:
case 0x4663:
case 0x4664:
case 0x4665:
case 0x4666:
case 0x4667:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4a60:
case 0x4a61:
case 0x4a62:
case 0x4a63:
case 0x4a64:
case 0x4a65:
case 0x4a66:
case 0x4a67:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x81e0:
case 0x81e1:
case 0x81e2:
case 0x81e3:
case 0x81e4:
case 0x81e5:
case 0x81e6:
case 0x81e7:
case 0x83e0:
case 0x83e1:
case 0x83e2:
case 0x83e3:
case 0x83e4:
case 0x83e5:
case 0x83e6:
case 0x83e7:
case 0x85e0:
case 0x85e1:
case 0x85e2:
case 0x85e3:
case 0x85e4:
case 0x85e5:
case 0x85e6:
case 0x85e7:
case 0x87e0:
case 0x87e1:
case 0x87e2:
case 0x87e3:
case 0x87e4:
case 0x87e5:
case 0x87e6:
case 0x87e7:
case 0x89e0:
case 0x89e1:
case 0x89e2:
case 0x89e3:
case 0x89e4:
case 0x89e5:
case 0x89e6:
case 0x89e7:
case 0x8be0:
case 0x8be1:
case 0x8be2:
case 0x8be3:
case 0x8be4:
case 0x8be5:
case 0x8be6:
case 0x8be7:
case 0x8de0:
case 0x8de1:
case 0x8de2:
case 0x8de3:
case 0x8de4:
case 0x8de5:
case 0x8de6:
case 0x8de7:
case 0x8fe0:
case 0x8fe1:
case 0x8fe2:
case 0x8fe3:
case 0x8fe4:
case 0x8fe5:
case 0x8fe6:
case 0x8fe7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80e0:
case 0x80e1:
case 0x80e2:
case 0x80e3:
case 0x80e4:
case 0x80e5:
case 0x80e6:
case 0x80e7:
case 0x82e0:
case 0x82e1:
case 0x82e2:
case 0x82e3:
case 0x82e4:
case 0x82e5:
case 0x82e6:
case 0x82e7:
case 0x84e0:
case 0x84e1:
case 0x84e2:
case 0x84e3:
case 0x84e4:
case 0x84e5:
case 0x84e6:
case 0x84e7:
case 0x86e0:
case 0x86e1:
case 0x86e2:
case 0x86e3:
case 0x86e4:
case 0x86e5:
case 0x86e6:
case 0x86e7:
case 0x88e0:
case 0x88e1:
case 0x88e2:
case 0x88e3:
case 0x88e4:
case 0x88e5:
case 0x88e6:
case 0x88e7:
case 0x8ae0:
case 0x8ae1:
case 0x8ae2:
case 0x8ae3:
case 0x8ae4:
case 0x8ae5:
case 0x8ae6:
case 0x8ae7:
case 0x8ce0:
case 0x8ce1:
case 0x8ce2:
case 0x8ce3:
case 0x8ce4:
case 0x8ce5:
case 0x8ce6:
case 0x8ce7:
case 0x8ee0:
case 0x8ee1:
case 0x8ee2:
case 0x8ee3:
case 0x8ee4:
case 0x8ee5:
case 0x8ee6:
case 0x8ee7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33e0:
case 0x33e1:
case 0x33e2:
case 0x33e3:
case 0x33e4:
case 0x33e5:
case 0x33e6:
case 0x33e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31e0:
case 0x31e1:
case 0x31e2:
case 0x31e3:
case 0x31e4:
case 0x31e5:
case 0x31e6:
case 0x31e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x30a0:
case 0x30a1:
case 0x30a2:
case 0x30a3:
case 0x30a4:
case 0x30a5:
case 0x30a6:
case 0x30a7:
case 0x32a0:
case 0x32a1:
case 0x32a2:
case 0x32a3:
case 0x32a4:
case 0x32a5:
case 0x32a6:
case 0x32a7:
case 0x34a0:
case 0x34a1:
case 0x34a2:
case 0x34a3:
case 0x34a4:
case 0x34a5:
case 0x34a6:
case 0x34a7:
case 0x36a0:
case 0x36a1:
case 0x36a2:
case 0x36a3:
case 0x36a4:
case 0x36a5:
case 0x36a6:
case 0x36a7:
case 0x38a0:
case 0x38a1:
case 0x38a2:
case 0x38a3:
case 0x38a4:
case 0x38a5:
case 0x38a6:
case 0x38a7:
case 0x3aa0:
case 0x3aa1:
case 0x3aa2:
case 0x3aa3:
case 0x3aa4:
case 0x3aa5:
case 0x3aa6:
case 0x3aa7:
case 0x3ca0:
case 0x3ca1:
case 0x3ca2:
case 0x3ca3:
case 0x3ca4:
case 0x3ca5:
case 0x3ca6:
case 0x3ca7:
case 0x3ea0:
case 0x3ea1:
case 0x3ea2:
case 0x3ea3:
case 0x3ea4:
case 0x3ea5:
case 0x3ea6:
case 0x3ea7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3160:
case 0x3161:
case 0x3162:
case 0x3163:
case 0x3164:
case 0x3165:
case 0x3166:
case 0x3167:
case 0x3360:
case 0x3361:
case 0x3362:
case 0x3363:
case 0x3364:
case 0x3365:
case 0x3366:
case 0x3367:
case 0x3560:
case 0x3561:
case 0x3562:
case 0x3563:
case 0x3564:
case 0x3565:
case 0x3566:
case 0x3567:
case 0x3760:
case 0x3761:
case 0x3762:
case 0x3763:
case 0x3764:
case 0x3765:
case 0x3766:
case 0x3767:
case 0x3960:
case 0x3961:
case 0x3962:
case 0x3963:
case 0x3964:
case 0x3965:
case 0x3966:
case 0x3967:
case 0x3b60:
case 0x3b61:
case 0x3b62:
case 0x3b63:
case 0x3b64:
case 0x3b65:
case 0x3b66:
case 0x3b67:
case 0x3d60:
case 0x3d61:
case 0x3d62:
case 0x3d63:
case 0x3d64:
case 0x3d65:
case 0x3d66:
case 0x3d67:
case 0x3f60:
case 0x3f61:
case 0x3f62:
case 0x3f63:
case 0x3f64:
case 0x3f65:
case 0x3f66:
case 0x3f67:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x31a0:
case 0x31a1:
case 0x31a2:
case 0x31a3:
case 0x31a4:
case 0x31a5:
case 0x31a6:
case 0x31a7:
case 0x33a0:
case 0x33a1:
case 0x33a2:
case 0x33a3:
case 0x33a4:
case 0x33a5:
case 0x33a6:
case 0x33a7:
case 0x35a0:
case 0x35a1:
case 0x35a2:
case 0x35a3:
case 0x35a4:
case 0x35a5:
case 0x35a6:
case 0x35a7:
case 0x37a0:
case 0x37a1:
case 0x37a2:
case 0x37a3:
case 0x37a4:
case 0x37a5:
case 0x37a6:
case 0x37a7:
case 0x39a0:
case 0x39a1:
case 0x39a2:
case 0x39a3:
case 0x39a4:
case 0x39a5:
case 0x39a6:
case 0x39a7:
case 0x3ba0:
case 0x3ba1:
case 0x3ba2:
case 0x3ba3:
case 0x3ba4:
case 0x3ba5:
case 0x3ba6:
case 0x3ba7:
case 0x3da0:
case 0x3da1:
case 0x3da2:
case 0x3da3:
case 0x3da4:
case 0x3da5:
case 0x3da6:
case 0x3da7:
case 0x3fa0:
case 0x3fa1:
case 0x3fa2:
case 0x3fa3:
case 0x3fa4:
case 0x3fa5:
case 0x3fa6:
case 0x3fa7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30e0:
case 0x30e1:
case 0x30e2:
case 0x30e3:
case 0x30e4:
case 0x30e5:
case 0x30e6:
case 0x30e7:
case 0x32e0:
case 0x32e1:
case 0x32e2:
case 0x32e3:
case 0x32e4:
case 0x32e5:
case 0x32e6:
case 0x32e7:
case 0x34e0:
case 0x34e1:
case 0x34e2:
case 0x34e3:
case 0x34e4:
case 0x34e5:
case 0x34e6:
case 0x34e7:
case 0x36e0:
case 0x36e1:
case 0x36e2:
case 0x36e3:
case 0x36e4:
case 0x36e5:
case 0x36e6:
case 0x36e7:
case 0x38e0:
case 0x38e1:
case 0x38e2:
case 0x38e3:
case 0x38e4:
case 0x38e5:
case 0x38e6:
case 0x38e7:
case 0x3ae0:
case 0x3ae1:
case 0x3ae2:
case 0x3ae3:
case 0x3ae4:
case 0x3ae5:
case 0x3ae6:
case 0x3ae7:
case 0x3ce0:
case 0x3ce1:
case 0x3ce2:
case 0x3ce3:
case 0x3ce4:
case 0x3ce5:
case 0x3ce6:
case 0x3ce7:
case 0x3ee0:
case 0x3ee1:
case 0x3ee2:
case 0x3ee3:
case 0x3ee4:
case 0x3ee5:
case 0x3ee6:
case 0x3ee7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd148:
case 0xd149:
case 0xd14a:
case 0xd14b:
case 0xd14c:
case 0xd14d:
case 0xd14e:
case 0xd14f:
case 0xd348:
case 0xd349:
case 0xd34a:
case 0xd34b:
case 0xd34c:
case 0xd34d:
case 0xd34e:
case 0xd34f:
case 0xd548:
case 0xd549:
case 0xd54a:
case 0xd54b:
case 0xd54c:
case 0xd54d:
case 0xd54e:
case 0xd54f:
case 0xd748:
case 0xd749:
case 0xd74a:
case 0xd74b:
case 0xd74c:
case 0xd74d:
case 0xd74e:
case 0xd74f:
case 0xd948:
case 0xd949:
case 0xd94a:
case 0xd94b:
case 0xd94c:
case 0xd94d:
case 0xd94e:
case 0xd94f:
case 0xdb48:
case 0xdb49:
case 0xdb4a:
case 0xdb4b:
case 0xdb4c:
case 0xdb4d:
case 0xdb4e:
case 0xdb4f:
case 0xdd48:
case 0xdd49:
case 0xdd4a:
case 0xdd4b:
case 0xdd4c:
case 0xdd4d:
case 0xdd4e:
case 0xdd4f:
case 0xdf48:
case 0xdf49:
case 0xdf4a:
case 0xdf4b:
case 0xdf4c:
case 0xdf4d:
case 0xdf4e:
case 0xdf4f:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); ADDX(src, dst);
	}
	break;

case 0x3120:
case 0x3121:
case 0x3122:
case 0x3123:
case 0x3124:
case 0x3125:
case 0x3126:
case 0x3127:
case 0x3320:
case 0x3321:
case 0x3322:
case 0x3323:
case 0x3324:
case 0x3325:
case 0x3326:
case 0x3327:
case 0x3520:
case 0x3521:
case 0x3522:
case 0x3523:
case 0x3524:
case 0x3525:
case 0x3526:
case 0x3527:
case 0x3720:
case 0x3721:
case 0x3722:
case 0x3723:
case 0x3724:
case 0x3725:
case 0x3726:
case 0x3727:
case 0x3920:
case 0x3921:
case 0x3922:
case 0x3923:
case 0x3924:
case 0x3925:
case 0x3926:
case 0x3927:
case 0x3b20:
case 0x3b21:
case 0x3b22:
case 0x3b23:
case 0x3b24:
case 0x3b25:
case 0x3b26:
case 0x3b27:
case 0x3d20:
case 0x3d21:
case 0x3d22:
case 0x3d23:
case 0x3d24:
case 0x3d25:
case 0x3d26:
case 0x3d27:
case 0x3f20:
case 0x3f21:
case 0x3f22:
case 0x3f23:
case 0x3f24:
case 0x3f25:
case 0x3f26:
case 0x3f27:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x9148:
case 0x9149:
case 0x914a:
case 0x914b:
case 0x914c:
case 0x914d:
case 0x914e:
case 0x914f:
case 0x9348:
case 0x9349:
case 0x934a:
case 0x934b:
case 0x934c:
case 0x934d:
case 0x934e:
case 0x934f:
case 0x9548:
case 0x9549:
case 0x954a:
case 0x954b:
case 0x954c:
case 0x954d:
case 0x954e:
case 0x954f:
case 0x9748:
case 0x9749:
case 0x974a:
case 0x974b:
case 0x974c:
case 0x974d:
case 0x974e:
case 0x974f:
case 0x9948:
case 0x9949:
case 0x994a:
case 0x994b:
case 0x994c:
case 0x994d:
case 0x994e:
case 0x994f:
case 0x9b48:
case 0x9b49:
case 0x9b4a:
case 0x9b4b:
case 0x9b4c:
case 0x9b4d:
case 0x9b4e:
case 0x9b4f:
case 0x9d48:
case 0x9d49:
case 0x9d4a:
case 0x9d4b:
case 0x9d4c:
case 0x9d4d:
case 0x9d4e:
case 0x9d4f:
case 0x9f48:
case 0x9f49:
case 0x9f4a:
case 0x9f4b:
case 0x9f4c:
case 0x9f4d:
case 0x9f4e:
case 0x9f4f:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); SUBX(src, dst);
	}
	break;

case 0xd060:
case 0xd061:
case 0xd062:
case 0xd063:
case 0xd064:
case 0xd065:
case 0xd066:
case 0xd067:
case 0xd260:
case 0xd261:
case 0xd262:
case 0xd263:
case 0xd264:
case 0xd265:
case 0xd266:
case 0xd267:
case 0xd460:
case 0xd461:
case 0xd462:
case 0xd463:
case 0xd464:
case 0xd465:
case 0xd466:
case 0xd467:
case 0xd660:
case 0xd661:
case 0xd662:
case 0xd663:
case 0xd664:
case 0xd665:
case 0xd666:
case 0xd667:
case 0xd860:
case 0xd861:
case 0xd862:
case 0xd863:
case 0xd864:
case 0xd865:
case 0xd866:
case 0xd867:
case 0xda60:
case 0xda61:
case 0xda62:
case 0xda63:
case 0xda64:
case 0xda65:
case 0xda66:
case 0xda67:
case 0xdc60:
case 0xdc61:
case 0xdc62:
case 0xdc63:
case 0xdc64:
case 0xdc65:
case 0xdc66:
case 0xdc67:
case 0xde60:
case 0xde61:
case 0xde62:
case 0xde63:
case 0xde64:
case 0xde65:
case 0xde66:
case 0xde67:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc060:
case 0xc061:
case 0xc062:
case 0xc063:
case 0xc064:
case 0xc065:
case 0xc066:
case 0xc067:
case 0xc260:
case 0xc261:
case 0xc262:
case 0xc263:
case 0xc264:
case 0xc265:
case 0xc266:
case 0xc267:
case 0xc460:
case 0xc461:
case 0xc462:
case 0xc463:
case 0xc464:
case 0xc465:
case 0xc466:
case 0xc467:
case 0xc660:
case 0xc661:
case 0xc662:
case 0xc663:
case 0xc664:
case 0xc665:
case 0xc666:
case 0xc667:
case 0xc860:
case 0xc861:
case 0xc862:
case 0xc863:
case 0xc864:
case 0xc865:
case 0xc866:
case 0xc867:
case 0xca60:
case 0xca61:
case 0xca62:
case 0xca63:
case 0xca64:
case 0xca65:
case 0xca66:
case 0xca67:
case 0xcc60:
case 0xcc61:
case 0xcc62:
case 0xcc63:
case 0xcc64:
case 0xcc65:
case 0xcc66:
case 0xcc67:
case 0xce60:
case 0xce61:
case 0xce62:
case 0xce63:
case 0xce64:
case 0xce65:
case 0xce66:
case 0xce67:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x41a0:
case 0x41a1:
case 0x41a2:
case 0x41a3:
case 0x41a4:
case 0x41a5:
case 0x41a6:
case 0x41a7:
case 0x43a0:
case 0x43a1:
case 0x43a2:
case 0x43a3:
case 0x43a4:
case 0x43a5:
case 0x43a6:
case 0x43a7:
case 0x45a0:
case 0x45a1:
case 0x45a2:
case 0x45a3:
case 0x45a4:
case 0x45a5:
case 0x45a6:
case 0x45a7:
case 0x47a0:
case 0x47a1:
case 0x47a2:
case 0x47a3:
case 0x47a4:
case 0x47a5:
case 0x47a6:
case 0x47a7:
case 0x49a0:
case 0x49a1:
case 0x49a2:
case 0x49a3:
case 0x49a4:
case 0x49a5:
case 0x49a6:
case 0x49a7:
case 0x4ba0:
case 0x4ba1:
case 0x4ba2:
case 0x4ba3:
case 0x4ba4:
case 0x4ba5:
case 0x4ba6:
case 0x4ba7:
case 0x4da0:
case 0x4da1:
case 0x4da2:
case 0x4da3:
case 0x4da4:
case 0x4da5:
case 0x4da6:
case 0x4da7:
case 0x4fa0:
case 0x4fa1:
case 0x4fa2:
case 0x4fa3:
case 0x4fa4:
case 0x4fa5:
case 0x4fa6:
case 0x4fa7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb060:
case 0xb061:
case 0xb062:
case 0xb063:
case 0xb064:
case 0xb065:
case 0xb066:
case 0xb067:
case 0xb260:
case 0xb261:
case 0xb262:
case 0xb263:
case 0xb264:
case 0xb265:
case 0xb266:
case 0xb267:
case 0xb460:
case 0xb461:
case 0xb462:
case 0xb463:
case 0xb464:
case 0xb465:
case 0xb466:
case 0xb467:
case 0xb660:
case 0xb661:
case 0xb662:
case 0xb663:
case 0xb664:
case 0xb665:
case 0xb666:
case 0xb667:
case 0xb860:
case 0xb861:
case 0xb862:
case 0xb863:
case 0xb864:
case 0xb865:
case 0xb866:
case 0xb867:
case 0xba60:
case 0xba61:
case 0xba62:
case 0xba63:
case 0xba64:
case 0xba65:
case 0xba66:
case 0xba67:
case 0xbc60:
case 0xbc61:
case 0xbc62:
case 0xbc63:
case 0xbc64:
case 0xbc65:
case 0xbc66:
case 0xbc67:
case 0xbe60:
case 0xbe61:
case 0xbe62:
case 0xbe63:
case 0xbe64:
case 0xbe65:
case 0xbe66:
case 0xbe67:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x3020:
case 0x3021:
case 0x3022:
case 0x3023:
case 0x3024:
case 0x3025:
case 0x3026:
case 0x3027:
case 0x3220:
case 0x3221:
case 0x3222:
case 0x3223:
case 0x3224:
case 0x3225:
case 0x3226:
case 0x3227:
case 0x3420:
case 0x3421:
case 0x3422:
case 0x3423:
case 0x3424:
case 0x3425:
case 0x3426:
case 0x3427:
case 0x3620:
case 0x3621:
case 0x3622:
case 0x3623:
case 0x3624:
case 0x3625:
case 0x3626:
case 0x3627:
case 0x3820:
case 0x3821:
case 0x3822:
case 0x3823:
case 0x3824:
case 0x3825:
case 0x3826:
case 0x3827:
case 0x3a20:
case 0x3a21:
case 0x3a22:
case 0x3a23:
case 0x3a24:
case 0x3a25:
case 0x3a26:
case 0x3a27:
case 0x3c20:
case 0x3c21:
case 0x3c22:
case 0x3c23:
case 0x3c24:
case 0x3c25:
case 0x3c26:
case 0x3c27:
case 0x3e20:
case 0x3e21:
case 0x3e22:
case 0x3e23:
case 0x3e24:
case 0x3e25:
case 0x3e26:
case 0x3e27:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8060:
case 0x8061:
case 0x8062:
case 0x8063:
case 0x8064:
case 0x8065:
case 0x8066:
case 0x8067:
case 0x8260:
case 0x8261:
case 0x8262:
case 0x8263:
case 0x8264:
case 0x8265:
case 0x8266:
case 0x8267:
case 0x8460:
case 0x8461:
case 0x8462:
case 0x8463:
case 0x8464:
case 0x8465:
case 0x8466:
case 0x8467:
case 0x8660:
case 0x8661:
case 0x8662:
case 0x8663:
case 0x8664:
case 0x8665:
case 0x8666:
case 0x8667:
case 0x8860:
case 0x8861:
case 0x8862:
case 0x8863:
case 0x8864:
case 0x8865:
case 0x8866:
case 0x8867:
case 0x8a60:
case 0x8a61:
case 0x8a62:
case 0x8a63:
case 0x8a64:
case 0x8a65:
case 0x8a66:
case 0x8a67:
case 0x8c60:
case 0x8c61:
case 0x8c62:
case 0x8c63:
case 0x8c64:
case 0x8c65:
case 0x8c66:
case 0x8c67:
case 0x8e60:
case 0x8e61:
case 0x8e62:
case 0x8e63:
case 0x8e64:
case 0x8e65:
case 0x8e66:
case 0x8e67:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9060:
case 0x9061:
case 0x9062:
case 0x9063:
case 0x9064:
case 0x9065:
case 0x9066:
case 0x9067:
case 0x9260:
case 0x9261:
case 0x9262:
case 0x9263:
case 0x9264:
case 0x9265:
case 0x9266:
case 0x9267:
case 0x9460:
case 0x9461:
case 0x9462:
case 0x9463:
case 0x9464:
case 0x9465:
case 0x9466:
case 0x9467:
case 0x9660:
case 0x9661:
case 0x9662:
case 0x9663:
case 0x9664:
case 0x9665:
case 0x9666:
case 0x9667:
case 0x9860:
case 0x9861:
case 0x9862:
case 0x9863:
case 0x9864:
case 0x9865:
case 0x9866:
case 0x9867:
case 0x9a60:
case 0x9a61:
case 0x9a62:
case 0x9a63:
case 0x9a64:
case 0x9a65:
case 0x9a66:
case 0x9a67:
case 0x9c60:
case 0x9c61:
case 0x9c62:
case 0x9c63:
case 0x9c64:
case 0x9c65:
case 0x9c66:
case 0x9c67:
case 0x9e60:
case 0x9e61:
case 0x9e62:
case 0x9e63:
case 0x9e64:
case 0x9e65:
case 0x9e66:
case 0x9e67:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0e0:
case 0xd0e1:
case 0xd0e2:
case 0xd0e3:
case 0xd0e4:
case 0xd0e5:
case 0xd0e6:
case 0xd0e7:
case 0xd2e0:
case 0xd2e1:
case 0xd2e2:
case 0xd2e3:
case 0xd2e4:
case 0xd2e5:
case 0xd2e6:
case 0xd2e7:
case 0xd4e0:
case 0xd4e1:
case 0xd4e2:
case 0xd4e3:
case 0xd4e4:
case 0xd4e5:
case 0xd4e6:
case 0xd4e7:
case 0xd6e0:
case 0xd6e1:
case 0xd6e2:
case 0xd6e3:
case 0xd6e4:
case 0xd6e5:
case 0xd6e6:
case 0xd6e7:
case 0xd8e0:
case 0xd8e1:
case 0xd8e2:
case 0xd8e3:
case 0xd8e4:
case 0xd8e5:
case 0xd8e6:
case 0xd8e7:
case 0xdae0:
case 0xdae1:
case 0xdae2:
case 0xdae3:
case 0xdae4:
case 0xdae5:
case 0xdae6:
case 0xdae7:
case 0xdce0:
case 0xdce1:
case 0xdce2:
case 0xdce3:
case 0xdce4:
case 0xdce5:
case 0xdce6:
case 0xdce7:
case 0xdee0:
case 0xdee1:
case 0xdee2:
case 0xdee3:
case 0xdee4:
case 0xdee5:
case 0xdee6:
case 0xdee7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0e0:
case 0xb0e1:
case 0xb0e2:
case 0xb0e3:
case 0xb0e4:
case 0xb0e5:
case 0xb0e6:
case 0xb0e7:
case 0xb2e0:
case 0xb2e1:
case 0xb2e2:
case 0xb2e3:
case 0xb2e4:
case 0xb2e5:
case 0xb2e6:
case 0xb2e7:
case 0xb4e0:
case 0xb4e1:
case 0xb4e2:
case 0xb4e3:
case 0xb4e4:
case 0xb4e5:
case 0xb4e6:
case 0xb4e7:
case 0xb6e0:
case 0xb6e1:
case 0xb6e2:
case 0xb6e3:
case 0xb6e4:
case 0xb6e5:
case 0xb6e6:
case 0xb6e7:
case 0xb8e0:
case 0xb8e1:
case 0xb8e2:
case 0xb8e3:
case 0xb8e4:
case 0xb8e5:
case 0xb8e6:
case 0xb8e7:
case 0xbae0:
case 0xbae1:
case 0xbae2:
case 0xbae3:
case 0xbae4:
case 0xbae5:
case 0xbae6:
case 0xbae7:
case 0xbce0:
case 0xbce1:
case 0xbce2:
case 0xbce3:
case 0xbce4:
case 0xbce5:
case 0xbce6:
case 0xbce7:
case 0xbee0:
case 0xbee1:
case 0xbee2:
case 0xbee3:
case 0xbee4:
case 0xbee5:
case 0xbee6:
case 0xbee7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90e0:
case 0x90e1:
case 0x90e2:
case 0x90e3:
case 0x90e4:
case 0x90e5:
case 0x90e6:
case 0x90e7:
case 0x92e0:
case 0x92e1:
case 0x92e2:
case 0x92e3:
case 0x92e4:
case 0x92e5:
case 0x92e6:
case 0x92e7:
case 0x94e0:
case 0x94e1:
case 0x94e2:
case 0x94e3:
case 0x94e4:
case 0x94e5:
case 0x94e6:
case 0x94e7:
case 0x96e0:
case 0x96e1:
case 0x96e2:
case 0x96e3:
case 0x96e4:
case 0x96e5:
case 0x96e6:
case 0x96e7:
case 0x98e0:
case 0x98e1:
case 0x98e2:
case 0x98e3:
case 0x98e4:
case 0x98e5:
case 0x98e6:
case 0x98e7:
case 0x9ae0:
case 0x9ae1:
case 0x9ae2:
case 0x9ae3:
case 0x9ae4:
case 0x9ae5:
case 0x9ae6:
case 0x9ae7:
case 0x9ce0:
case 0x9ce1:
case 0x9ce2:
case 0x9ce3:
case 0x9ce4:
case 0x9ce5:
case 0x9ce6:
case 0x9ce7:
case 0x9ee0:
case 0x9ee1:
case 0x9ee2:
case 0x9ee3:
case 0x9ee4:
case 0x9ee5:
case 0x9ee6:
case 0x9ee7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x3060:
case 0x3061:
case 0x3062:
case 0x3063:
case 0x3064:
case 0x3065:
case 0x3066:
case 0x3067:
case 0x3260:
case 0x3261:
case 0x3262:
case 0x3263:
case 0x3264:
case 0x3265:
case 0x3266:
case 0x3267:
case 0x3460:
case 0x3461:
case 0x3462:
case 0x3463:
case 0x3464:
case 0x3465:
case 0x3466:
case 0x3467:
case 0x3660:
case 0x3661:
case 0x3662:
case 0x3663:
case 0x3664:
case 0x3665:
case 0x3666:
case 0x3667:
case 0x3860:
case 0x3861:
case 0x3862:
case 0x3863:
case 0x3864:
case 0x3865:
case 0x3866:
case 0x3867:
case 0x3a60:
case 0x3a61:
case 0x3a62:
case 0x3a63:
case 0x3a64:
case 0x3a65:
case 0x3a66:
case 0x3a67:
case 0x3c60:
case 0x3c61:
case 0x3c62:
case 0x3c63:
case 0x3c64:
case 0x3c65:
case 0x3c66:
case 0x3c67:
case 0x3e60:
case 0x3e61:
case 0x3e62:
case 0x3e63:
case 0x3e64:
case 0x3e65:
case 0x3e66:
case 0x3e67:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44e0:
case 0x44e1:
case 0x44e2:
case 0x44e3:
case 0x44e4:
case 0x44e5:
case 0x44e6:
case 0x44e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); MOVE_to_CCR(src);
	}
	break;

case 0xc1e0:
case 0xc1e1:
case 0xc1e2:
case 0xc1e3:
case 0xc1e4:
case 0xc1e5:
case 0xc1e6:
case 0xc1e7:
case 0xc3e0:
case 0xc3e1:
case 0xc3e2:
case 0xc3e3:
case 0xc3e4:
case 0xc3e5:
case 0xc3e6:
case 0xc3e7:
case 0xc5e0:
case 0xc5e1:
case 0xc5e2:
case 0xc5e3:
case 0xc5e4:
case 0xc5e5:
case 0xc5e6:
case 0xc5e7:
case 0xc7e0:
case 0xc7e1:
case 0xc7e2:
case 0xc7e3:
case 0xc7e4:
case 0xc7e5:
case 0xc7e6:
case 0xc7e7:
case 0xc9e0:
case 0xc9e1:
case 0xc9e2:
case 0xc9e3:
case 0xc9e4:
case 0xc9e5:
case 0xc9e6:
case 0xc9e7:
case 0xcbe0:
case 0xcbe1:
case 0xcbe2:
case 0xcbe3:
case 0xcbe4:
case 0xcbe5:
case 0xcbe6:
case 0xcbe7:
case 0xcde0:
case 0xcde1:
case 0xcde2:
case 0xcde3:
case 0xcde4:
case 0xcde5:
case 0xcde6:
case 0xcde7:
case 0xcfe0:
case 0xcfe1:
case 0xcfe2:
case 0xcfe3:
case 0xcfe4:
case 0xcfe5:
case 0xcfe6:
case 0xcfe7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0e0:
case 0xc0e1:
case 0xc0e2:
case 0xc0e3:
case 0xc0e4:
case 0xc0e5:
case 0xc0e6:
case 0xc0e7:
case 0xc2e0:
case 0xc2e1:
case 0xc2e2:
case 0xc2e3:
case 0xc2e4:
case 0xc2e5:
case 0xc2e6:
case 0xc2e7:
case 0xc4e0:
case 0xc4e1:
case 0xc4e2:
case 0xc4e3:
case 0xc4e4:
case 0xc4e5:
case 0xc4e6:
case 0xc4e7:
case 0xc6e0:
case 0xc6e1:
case 0xc6e2:
case 0xc6e3:
case 0xc6e4:
case 0xc6e5:
case 0xc6e6:
case 0xc6e7:
case 0xc8e0:
case 0xc8e1:
case 0xc8e2:
case 0xc8e3:
case 0xc8e4:
case 0xc8e5:
case 0xc8e6:
case 0xc8e7:
case 0xcae0:
case 0xcae1:
case 0xcae2:
case 0xcae3:
case 0xcae4:
case 0xcae5:
case 0xcae6:
case 0xcae7:
case 0xcce0:
case 0xcce1:
case 0xcce2:
case 0xcce3:
case 0xcce4:
case 0xcce5:
case 0xcce6:
case 0xcce7:
case 0xcee0:
case 0xcee1:
case 0xcee2:
case 0xcee3:
case 0xcee4:
case 0xcee5:
case 0xcee6:
case 0xcee7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); MULU(src, instr_b11_b9);
	}
	break;

case 0xe1e0:
case 0xe1e1:
case 0xe1e2:
case 0xe1e3:
case 0xe1e4:
case 0xe1e5:
case 0xe1e6:
case 0xe1e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); ASL(targ, 1);
	}
	break;

case 0xe0e0:
case 0xe0e1:
case 0xe0e2:
case 0xe0e3:
case 0xe0e4:
case 0xe0e5:
case 0xe0e6:
case 0xe0e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); ASR(targ, 1);
	}
	break;

case 0xe3e0:
case 0xe3e1:
case 0xe3e2:
case 0xe3e3:
case 0xe3e4:
case 0xe3e5:
case 0xe3e6:
case 0xe3e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); LSL(targ, 1);
	}
	break;

case 0xe2e0:
case 0xe2e1:
case 0xe2e2:
case 0xe2e3:
case 0xe2e4:
case 0xe2e5:
case 0xe2e6:
case 0xe2e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); LSR(targ, 1);
	}
	break;

case 0xe7e0:
case 0xe7e1:
case 0xe7e2:
case 0xe7e3:
case 0xe7e4:
case 0xe7e5:
case 0xe7e6:
case 0xe7e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); ROL(targ, 1);
	}
	break;

case 0xe6e0:
case 0xe6e1:
case 0xe6e2:
case 0xe6e3:
case 0xe6e4:
case 0xe6e5:
case 0xe6e6:
case 0xe6e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); ROR(targ, 1);
	}
	break;

case 0xe5e0:
case 0xe5e1:
case 0xe5e2:
case 0xe5e3:
case 0xe5e4:
case 0xe5e5:
case 0xe5e6:
case 0xe5e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); ROXL(targ, 1);
	}
	break;

case 0xe4e0:
case 0xe4e1:
case 0xe4e2:
case 0xe4e3:
case 0xe4e4:
case 0xe4e5:
case 0xe4e6:
case 0xe4e7:
	{
	 HAM<uint16, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); ROXR(targ, 1);
	}
	break;

case 0x4240:
case 0x4241:
case 0x4242:
case 0x4243:
case 0x4244:
case 0x4245:
case 0x4246:
case 0x4247:
	{
	 HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4880:
case 0x4881:
case 0x4882:
case 0x4883:
case 0x4884:
case 0x4885:
case 0x4886:
case 0x4887:
	{
	 HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); EXT(dst);
	}
	break;

case 0x4440:
case 0x4441:
case 0x4442:
case 0x4443:
case 0x4444:
case 0x4445:
case 0x4446:
case 0x4447:
	{
	 HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4040:
case 0x4041:
case 0x4042:
case 0x4043:
case 0x4044:
case 0x4045:
case 0x4046:
case 0x4047:
	{
	 HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4640:
case 0x4641:
case 0x4642:
case 0x4643:
case 0x4644:
case 0x4645:
case 0x4646:
case 0x4647:
	{
	 HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4a40:
case 0x4a41:
case 0x4a42:
case 0x4a43:
case 0x4a44:
case 0x4a45:
case 0x4a46:
case 0x4a47:
	{
	 HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0xd179:
case 0xd379:
case 0xd579:
case 0xd779:
case 0xd979:
case 0xdb79:
case 0xdd79:
case 0xdf79:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_LONG> dst(this); ADD(src, dst);
	}
	break;

case 0xc179:
case 0xc379:
case 0xc579:
case 0xc779:
case 0xc979:
case 0xcb79:
case 0xcd79:
case 0xcf79:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_LONG> dst(this); AND(src, dst);
	}
	break;

case 0xb179:
case 0xb379:
case 0xb579:
case 0xb779:
case 0xb979:
case 0xbb79:
case 0xbd79:
case 0xbf79:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_LONG> dst(this); EOR(src, dst);
	}
	break;

case 0x8179:
case 0x8379:
case 0x8579:
case 0x8779:
case 0x8979:
case 0x8b79:
case 0x8d79:
case 0x8f79:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_LONG> dst(this); OR(src, dst);
	}
	break;

case 0x9179:
case 0x9379:
case 0x9579:
case 0x9779:
case 0x9979:
case 0x9b79:
case 0x9d79:
case 0x9f79:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_LONG> dst(this); SUB(src, dst);
	}
	break;

case 0xd178:
case 0xd378:
case 0xd578:
case 0xd778:
case 0xd978:
case 0xdb78:
case 0xdd78:
case 0xdf78:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_SHORT> dst(this); ADD(src, dst);
	}
	break;

case 0xc178:
case 0xc378:
case 0xc578:
case 0xc778:
case 0xc978:
case 0xcb78:
case 0xcd78:
case 0xcf78:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_SHORT> dst(this); AND(src, dst);
	}
	break;

case 0xb178:
case 0xb378:
case 0xb578:
case 0xb778:
case 0xb978:
case 0xbb78:
case 0xbd78:
case 0xbf78:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_SHORT> dst(this); EOR(src, dst);
	}
	break;

case 0x8178:
case 0x8378:
case 0x8578:
case 0x8778:
case 0x8978:
case 0x8b78:
case 0x8d78:
case 0x8f78:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_SHORT> dst(this); OR(src, dst);
	}
	break;

case 0x9178:
case 0x9378:
case 0x9578:
case 0x9778:
case 0x9978:
case 0x9b78:
case 0x9d78:
case 0x9f78:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ABS_SHORT> dst(this); SUB(src, dst);
	}
	break;

case 0xd150:
case 0xd151:
case 0xd152:
case 0xd153:
case 0xd154:
case 0xd155:
case 0xd156:
case 0xd157:
case 0xd350:
case 0xd351:
case 0xd352:
case 0xd353:
case 0xd354:
case 0xd355:
case 0xd356:
case 0xd357:
case 0xd550:
case 0xd551:
case 0xd552:
case 0xd553:
case 0xd554:
case 0xd555:
case 0xd556:
case 0xd557:
case 0xd750:
case 0xd751:
case 0xd752:
case 0xd753:
case 0xd754:
case 0xd755:
case 0xd756:
case 0xd757:
case 0xd950:
case 0xd951:
case 0xd952:
case 0xd953:
case 0xd954:
case 0xd955:
case 0xd956:
case 0xd957:
case 0xdb50:
case 0xdb51:
case 0xdb52:
case 0xdb53:
case 0xdb54:
case 0xdb55:
case 0xdb56:
case 0xdb57:
case 0xdd50:
case 0xdd51:
case 0xdd52:
case 0xdd53:
case 0xdd54:
case 0xdd55:
case 0xdd56:
case 0xdd57:
case 0xdf50:
case 0xdf51:
case 0xdf52:
case 0xdf53:
case 0xdf54:
case 0xdf55:
case 0xdf56:
case 0xdf57:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc150:
case 0xc151:
case 0xc152:
case 0xc153:
case 0xc154:
case 0xc155:
case 0xc156:
case 0xc157:
case 0xc350:
case 0xc351:
case 0xc352:
case 0xc353:
case 0xc354:
case 0xc355:
case 0xc356:
case 0xc357:
case 0xc550:
case 0xc551:
case 0xc552:
case 0xc553:
case 0xc554:
case 0xc555:
case 0xc556:
case 0xc557:
case 0xc750:
case 0xc751:
case 0xc752:
case 0xc753:
case 0xc754:
case 0xc755:
case 0xc756:
case 0xc757:
case 0xc950:
case 0xc951:
case 0xc952:
case 0xc953:
case 0xc954:
case 0xc955:
case 0xc956:
case 0xc957:
case 0xcb50:
case 0xcb51:
case 0xcb52:
case 0xcb53:
case 0xcb54:
case 0xcb55:
case 0xcb56:
case 0xcb57:
case 0xcd50:
case 0xcd51:
case 0xcd52:
case 0xcd53:
case 0xcd54:
case 0xcd55:
case 0xcd56:
case 0xcd57:
case 0xcf50:
case 0xcf51:
case 0xcf52:
case 0xcf53:
case 0xcf54:
case 0xcf55:
case 0xcf56:
case 0xcf57:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb150:
case 0xb151:
case 0xb152:
case 0xb153:
case 0xb154:
case 0xb155:
case 0xb156:
case 0xb157:
case 0xb350:
case 0xb351:
case 0xb352:
case 0xb353:
case 0xb354:
case 0xb355:
case 0xb356:
case 0xb357:
case 0xb550:
case 0xb551:
case 0xb552:
case 0xb553:
case 0xb554:
case 0xb555:
case 0xb556:
case 0xb557:
case 0xb750:
case 0xb751:
case 0xb752:
case 0xb753:
case 0xb754:
case 0xb755:
case 0xb756:
case 0xb757:
case 0xb950:
case 0xb951:
case 0xb952:
case 0xb953:
case 0xb954:
case 0xb955:
case 0xb956:
case 0xb957:
case 0xbb50:
case 0xbb51:
case 0xbb52:
case 0xbb53:
case 0xbb54:
case 0xbb55:
case 0xbb56:
case 0xbb57:
case 0xbd50:
case 0xbd51:
case 0xbd52:
case 0xbd53:
case 0xbd54:
case 0xbd55:
case 0xbd56:
case 0xbd57:
case 0xbf50:
case 0xbf51:
case 0xbf52:
case 0xbf53:
case 0xbf54:
case 0xbf55:
case 0xbf56:
case 0xbf57:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8150:
case 0x8151:
case 0x8152:
case 0x8153:
case 0x8154:
case 0x8155:
case 0x8156:
case 0x8157:
case 0x8350:
case 0x8351:
case 0x8352:
case 0x8353:
case 0x8354:
case 0x8355:
case 0x8356:
case 0x8357:
case 0x8550:
case 0x8551:
case 0x8552:
case 0x8553:
case 0x8554:
case 0x8555:
case 0x8556:
case 0x8557:
case 0x8750:
case 0x8751:
case 0x8752:
case 0x8753:
case 0x8754:
case 0x8755:
case 0x8756:
case 0x8757:
case 0x8950:
case 0x8951:
case 0x8952:
case 0x8953:
case 0x8954:
case 0x8955:
case 0x8956:
case 0x8957:
case 0x8b50:
case 0x8b51:
case 0x8b52:
case 0x8b53:
case 0x8b54:
case 0x8b55:
case 0x8b56:
case 0x8b57:
case 0x8d50:
case 0x8d51:
case 0x8d52:
case 0x8d53:
case 0x8d54:
case 0x8d55:
case 0x8d56:
case 0x8d57:
case 0x8f50:
case 0x8f51:
case 0x8f52:
case 0x8f53:
case 0x8f54:
case 0x8f55:
case 0x8f56:
case 0x8f57:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9150:
case 0x9151:
case 0x9152:
case 0x9153:
case 0x9154:
case 0x9155:
case 0x9156:
case 0x9157:
case 0x9350:
case 0x9351:
case 0x9352:
case 0x9353:
case 0x9354:
case 0x9355:
case 0x9356:
case 0x9357:
case 0x9550:
case 0x9551:
case 0x9552:
case 0x9553:
case 0x9554:
case 0x9555:
case 0x9556:
case 0x9557:
case 0x9750:
case 0x9751:
case 0x9752:
case 0x9753:
case 0x9754:
case 0x9755:
case 0x9756:
case 0x9757:
case 0x9950:
case 0x9951:
case 0x9952:
case 0x9953:
case 0x9954:
case 0x9955:
case 0x9956:
case 0x9957:
case 0x9b50:
case 0x9b51:
case 0x9b52:
case 0x9b53:
case 0x9b54:
case 0x9b55:
case 0x9b56:
case 0x9b57:
case 0x9d50:
case 0x9d51:
case 0x9d52:
case 0x9d53:
case 0x9d54:
case 0x9d55:
case 0x9d56:
case 0x9d57:
case 0x9f50:
case 0x9f51:
case 0x9f52:
case 0x9f53:
case 0x9f54:
case 0x9f55:
case 0x9f56:
case 0x9f57:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd168:
case 0xd169:
case 0xd16a:
case 0xd16b:
case 0xd16c:
case 0xd16d:
case 0xd16e:
case 0xd16f:
case 0xd368:
case 0xd369:
case 0xd36a:
case 0xd36b:
case 0xd36c:
case 0xd36d:
case 0xd36e:
case 0xd36f:
case 0xd568:
case 0xd569:
case 0xd56a:
case 0xd56b:
case 0xd56c:
case 0xd56d:
case 0xd56e:
case 0xd56f:
case 0xd768:
case 0xd769:
case 0xd76a:
case 0xd76b:
case 0xd76c:
case 0xd76d:
case 0xd76e:
case 0xd76f:
case 0xd968:
case 0xd969:
case 0xd96a:
case 0xd96b:
case 0xd96c:
case 0xd96d:
case 0xd96e:
case 0xd96f:
case 0xdb68:
case 0xdb69:
case 0xdb6a:
case 0xdb6b:
case 0xdb6c:
case 0xdb6d:
case 0xdb6e:
case 0xdb6f:
case 0xdd68:
case 0xdd69:
case 0xdd6a:
case 0xdd6b:
case 0xdd6c:
case 0xdd6d:
case 0xdd6e:
case 0xdd6f:
case 0xdf68:
case 0xdf69:
case 0xdf6a:
case 0xdf6b:
case 0xdf6c:
case 0xdf6d:
case 0xdf6e:
case 0xdf6f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc168:
case 0xc169:
case 0xc16a:
case 0xc16b:
case 0xc16c:
case 0xc16d:
case 0xc16e:
case 0xc16f:
case 0xc368:
case 0xc369:
case 0xc36a:
case 0xc36b:
case 0xc36c:
case 0xc36d:
case 0xc36e:
case 0xc36f:
case 0xc568:
case 0xc569:
case 0xc56a:
case 0xc56b:
case 0xc56c:
case 0xc56d:
case 0xc56e:
case 0xc56f:
case 0xc768:
case 0xc769:
case 0xc76a:
case 0xc76b:
case 0xc76c:
case 0xc76d:
case 0xc76e:
case 0xc76f:
case 0xc968:
case 0xc969:
case 0xc96a:
case 0xc96b:
case 0xc96c:
case 0xc96d:
case 0xc96e:
case 0xc96f:
case 0xcb68:
case 0xcb69:
case 0xcb6a:
case 0xcb6b:
case 0xcb6c:
case 0xcb6d:
case 0xcb6e:
case 0xcb6f:
case 0xcd68:
case 0xcd69:
case 0xcd6a:
case 0xcd6b:
case 0xcd6c:
case 0xcd6d:
case 0xcd6e:
case 0xcd6f:
case 0xcf68:
case 0xcf69:
case 0xcf6a:
case 0xcf6b:
case 0xcf6c:
case 0xcf6d:
case 0xcf6e:
case 0xcf6f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb168:
case 0xb169:
case 0xb16a:
case 0xb16b:
case 0xb16c:
case 0xb16d:
case 0xb16e:
case 0xb16f:
case 0xb368:
case 0xb369:
case 0xb36a:
case 0xb36b:
case 0xb36c:
case 0xb36d:
case 0xb36e:
case 0xb36f:
case 0xb568:
case 0xb569:
case 0xb56a:
case 0xb56b:
case 0xb56c:
case 0xb56d:
case 0xb56e:
case 0xb56f:
case 0xb768:
case 0xb769:
case 0xb76a:
case 0xb76b:
case 0xb76c:
case 0xb76d:
case 0xb76e:
case 0xb76f:
case 0xb968:
case 0xb969:
case 0xb96a:
case 0xb96b:
case 0xb96c:
case 0xb96d:
case 0xb96e:
case 0xb96f:
case 0xbb68:
case 0xbb69:
case 0xbb6a:
case 0xbb6b:
case 0xbb6c:
case 0xbb6d:
case 0xbb6e:
case 0xbb6f:
case 0xbd68:
case 0xbd69:
case 0xbd6a:
case 0xbd6b:
case 0xbd6c:
case 0xbd6d:
case 0xbd6e:
case 0xbd6f:
case 0xbf68:
case 0xbf69:
case 0xbf6a:
case 0xbf6b:
case 0xbf6c:
case 0xbf6d:
case 0xbf6e:
case 0xbf6f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8168:
case 0x8169:
case 0x816a:
case 0x816b:
case 0x816c:
case 0x816d:
case 0x816e:
case 0x816f:
case 0x8368:
case 0x8369:
case 0x836a:
case 0x836b:
case 0x836c:
case 0x836d:
case 0x836e:
case 0x836f:
case 0x8568:
case 0x8569:
case 0x856a:
case 0x856b:
case 0x856c:
case 0x856d:
case 0x856e:
case 0x856f:
case 0x8768:
case 0x8769:
case 0x876a:
case 0x876b:
case 0x876c:
case 0x876d:
case 0x876e:
case 0x876f:
case 0x8968:
case 0x8969:
case 0x896a:
case 0x896b:
case 0x896c:
case 0x896d:
case 0x896e:
case 0x896f:
case 0x8b68:
case 0x8b69:
case 0x8b6a:
case 0x8b6b:
case 0x8b6c:
case 0x8b6d:
case 0x8b6e:
case 0x8b6f:
case 0x8d68:
case 0x8d69:
case 0x8d6a:
case 0x8d6b:
case 0x8d6c:
case 0x8d6d:
case 0x8d6e:
case 0x8d6f:
case 0x8f68:
case 0x8f69:
case 0x8f6a:
case 0x8f6b:
case 0x8f6c:
case 0x8f6d:
case 0x8f6e:
case 0x8f6f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9168:
case 0x9169:
case 0x916a:
case 0x916b:
case 0x916c:
case 0x916d:
case 0x916e:
case 0x916f:
case 0x9368:
case 0x9369:
case 0x936a:
case 0x936b:
case 0x936c:
case 0x936d:
case 0x936e:
case 0x936f:
case 0x9568:
case 0x9569:
case 0x956a:
case 0x956b:
case 0x956c:
case 0x956d:
case 0x956e:
case 0x956f:
case 0x9768:
case 0x9769:
case 0x976a:
case 0x976b:
case 0x976c:
case 0x976d:
case 0x976e:
case 0x976f:
case 0x9968:
case 0x9969:
case 0x996a:
case 0x996b:
case 0x996c:
case 0x996d:
case 0x996e:
case 0x996f:
case 0x9b68:
case 0x9b69:
case 0x9b6a:
case 0x9b6b:
case 0x9b6c:
case 0x9b6d:
case 0x9b6e:
case 0x9b6f:
case 0x9d68:
case 0x9d69:
case 0x9d6a:
case 0x9d6b:
case 0x9d6c:
case 0x9d6d:
case 0x9d6e:
case 0x9d6f:
case 0x9f68:
case 0x9f69:
case 0x9f6a:
case 0x9f6b:
case 0x9f6c:
case 0x9f6d:
case 0x9f6e:
case 0x9f6f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd170:
case 0xd171:
case 0xd172:
case 0xd173:
case 0xd174:
case 0xd175:
case 0xd176:
case 0xd177:
case 0xd370:
case 0xd371:
case 0xd372:
case 0xd373:
case 0xd374:
case 0xd375:
case 0xd376:
case 0xd377:
case 0xd570:
case 0xd571:
case 0xd572:
case 0xd573:
case 0xd574:
case 0xd575:
case 0xd576:
case 0xd577:
case 0xd770:
case 0xd771:
case 0xd772:
case 0xd773:
case 0xd774:
case 0xd775:
case 0xd776:
case 0xd777:
case 0xd970:
case 0xd971:
case 0xd972:
case 0xd973:
case 0xd974:
case 0xd975:
case 0xd976:
case 0xd977:
case 0xdb70:
case 0xdb71:
case 0xdb72:
case 0xdb73:
case 0xdb74:
case 0xdb75:
case 0xdb76:
case 0xdb77:
case 0xdd70:
case 0xdd71:
case 0xdd72:
case 0xdd73:
case 0xdd74:
case 0xdd75:
case 0xdd76:
case 0xdd77:
case 0xdf70:
case 0xdf71:
case 0xdf72:
case 0xdf73:
case 0xdf74:
case 0xdf75:
case 0xdf76:
case 0xdf77:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc170:
case 0xc171:
case 0xc172:
case 0xc173:
case 0xc174:
case 0xc175:
case 0xc176:
case 0xc177:
case 0xc370:
case 0xc371:
case 0xc372:
case 0xc373:
case 0xc374:
case 0xc375:
case 0xc376:
case 0xc377:
case 0xc570:
case 0xc571:
case 0xc572:
case 0xc573:
case 0xc574:
case 0xc575:
case 0xc576:
case 0xc577:
case 0xc770:
case 0xc771:
case 0xc772:
case 0xc773:
case 0xc774:
case 0xc775:
case 0xc776:
case 0xc777:
case 0xc970:
case 0xc971:
case 0xc972:
case 0xc973:
case 0xc974:
case 0xc975:
case 0xc976:
case 0xc977:
case 0xcb70:
case 0xcb71:
case 0xcb72:
case 0xcb73:
case 0xcb74:
case 0xcb75:
case 0xcb76:
case 0xcb77:
case 0xcd70:
case 0xcd71:
case 0xcd72:
case 0xcd73:
case 0xcd74:
case 0xcd75:
case 0xcd76:
case 0xcd77:
case 0xcf70:
case 0xcf71:
case 0xcf72:
case 0xcf73:
case 0xcf74:
case 0xcf75:
case 0xcf76:
case 0xcf77:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb170:
case 0xb171:
case 0xb172:
case 0xb173:
case 0xb174:
case 0xb175:
case 0xb176:
case 0xb177:
case 0xb370:
case 0xb371:
case 0xb372:
case 0xb373:
case 0xb374:
case 0xb375:
case 0xb376:
case 0xb377:
case 0xb570:
case 0xb571:
case 0xb572:
case 0xb573:
case 0xb574:
case 0xb575:
case 0xb576:
case 0xb577:
case 0xb770:
case 0xb771:
case 0xb772:
case 0xb773:
case 0xb774:
case 0xb775:
case 0xb776:
case 0xb777:
case 0xb970:
case 0xb971:
case 0xb972:
case 0xb973:
case 0xb974:
case 0xb975:
case 0xb976:
case 0xb977:
case 0xbb70:
case 0xbb71:
case 0xbb72:
case 0xbb73:
case 0xbb74:
case 0xbb75:
case 0xbb76:
case 0xbb77:
case 0xbd70:
case 0xbd71:
case 0xbd72:
case 0xbd73:
case 0xbd74:
case 0xbd75:
case 0xbd76:
case 0xbd77:
case 0xbf70:
case 0xbf71:
case 0xbf72:
case 0xbf73:
case 0xbf74:
case 0xbf75:
case 0xbf76:
case 0xbf77:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8170:
case 0x8171:
case 0x8172:
case 0x8173:
case 0x8174:
case 0x8175:
case 0x8176:
case 0x8177:
case 0x8370:
case 0x8371:
case 0x8372:
case 0x8373:
case 0x8374:
case 0x8375:
case 0x8376:
case 0x8377:
case 0x8570:
case 0x8571:
case 0x8572:
case 0x8573:
case 0x8574:
case 0x8575:
case 0x8576:
case 0x8577:
case 0x8770:
case 0x8771:
case 0x8772:
case 0x8773:
case 0x8774:
case 0x8775:
case 0x8776:
case 0x8777:
case 0x8970:
case 0x8971:
case 0x8972:
case 0x8973:
case 0x8974:
case 0x8975:
case 0x8976:
case 0x8977:
case 0x8b70:
case 0x8b71:
case 0x8b72:
case 0x8b73:
case 0x8b74:
case 0x8b75:
case 0x8b76:
case 0x8b77:
case 0x8d70:
case 0x8d71:
case 0x8d72:
case 0x8d73:
case 0x8d74:
case 0x8d75:
case 0x8d76:
case 0x8d77:
case 0x8f70:
case 0x8f71:
case 0x8f72:
case 0x8f73:
case 0x8f74:
case 0x8f75:
case 0x8f76:
case 0x8f77:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9170:
case 0x9171:
case 0x9172:
case 0x9173:
case 0x9174:
case 0x9175:
case 0x9176:
case 0x9177:
case 0x9370:
case 0x9371:
case 0x9372:
case 0x9373:
case 0x9374:
case 0x9375:
case 0x9376:
case 0x9377:
case 0x9570:
case 0x9571:
case 0x9572:
case 0x9573:
case 0x9574:
case 0x9575:
case 0x9576:
case 0x9577:
case 0x9770:
case 0x9771:
case 0x9772:
case 0x9773:
case 0x9774:
case 0x9775:
case 0x9776:
case 0x9777:
case 0x9970:
case 0x9971:
case 0x9972:
case 0x9973:
case 0x9974:
case 0x9975:
case 0x9976:
case 0x9977:
case 0x9b70:
case 0x9b71:
case 0x9b72:
case 0x9b73:
case 0x9b74:
case 0x9b75:
case 0x9b76:
case 0x9b77:
case 0x9d70:
case 0x9d71:
case 0x9d72:
case 0x9d73:
case 0x9d74:
case 0x9d75:
case 0x9d76:
case 0x9d77:
case 0x9f70:
case 0x9f71:
case 0x9f72:
case 0x9f73:
case 0x9f74:
case 0x9f75:
case 0x9f76:
case 0x9f77:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd158:
case 0xd159:
case 0xd15a:
case 0xd15b:
case 0xd15c:
case 0xd15d:
case 0xd15e:
case 0xd15f:
case 0xd358:
case 0xd359:
case 0xd35a:
case 0xd35b:
case 0xd35c:
case 0xd35d:
case 0xd35e:
case 0xd35f:
case 0xd558:
case 0xd559:
case 0xd55a:
case 0xd55b:
case 0xd55c:
case 0xd55d:
case 0xd55e:
case 0xd55f:
case 0xd758:
case 0xd759:
case 0xd75a:
case 0xd75b:
case 0xd75c:
case 0xd75d:
case 0xd75e:
case 0xd75f:
case 0xd958:
case 0xd959:
case 0xd95a:
case 0xd95b:
case 0xd95c:
case 0xd95d:
case 0xd95e:
case 0xd95f:
case 0xdb58:
case 0xdb59:
case 0xdb5a:
case 0xdb5b:
case 0xdb5c:
case 0xdb5d:
case 0xdb5e:
case 0xdb5f:
case 0xdd58:
case 0xdd59:
case 0xdd5a:
case 0xdd5b:
case 0xdd5c:
case 0xdd5d:
case 0xdd5e:
case 0xdd5f:
case 0xdf58:
case 0xdf59:
case 0xdf5a:
case 0xdf5b:
case 0xdf5c:
case 0xdf5d:
case 0xdf5e:
case 0xdf5f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc158:
case 0xc159:
case 0xc15a:
case 0xc15b:
case 0xc15c:
case 0xc15d:
case 0xc15e:
case 0xc15f:
case 0xc358:
case 0xc359:
case 0xc35a:
case 0xc35b:
case 0xc35c:
case 0xc35d:
case 0xc35e:
case 0xc35f:
case 0xc558:
case 0xc559:
case 0xc55a:
case 0xc55b:
case 0xc55c:
case 0xc55d:
case 0xc55e:
case 0xc55f:
case 0xc758:
case 0xc759:
case 0xc75a:
case 0xc75b:
case 0xc75c:
case 0xc75d:
case 0xc75e:
case 0xc75f:
case 0xc958:
case 0xc959:
case 0xc95a:
case 0xc95b:
case 0xc95c:
case 0xc95d:
case 0xc95e:
case 0xc95f:
case 0xcb58:
case 0xcb59:
case 0xcb5a:
case 0xcb5b:
case 0xcb5c:
case 0xcb5d:
case 0xcb5e:
case 0xcb5f:
case 0xcd58:
case 0xcd59:
case 0xcd5a:
case 0xcd5b:
case 0xcd5c:
case 0xcd5d:
case 0xcd5e:
case 0xcd5f:
case 0xcf58:
case 0xcf59:
case 0xcf5a:
case 0xcf5b:
case 0xcf5c:
case 0xcf5d:
case 0xcf5e:
case 0xcf5f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb158:
case 0xb159:
case 0xb15a:
case 0xb15b:
case 0xb15c:
case 0xb15d:
case 0xb15e:
case 0xb15f:
case 0xb358:
case 0xb359:
case 0xb35a:
case 0xb35b:
case 0xb35c:
case 0xb35d:
case 0xb35e:
case 0xb35f:
case 0xb558:
case 0xb559:
case 0xb55a:
case 0xb55b:
case 0xb55c:
case 0xb55d:
case 0xb55e:
case 0xb55f:
case 0xb758:
case 0xb759:
case 0xb75a:
case 0xb75b:
case 0xb75c:
case 0xb75d:
case 0xb75e:
case 0xb75f:
case 0xb958:
case 0xb959:
case 0xb95a:
case 0xb95b:
case 0xb95c:
case 0xb95d:
case 0xb95e:
case 0xb95f:
case 0xbb58:
case 0xbb59:
case 0xbb5a:
case 0xbb5b:
case 0xbb5c:
case 0xbb5d:
case 0xbb5e:
case 0xbb5f:
case 0xbd58:
case 0xbd59:
case 0xbd5a:
case 0xbd5b:
case 0xbd5c:
case 0xbd5d:
case 0xbd5e:
case 0xbd5f:
case 0xbf58:
case 0xbf59:
case 0xbf5a:
case 0xbf5b:
case 0xbf5c:
case 0xbf5d:
case 0xbf5e:
case 0xbf5f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8158:
case 0x8159:
case 0x815a:
case 0x815b:
case 0x815c:
case 0x815d:
case 0x815e:
case 0x815f:
case 0x8358:
case 0x8359:
case 0x835a:
case 0x835b:
case 0x835c:
case 0x835d:
case 0x835e:
case 0x835f:
case 0x8558:
case 0x8559:
case 0x855a:
case 0x855b:
case 0x855c:
case 0x855d:
case 0x855e:
case 0x855f:
case 0x8758:
case 0x8759:
case 0x875a:
case 0x875b:
case 0x875c:
case 0x875d:
case 0x875e:
case 0x875f:
case 0x8958:
case 0x8959:
case 0x895a:
case 0x895b:
case 0x895c:
case 0x895d:
case 0x895e:
case 0x895f:
case 0x8b58:
case 0x8b59:
case 0x8b5a:
case 0x8b5b:
case 0x8b5c:
case 0x8b5d:
case 0x8b5e:
case 0x8b5f:
case 0x8d58:
case 0x8d59:
case 0x8d5a:
case 0x8d5b:
case 0x8d5c:
case 0x8d5d:
case 0x8d5e:
case 0x8d5f:
case 0x8f58:
case 0x8f59:
case 0x8f5a:
case 0x8f5b:
case 0x8f5c:
case 0x8f5d:
case 0x8f5e:
case 0x8f5f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9158:
case 0x9159:
case 0x915a:
case 0x915b:
case 0x915c:
case 0x915d:
case 0x915e:
case 0x915f:
case 0x9358:
case 0x9359:
case 0x935a:
case 0x935b:
case 0x935c:
case 0x935d:
case 0x935e:
case 0x935f:
case 0x9558:
case 0x9559:
case 0x955a:
case 0x955b:
case 0x955c:
case 0x955d:
case 0x955e:
case 0x955f:
case 0x9758:
case 0x9759:
case 0x975a:
case 0x975b:
case 0x975c:
case 0x975d:
case 0x975e:
case 0x975f:
case 0x9958:
case 0x9959:
case 0x995a:
case 0x995b:
case 0x995c:
case 0x995d:
case 0x995e:
case 0x995f:
case 0x9b58:
case 0x9b59:
case 0x9b5a:
case 0x9b5b:
case 0x9b5c:
case 0x9b5d:
case 0x9b5e:
case 0x9b5f:
case 0x9d58:
case 0x9d59:
case 0x9d5a:
case 0x9d5b:
case 0x9d5c:
case 0x9d5d:
case 0x9d5e:
case 0x9d5f:
case 0x9f58:
case 0x9f59:
case 0x9f5a:
case 0x9f5b:
case 0x9f5c:
case 0x9f5d:
case 0x9f5e:
case 0x9f5f:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd160:
case 0xd161:
case 0xd162:
case 0xd163:
case 0xd164:
case 0xd165:
case 0xd166:
case 0xd167:
case 0xd360:
case 0xd361:
case 0xd362:
case 0xd363:
case 0xd364:
case 0xd365:
case 0xd366:
case 0xd367:
case 0xd560:
case 0xd561:
case 0xd562:
case 0xd563:
case 0xd564:
case 0xd565:
case 0xd566:
case 0xd567:
case 0xd760:
case 0xd761:
case 0xd762:
case 0xd763:
case 0xd764:
case 0xd765:
case 0xd766:
case 0xd767:
case 0xd960:
case 0xd961:
case 0xd962:
case 0xd963:
case 0xd964:
case 0xd965:
case 0xd966:
case 0xd967:
case 0xdb60:
case 0xdb61:
case 0xdb62:
case 0xdb63:
case 0xdb64:
case 0xdb65:
case 0xdb66:
case 0xdb67:
case 0xdd60:
case 0xdd61:
case 0xdd62:
case 0xdd63:
case 0xdd64:
case 0xdd65:
case 0xdd66:
case 0xdd67:
case 0xdf60:
case 0xdf61:
case 0xdf62:
case 0xdf63:
case 0xdf64:
case 0xdf65:
case 0xdf66:
case 0xdf67:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc160:
case 0xc161:
case 0xc162:
case 0xc163:
case 0xc164:
case 0xc165:
case 0xc166:
case 0xc167:
case 0xc360:
case 0xc361:
case 0xc362:
case 0xc363:
case 0xc364:
case 0xc365:
case 0xc366:
case 0xc367:
case 0xc560:
case 0xc561:
case 0xc562:
case 0xc563:
case 0xc564:
case 0xc565:
case 0xc566:
case 0xc567:
case 0xc760:
case 0xc761:
case 0xc762:
case 0xc763:
case 0xc764:
case 0xc765:
case 0xc766:
case 0xc767:
case 0xc960:
case 0xc961:
case 0xc962:
case 0xc963:
case 0xc964:
case 0xc965:
case 0xc966:
case 0xc967:
case 0xcb60:
case 0xcb61:
case 0xcb62:
case 0xcb63:
case 0xcb64:
case 0xcb65:
case 0xcb66:
case 0xcb67:
case 0xcd60:
case 0xcd61:
case 0xcd62:
case 0xcd63:
case 0xcd64:
case 0xcd65:
case 0xcd66:
case 0xcd67:
case 0xcf60:
case 0xcf61:
case 0xcf62:
case 0xcf63:
case 0xcf64:
case 0xcf65:
case 0xcf66:
case 0xcf67:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb160:
case 0xb161:
case 0xb162:
case 0xb163:
case 0xb164:
case 0xb165:
case 0xb166:
case 0xb167:
case 0xb360:
case 0xb361:
case 0xb362:
case 0xb363:
case 0xb364:
case 0xb365:
case 0xb366:
case 0xb367:
case 0xb560:
case 0xb561:
case 0xb562:
case 0xb563:
case 0xb564:
case 0xb565:
case 0xb566:
case 0xb567:
case 0xb760:
case 0xb761:
case 0xb762:
case 0xb763:
case 0xb764:
case 0xb765:
case 0xb766:
case 0xb767:
case 0xb960:
case 0xb961:
case 0xb962:
case 0xb963:
case 0xb964:
case 0xb965:
case 0xb966:
case 0xb967:
case 0xbb60:
case 0xbb61:
case 0xbb62:
case 0xbb63:
case 0xbb64:
case 0xbb65:
case 0xbb66:
case 0xbb67:
case 0xbd60:
case 0xbd61:
case 0xbd62:
case 0xbd63:
case 0xbd64:
case 0xbd65:
case 0xbd66:
case 0xbd67:
case 0xbf60:
case 0xbf61:
case 0xbf62:
case 0xbf63:
case 0xbf64:
case 0xbf65:
case 0xbf66:
case 0xbf67:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8160:
case 0x8161:
case 0x8162:
case 0x8163:
case 0x8164:
case 0x8165:
case 0x8166:
case 0x8167:
case 0x8360:
case 0x8361:
case 0x8362:
case 0x8363:
case 0x8364:
case 0x8365:
case 0x8366:
case 0x8367:
case 0x8560:
case 0x8561:
case 0x8562:
case 0x8563:
case 0x8564:
case 0x8565:
case 0x8566:
case 0x8567:
case 0x8760:
case 0x8761:
case 0x8762:
case 0x8763:
case 0x8764:
case 0x8765:
case 0x8766:
case 0x8767:
case 0x8960:
case 0x8961:
case 0x8962:
case 0x8963:
case 0x8964:
case 0x8965:
case 0x8966:
case 0x8967:
case 0x8b60:
case 0x8b61:
case 0x8b62:
case 0x8b63:
case 0x8b64:
case 0x8b65:
case 0x8b66:
case 0x8b67:
case 0x8d60:
case 0x8d61:
case 0x8d62:
case 0x8d63:
case 0x8d64:
case 0x8d65:
case 0x8d66:
case 0x8d67:
case 0x8f60:
case 0x8f61:
case 0x8f62:
case 0x8f63:
case 0x8f64:
case 0x8f65:
case 0x8f66:
case 0x8f67:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9160:
case 0x9161:
case 0x9162:
case 0x9163:
case 0x9164:
case 0x9165:
case 0x9166:
case 0x9167:
case 0x9360:
case 0x9361:
case 0x9362:
case 0x9363:
case 0x9364:
case 0x9365:
case 0x9366:
case 0x9367:
case 0x9560:
case 0x9561:
case 0x9562:
case 0x9563:
case 0x9564:
case 0x9565:
case 0x9566:
case 0x9567:
case 0x9760:
case 0x9761:
case 0x9762:
case 0x9763:
case 0x9764:
case 0x9765:
case 0x9766:
case 0x9767:
case 0x9960:
case 0x9961:
case 0x9962:
case 0x9963:
case 0x9964:
case 0x9965:
case 0x9966:
case 0x9967:
case 0x9b60:
case 0x9b61:
case 0x9b62:
case 0x9b63:
case 0x9b64:
case 0x9b65:
case 0x9b66:
case 0x9b67:
case 0x9d60:
case 0x9d61:
case 0x9d62:
case 0x9d63:
case 0x9d64:
case 0x9d65:
case 0x9d66:
case 0x9d67:
case 0x9f60:
case 0x9f61:
case 0x9f62:
case 0x9f63:
case 0x9f64:
case 0x9f65:
case 0x9f66:
case 0x9f67:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xb140:
case 0xb141:
case 0xb142:
case 0xb143:
case 0xb144:
case 0xb145:
case 0xb146:
case 0xb147:
case 0xb340:
case 0xb341:
case 0xb342:
case 0xb343:
case 0xb344:
case 0xb345:
case 0xb346:
case 0xb347:
case 0xb540:
case 0xb541:
case 0xb542:
case 0xb543:
case 0xb544:
case 0xb545:
case 0xb546:
case 0xb547:
case 0xb740:
case 0xb741:
case 0xb742:
case 0xb743:
case 0xb744:
case 0xb745:
case 0xb746:
case 0xb747:
case 0xb940:
case 0xb941:
case 0xb942:
case 0xb943:
case 0xb944:
case 0xb945:
case 0xb946:
case 0xb947:
case 0xbb40:
case 0xbb41:
case 0xbb42:
case 0xbb43:
case 0xbb44:
case 0xbb45:
case 0xbb46:
case 0xbb47:
case 0xbd40:
case 0xbd41:
case 0xbd42:
case 0xbd43:
case 0xbd44:
case 0xbd45:
case 0xbd46:
case 0xbd47:
case 0xbf40:
case 0xbf41:
case 0xbf42:
case 0xbf43:
case 0xbf44:
case 0xbf45:
case 0xbf46:
case 0xbf47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x81c0:
case 0x81c1:
case 0x81c2:
case 0x81c3:
case 0x81c4:
case 0x81c5:
case 0x81c6:
case 0x81c7:
case 0x83c0:
case 0x83c1:
case 0x83c2:
case 0x83c3:
case 0x83c4:
case 0x83c5:
case 0x83c6:
case 0x83c7:
case 0x85c0:
case 0x85c1:
case 0x85c2:
case 0x85c3:
case 0x85c4:
case 0x85c5:
case 0x85c6:
case 0x85c7:
case 0x87c0:
case 0x87c1:
case 0x87c2:
case 0x87c3:
case 0x87c4:
case 0x87c5:
case 0x87c6:
case 0x87c7:
case 0x89c0:
case 0x89c1:
case 0x89c2:
case 0x89c3:
case 0x89c4:
case 0x89c5:
case 0x89c6:
case 0x89c7:
case 0x8bc0:
case 0x8bc1:
case 0x8bc2:
case 0x8bc3:
case 0x8bc4:
case 0x8bc5:
case 0x8bc6:
case 0x8bc7:
case 0x8dc0:
case 0x8dc1:
case 0x8dc2:
case 0x8dc3:
case 0x8dc4:
case 0x8dc5:
case 0x8dc6:
case 0x8dc7:
case 0x8fc0:
case 0x8fc1:
case 0x8fc2:
case 0x8fc3:
case 0x8fc4:
case 0x8fc5:
case 0x8fc6:
case 0x8fc7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80c0:
case 0x80c1:
case 0x80c2:
case 0x80c3:
case 0x80c4:
case 0x80c5:
case 0x80c6:
case 0x80c7:
case 0x82c0:
case 0x82c1:
case 0x82c2:
case 0x82c3:
case 0x82c4:
case 0x82c5:
case 0x82c6:
case 0x82c7:
case 0x84c0:
case 0x84c1:
case 0x84c2:
case 0x84c3:
case 0x84c4:
case 0x84c5:
case 0x84c6:
case 0x84c7:
case 0x86c0:
case 0x86c1:
case 0x86c2:
case 0x86c3:
case 0x86c4:
case 0x86c5:
case 0x86c6:
case 0x86c7:
case 0x88c0:
case 0x88c1:
case 0x88c2:
case 0x88c3:
case 0x88c4:
case 0x88c5:
case 0x88c6:
case 0x88c7:
case 0x8ac0:
case 0x8ac1:
case 0x8ac2:
case 0x8ac3:
case 0x8ac4:
case 0x8ac5:
case 0x8ac6:
case 0x8ac7:
case 0x8cc0:
case 0x8cc1:
case 0x8cc2:
case 0x8cc3:
case 0x8cc4:
case 0x8cc5:
case 0x8cc6:
case 0x8cc7:
case 0x8ec0:
case 0x8ec1:
case 0x8ec2:
case 0x8ec3:
case 0x8ec4:
case 0x8ec5:
case 0x8ec6:
case 0x8ec7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33c0:
case 0x33c1:
case 0x33c2:
case 0x33c3:
case 0x33c4:
case 0x33c5:
case 0x33c6:
case 0x33c7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31c0:
case 0x31c1:
case 0x31c2:
case 0x31c3:
case 0x31c4:
case 0x31c5:
case 0x31c6:
case 0x31c7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x3080:
case 0x3081:
case 0x3082:
case 0x3083:
case 0x3084:
case 0x3085:
case 0x3086:
case 0x3087:
case 0x3280:
case 0x3281:
case 0x3282:
case 0x3283:
case 0x3284:
case 0x3285:
case 0x3286:
case 0x3287:
case 0x3480:
case 0x3481:
case 0x3482:
case 0x3483:
case 0x3484:
case 0x3485:
case 0x3486:
case 0x3487:
case 0x3680:
case 0x3681:
case 0x3682:
case 0x3683:
case 0x3684:
case 0x3685:
case 0x3686:
case 0x3687:
case 0x3880:
case 0x3881:
case 0x3882:
case 0x3883:
case 0x3884:
case 0x3885:
case 0x3886:
case 0x3887:
case 0x3a80:
case 0x3a81:
case 0x3a82:
case 0x3a83:
case 0x3a84:
case 0x3a85:
case 0x3a86:
case 0x3a87:
case 0x3c80:
case 0x3c81:
case 0x3c82:
case 0x3c83:
case 0x3c84:
case 0x3c85:
case 0x3c86:
case 0x3c87:
case 0x3e80:
case 0x3e81:
case 0x3e82:
case 0x3e83:
case 0x3e84:
case 0x3e85:
case 0x3e86:
case 0x3e87:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3140:
case 0x3141:
case 0x3142:
case 0x3143:
case 0x3144:
case 0x3145:
case 0x3146:
case 0x3147:
case 0x3340:
case 0x3341:
case 0x3342:
case 0x3343:
case 0x3344:
case 0x3345:
case 0x3346:
case 0x3347:
case 0x3540:
case 0x3541:
case 0x3542:
case 0x3543:
case 0x3544:
case 0x3545:
case 0x3546:
case 0x3547:
case 0x3740:
case 0x3741:
case 0x3742:
case 0x3743:
case 0x3744:
case 0x3745:
case 0x3746:
case 0x3747:
case 0x3940:
case 0x3941:
case 0x3942:
case 0x3943:
case 0x3944:
case 0x3945:
case 0x3946:
case 0x3947:
case 0x3b40:
case 0x3b41:
case 0x3b42:
case 0x3b43:
case 0x3b44:
case 0x3b45:
case 0x3b46:
case 0x3b47:
case 0x3d40:
case 0x3d41:
case 0x3d42:
case 0x3d43:
case 0x3d44:
case 0x3d45:
case 0x3d46:
case 0x3d47:
case 0x3f40:
case 0x3f41:
case 0x3f42:
case 0x3f43:
case 0x3f44:
case 0x3f45:
case 0x3f46:
case 0x3f47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3180:
case 0x3181:
case 0x3182:
case 0x3183:
case 0x3184:
case 0x3185:
case 0x3186:
case 0x3187:
case 0x3380:
case 0x3381:
case 0x3382:
case 0x3383:
case 0x3384:
case 0x3385:
case 0x3386:
case 0x3387:
case 0x3580:
case 0x3581:
case 0x3582:
case 0x3583:
case 0x3584:
case 0x3585:
case 0x3586:
case 0x3587:
case 0x3780:
case 0x3781:
case 0x3782:
case 0x3783:
case 0x3784:
case 0x3785:
case 0x3786:
case 0x3787:
case 0x3980:
case 0x3981:
case 0x3982:
case 0x3983:
case 0x3984:
case 0x3985:
case 0x3986:
case 0x3987:
case 0x3b80:
case 0x3b81:
case 0x3b82:
case 0x3b83:
case 0x3b84:
case 0x3b85:
case 0x3b86:
case 0x3b87:
case 0x3d80:
case 0x3d81:
case 0x3d82:
case 0x3d83:
case 0x3d84:
case 0x3d85:
case 0x3d86:
case 0x3d87:
case 0x3f80:
case 0x3f81:
case 0x3f82:
case 0x3f83:
case 0x3f84:
case 0x3f85:
case 0x3f86:
case 0x3f87:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30c0:
case 0x30c1:
case 0x30c2:
case 0x30c3:
case 0x30c4:
case 0x30c5:
case 0x30c6:
case 0x30c7:
case 0x32c0:
case 0x32c1:
case 0x32c2:
case 0x32c3:
case 0x32c4:
case 0x32c5:
case 0x32c6:
case 0x32c7:
case 0x34c0:
case 0x34c1:
case 0x34c2:
case 0x34c3:
case 0x34c4:
case 0x34c5:
case 0x34c6:
case 0x34c7:
case 0x36c0:
case 0x36c1:
case 0x36c2:
case 0x36c3:
case 0x36c4:
case 0x36c5:
case 0x36c6:
case 0x36c7:
case 0x38c0:
case 0x38c1:
case 0x38c2:
case 0x38c3:
case 0x38c4:
case 0x38c5:
case 0x38c6:
case 0x38c7:
case 0x3ac0:
case 0x3ac1:
case 0x3ac2:
case 0x3ac3:
case 0x3ac4:
case 0x3ac5:
case 0x3ac6:
case 0x3ac7:
case 0x3cc0:
case 0x3cc1:
case 0x3cc2:
case 0x3cc3:
case 0x3cc4:
case 0x3cc5:
case 0x3cc6:
case 0x3cc7:
case 0x3ec0:
case 0x3ec1:
case 0x3ec2:
case 0x3ec3:
case 0x3ec4:
case 0x3ec5:
case 0x3ec6:
case 0x3ec7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x3100:
case 0x3101:
case 0x3102:
case 0x3103:
case 0x3104:
case 0x3105:
case 0x3106:
case 0x3107:
case 0x3300:
case 0x3301:
case 0x3302:
case 0x3303:
case 0x3304:
case 0x3305:
case 0x3306:
case 0x3307:
case 0x3500:
case 0x3501:
case 0x3502:
case 0x3503:
case 0x3504:
case 0x3505:
case 0x3506:
case 0x3507:
case 0x3700:
case 0x3701:
case 0x3702:
case 0x3703:
case 0x3704:
case 0x3705:
case 0x3706:
case 0x3707:
case 0x3900:
case 0x3901:
case 0x3902:
case 0x3903:
case 0x3904:
case 0x3905:
case 0x3906:
case 0x3907:
case 0x3b00:
case 0x3b01:
case 0x3b02:
case 0x3b03:
case 0x3b04:
case 0x3b05:
case 0x3b06:
case 0x3b07:
case 0x3d00:
case 0x3d01:
case 0x3d02:
case 0x3d03:
case 0x3d04:
case 0x3d05:
case 0x3d06:
case 0x3d07:
case 0x3f00:
case 0x3f01:
case 0x3f02:
case 0x3f03:
case 0x3f04:
case 0x3f05:
case 0x3f06:
case 0x3f07:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd040:
case 0xd041:
case 0xd042:
case 0xd043:
case 0xd044:
case 0xd045:
case 0xd046:
case 0xd047:
case 0xd240:
case 0xd241:
case 0xd242:
case 0xd243:
case 0xd244:
case 0xd245:
case 0xd246:
case 0xd247:
case 0xd440:
case 0xd441:
case 0xd442:
case 0xd443:
case 0xd444:
case 0xd445:
case 0xd446:
case 0xd447:
case 0xd640:
case 0xd641:
case 0xd642:
case 0xd643:
case 0xd644:
case 0xd645:
case 0xd646:
case 0xd647:
case 0xd840:
case 0xd841:
case 0xd842:
case 0xd843:
case 0xd844:
case 0xd845:
case 0xd846:
case 0xd847:
case 0xda40:
case 0xda41:
case 0xda42:
case 0xda43:
case 0xda44:
case 0xda45:
case 0xda46:
case 0xda47:
case 0xdc40:
case 0xdc41:
case 0xdc42:
case 0xdc43:
case 0xdc44:
case 0xdc45:
case 0xdc46:
case 0xdc47:
case 0xde40:
case 0xde41:
case 0xde42:
case 0xde43:
case 0xde44:
case 0xde45:
case 0xde46:
case 0xde47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xd140:
case 0xd141:
case 0xd142:
case 0xd143:
case 0xd144:
case 0xd145:
case 0xd146:
case 0xd147:
case 0xd340:
case 0xd341:
case 0xd342:
case 0xd343:
case 0xd344:
case 0xd345:
case 0xd346:
case 0xd347:
case 0xd540:
case 0xd541:
case 0xd542:
case 0xd543:
case 0xd544:
case 0xd545:
case 0xd546:
case 0xd547:
case 0xd740:
case 0xd741:
case 0xd742:
case 0xd743:
case 0xd744:
case 0xd745:
case 0xd746:
case 0xd747:
case 0xd940:
case 0xd941:
case 0xd942:
case 0xd943:
case 0xd944:
case 0xd945:
case 0xd946:
case 0xd947:
case 0xdb40:
case 0xdb41:
case 0xdb42:
case 0xdb43:
case 0xdb44:
case 0xdb45:
case 0xdb46:
case 0xdb47:
case 0xdd40:
case 0xdd41:
case 0xdd42:
case 0xdd43:
case 0xdd44:
case 0xdd45:
case 0xdd46:
case 0xdd47:
case 0xdf40:
case 0xdf41:
case 0xdf42:
case 0xdf43:
case 0xdf44:
case 0xdf45:
case 0xdf46:
case 0xdf47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADDX(src, dst);
	}
	break;

case 0xc040:
case 0xc041:
case 0xc042:
case 0xc043:
case 0xc044:
case 0xc045:
case 0xc046:
case 0xc047:
case 0xc240:
case 0xc241:
case 0xc242:
case 0xc243:
case 0xc244:
case 0xc245:
case 0xc246:
case 0xc247:
case 0xc440:
case 0xc441:
case 0xc442:
case 0xc443:
case 0xc444:
case 0xc445:
case 0xc446:
case 0xc447:
case 0xc640:
case 0xc641:
case 0xc642:
case 0xc643:
case 0xc644:
case 0xc645:
case 0xc646:
case 0xc647:
case 0xc840:
case 0xc841:
case 0xc842:
case 0xc843:
case 0xc844:
case 0xc845:
case 0xc846:
case 0xc847:
case 0xca40:
case 0xca41:
case 0xca42:
case 0xca43:
case 0xca44:
case 0xca45:
case 0xca46:
case 0xca47:
case 0xcc40:
case 0xcc41:
case 0xcc42:
case 0xcc43:
case 0xcc44:
case 0xcc45:
case 0xcc46:
case 0xcc47:
case 0xce40:
case 0xce41:
case 0xce42:
case 0xce43:
case 0xce44:
case 0xce45:
case 0xce46:
case 0xce47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x4180:
case 0x4181:
case 0x4182:
case 0x4183:
case 0x4184:
case 0x4185:
case 0x4186:
case 0x4187:
case 0x4380:
case 0x4381:
case 0x4382:
case 0x4383:
case 0x4384:
case 0x4385:
case 0x4386:
case 0x4387:
case 0x4580:
case 0x4581:
case 0x4582:
case 0x4583:
case 0x4584:
case 0x4585:
case 0x4586:
case 0x4587:
case 0x4780:
case 0x4781:
case 0x4782:
case 0x4783:
case 0x4784:
case 0x4785:
case 0x4786:
case 0x4787:
case 0x4980:
case 0x4981:
case 0x4982:
case 0x4983:
case 0x4984:
case 0x4985:
case 0x4986:
case 0x4987:
case 0x4b80:
case 0x4b81:
case 0x4b82:
case 0x4b83:
case 0x4b84:
case 0x4b85:
case 0x4b86:
case 0x4b87:
case 0x4d80:
case 0x4d81:
case 0x4d82:
case 0x4d83:
case 0x4d84:
case 0x4d85:
case 0x4d86:
case 0x4d87:
case 0x4f80:
case 0x4f81:
case 0x4f82:
case 0x4f83:
case 0x4f84:
case 0x4f85:
case 0x4f86:
case 0x4f87:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb040:
case 0xb041:
case 0xb042:
case 0xb043:
case 0xb044:
case 0xb045:
case 0xb046:
case 0xb047:
case 0xb240:
case 0xb241:
case 0xb242:
case 0xb243:
case 0xb244:
case 0xb245:
case 0xb246:
case 0xb247:
case 0xb440:
case 0xb441:
case 0xb442:
case 0xb443:
case 0xb444:
case 0xb445:
case 0xb446:
case 0xb447:
case 0xb640:
case 0xb641:
case 0xb642:
case 0xb643:
case 0xb644:
case 0xb645:
case 0xb646:
case 0xb647:
case 0xb840:
case 0xb841:
case 0xb842:
case 0xb843:
case 0xb844:
case 0xb845:
case 0xb846:
case 0xb847:
case 0xba40:
case 0xba41:
case 0xba42:
case 0xba43:
case 0xba44:
case 0xba45:
case 0xba46:
case 0xba47:
case 0xbc40:
case 0xbc41:
case 0xbc42:
case 0xbc43:
case 0xbc44:
case 0xbc45:
case 0xbc46:
case 0xbc47:
case 0xbe40:
case 0xbe41:
case 0xbe42:
case 0xbe43:
case 0xbe44:
case 0xbe45:
case 0xbe46:
case 0xbe47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x3000:
case 0x3001:
case 0x3002:
case 0x3003:
case 0x3004:
case 0x3005:
case 0x3006:
case 0x3007:
case 0x3200:
case 0x3201:
case 0x3202:
case 0x3203:
case 0x3204:
case 0x3205:
case 0x3206:
case 0x3207:
case 0x3400:
case 0x3401:
case 0x3402:
case 0x3403:
case 0x3404:
case 0x3405:
case 0x3406:
case 0x3407:
case 0x3600:
case 0x3601:
case 0x3602:
case 0x3603:
case 0x3604:
case 0x3605:
case 0x3606:
case 0x3607:
case 0x3800:
case 0x3801:
case 0x3802:
case 0x3803:
case 0x3804:
case 0x3805:
case 0x3806:
case 0x3807:
case 0x3a00:
case 0x3a01:
case 0x3a02:
case 0x3a03:
case 0x3a04:
case 0x3a05:
case 0x3a06:
case 0x3a07:
case 0x3c00:
case 0x3c01:
case 0x3c02:
case 0x3c03:
case 0x3c04:
case 0x3c05:
case 0x3c06:
case 0x3c07:
case 0x3e00:
case 0x3e01:
case 0x3e02:
case 0x3e03:
case 0x3e04:
case 0x3e05:
case 0x3e06:
case 0x3e07:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8040:
case 0x8041:
case 0x8042:
case 0x8043:
case 0x8044:
case 0x8045:
case 0x8046:
case 0x8047:
case 0x8240:
case 0x8241:
case 0x8242:
case 0x8243:
case 0x8244:
case 0x8245:
case 0x8246:
case 0x8247:
case 0x8440:
case 0x8441:
case 0x8442:
case 0x8443:
case 0x8444:
case 0x8445:
case 0x8446:
case 0x8447:
case 0x8640:
case 0x8641:
case 0x8642:
case 0x8643:
case 0x8644:
case 0x8645:
case 0x8646:
case 0x8647:
case 0x8840:
case 0x8841:
case 0x8842:
case 0x8843:
case 0x8844:
case 0x8845:
case 0x8846:
case 0x8847:
case 0x8a40:
case 0x8a41:
case 0x8a42:
case 0x8a43:
case 0x8a44:
case 0x8a45:
case 0x8a46:
case 0x8a47:
case 0x8c40:
case 0x8c41:
case 0x8c42:
case 0x8c43:
case 0x8c44:
case 0x8c45:
case 0x8c46:
case 0x8c47:
case 0x8e40:
case 0x8e41:
case 0x8e42:
case 0x8e43:
case 0x8e44:
case 0x8e45:
case 0x8e46:
case 0x8e47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9040:
case 0x9041:
case 0x9042:
case 0x9043:
case 0x9044:
case 0x9045:
case 0x9046:
case 0x9047:
case 0x9240:
case 0x9241:
case 0x9242:
case 0x9243:
case 0x9244:
case 0x9245:
case 0x9246:
case 0x9247:
case 0x9440:
case 0x9441:
case 0x9442:
case 0x9443:
case 0x9444:
case 0x9445:
case 0x9446:
case 0x9447:
case 0x9640:
case 0x9641:
case 0x9642:
case 0x9643:
case 0x9644:
case 0x9645:
case 0x9646:
case 0x9647:
case 0x9840:
case 0x9841:
case 0x9842:
case 0x9843:
case 0x9844:
case 0x9845:
case 0x9846:
case 0x9847:
case 0x9a40:
case 0x9a41:
case 0x9a42:
case 0x9a43:
case 0x9a44:
case 0x9a45:
case 0x9a46:
case 0x9a47:
case 0x9c40:
case 0x9c41:
case 0x9c42:
case 0x9c43:
case 0x9c44:
case 0x9c45:
case 0x9c46:
case 0x9c47:
case 0x9e40:
case 0x9e41:
case 0x9e42:
case 0x9e43:
case 0x9e44:
case 0x9e45:
case 0x9e46:
case 0x9e47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x9140:
case 0x9141:
case 0x9142:
case 0x9143:
case 0x9144:
case 0x9145:
case 0x9146:
case 0x9147:
case 0x9340:
case 0x9341:
case 0x9342:
case 0x9343:
case 0x9344:
case 0x9345:
case 0x9346:
case 0x9347:
case 0x9540:
case 0x9541:
case 0x9542:
case 0x9543:
case 0x9544:
case 0x9545:
case 0x9546:
case 0x9547:
case 0x9740:
case 0x9741:
case 0x9742:
case 0x9743:
case 0x9744:
case 0x9745:
case 0x9746:
case 0x9747:
case 0x9940:
case 0x9941:
case 0x9942:
case 0x9943:
case 0x9944:
case 0x9945:
case 0x9946:
case 0x9947:
case 0x9b40:
case 0x9b41:
case 0x9b42:
case 0x9b43:
case 0x9b44:
case 0x9b45:
case 0x9b46:
case 0x9b47:
case 0x9d40:
case 0x9d41:
case 0x9d42:
case 0x9d43:
case 0x9d44:
case 0x9d45:
case 0x9d46:
case 0x9d47:
case 0x9f40:
case 0x9f41:
case 0x9f42:
case 0x9f43:
case 0x9f44:
case 0x9f45:
case 0x9f46:
case 0x9f47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUBX(src, dst);
	}
	break;

case 0xd0c0:
case 0xd0c1:
case 0xd0c2:
case 0xd0c3:
case 0xd0c4:
case 0xd0c5:
case 0xd0c6:
case 0xd0c7:
case 0xd2c0:
case 0xd2c1:
case 0xd2c2:
case 0xd2c3:
case 0xd2c4:
case 0xd2c5:
case 0xd2c6:
case 0xd2c7:
case 0xd4c0:
case 0xd4c1:
case 0xd4c2:
case 0xd4c3:
case 0xd4c4:
case 0xd4c5:
case 0xd4c6:
case 0xd4c7:
case 0xd6c0:
case 0xd6c1:
case 0xd6c2:
case 0xd6c3:
case 0xd6c4:
case 0xd6c5:
case 0xd6c6:
case 0xd6c7:
case 0xd8c0:
case 0xd8c1:
case 0xd8c2:
case 0xd8c3:
case 0xd8c4:
case 0xd8c5:
case 0xd8c6:
case 0xd8c7:
case 0xdac0:
case 0xdac1:
case 0xdac2:
case 0xdac3:
case 0xdac4:
case 0xdac5:
case 0xdac6:
case 0xdac7:
case 0xdcc0:
case 0xdcc1:
case 0xdcc2:
case 0xdcc3:
case 0xdcc4:
case 0xdcc5:
case 0xdcc6:
case 0xdcc7:
case 0xdec0:
case 0xdec1:
case 0xdec2:
case 0xdec3:
case 0xdec4:
case 0xdec5:
case 0xdec6:
case 0xdec7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0c0:
case 0xb0c1:
case 0xb0c2:
case 0xb0c3:
case 0xb0c4:
case 0xb0c5:
case 0xb0c6:
case 0xb0c7:
case 0xb2c0:
case 0xb2c1:
case 0xb2c2:
case 0xb2c3:
case 0xb2c4:
case 0xb2c5:
case 0xb2c6:
case 0xb2c7:
case 0xb4c0:
case 0xb4c1:
case 0xb4c2:
case 0xb4c3:
case 0xb4c4:
case 0xb4c5:
case 0xb4c6:
case 0xb4c7:
case 0xb6c0:
case 0xb6c1:
case 0xb6c2:
case 0xb6c3:
case 0xb6c4:
case 0xb6c5:
case 0xb6c6:
case 0xb6c7:
case 0xb8c0:
case 0xb8c1:
case 0xb8c2:
case 0xb8c3:
case 0xb8c4:
case 0xb8c5:
case 0xb8c6:
case 0xb8c7:
case 0xbac0:
case 0xbac1:
case 0xbac2:
case 0xbac3:
case 0xbac4:
case 0xbac5:
case 0xbac6:
case 0xbac7:
case 0xbcc0:
case 0xbcc1:
case 0xbcc2:
case 0xbcc3:
case 0xbcc4:
case 0xbcc5:
case 0xbcc6:
case 0xbcc7:
case 0xbec0:
case 0xbec1:
case 0xbec2:
case 0xbec3:
case 0xbec4:
case 0xbec5:
case 0xbec6:
case 0xbec7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90c0:
case 0x90c1:
case 0x90c2:
case 0x90c3:
case 0x90c4:
case 0x90c5:
case 0x90c6:
case 0x90c7:
case 0x92c0:
case 0x92c1:
case 0x92c2:
case 0x92c3:
case 0x92c4:
case 0x92c5:
case 0x92c6:
case 0x92c7:
case 0x94c0:
case 0x94c1:
case 0x94c2:
case 0x94c3:
case 0x94c4:
case 0x94c5:
case 0x94c6:
case 0x94c7:
case 0x96c0:
case 0x96c1:
case 0x96c2:
case 0x96c3:
case 0x96c4:
case 0x96c5:
case 0x96c6:
case 0x96c7:
case 0x98c0:
case 0x98c1:
case 0x98c2:
case 0x98c3:
case 0x98c4:
case 0x98c5:
case 0x98c6:
case 0x98c7:
case 0x9ac0:
case 0x9ac1:
case 0x9ac2:
case 0x9ac3:
case 0x9ac4:
case 0x9ac5:
case 0x9ac6:
case 0x9ac7:
case 0x9cc0:
case 0x9cc1:
case 0x9cc2:
case 0x9cc3:
case 0x9cc4:
case 0x9cc5:
case 0x9cc6:
case 0x9cc7:
case 0x9ec0:
case 0x9ec1:
case 0x9ec2:
case 0x9ec3:
case 0x9ec4:
case 0x9ec5:
case 0x9ec6:
case 0x9ec7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x3040:
case 0x3041:
case 0x3042:
case 0x3043:
case 0x3044:
case 0x3045:
case 0x3046:
case 0x3047:
case 0x3240:
case 0x3241:
case 0x3242:
case 0x3243:
case 0x3244:
case 0x3245:
case 0x3246:
case 0x3247:
case 0x3440:
case 0x3441:
case 0x3442:
case 0x3443:
case 0x3444:
case 0x3445:
case 0x3446:
case 0x3447:
case 0x3640:
case 0x3641:
case 0x3642:
case 0x3643:
case 0x3644:
case 0x3645:
case 0x3646:
case 0x3647:
case 0x3840:
case 0x3841:
case 0x3842:
case 0x3843:
case 0x3844:
case 0x3845:
case 0x3846:
case 0x3847:
case 0x3a40:
case 0x3a41:
case 0x3a42:
case 0x3a43:
case 0x3a44:
case 0x3a45:
case 0x3a46:
case 0x3a47:
case 0x3c40:
case 0x3c41:
case 0x3c42:
case 0x3c43:
case 0x3c44:
case 0x3c45:
case 0x3c46:
case 0x3c47:
case 0x3e40:
case 0x3e41:
case 0x3e42:
case 0x3e43:
case 0x3e44:
case 0x3e45:
case 0x3e46:
case 0x3e47:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44c0:
case 0x44c1:
case 0x44c2:
case 0x44c3:
case 0x44c4:
case 0x44c5:
case 0x44c6:
case 0x44c7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); MOVE_to_CCR(src);
	}
	break;

case 0xc1c0:
case 0xc1c1:
case 0xc1c2:
case 0xc1c3:
case 0xc1c4:
case 0xc1c5:
case 0xc1c6:
case 0xc1c7:
case 0xc3c0:
case 0xc3c1:
case 0xc3c2:
case 0xc3c3:
case 0xc3c4:
case 0xc3c5:
case 0xc3c6:
case 0xc3c7:
case 0xc5c0:
case 0xc5c1:
case 0xc5c2:
case 0xc5c3:
case 0xc5c4:
case 0xc5c5:
case 0xc5c6:
case 0xc5c7:
case 0xc7c0:
case 0xc7c1:
case 0xc7c2:
case 0xc7c3:
case 0xc7c4:
case 0xc7c5:
case 0xc7c6:
case 0xc7c7:
case 0xc9c0:
case 0xc9c1:
case 0xc9c2:
case 0xc9c3:
case 0xc9c4:
case 0xc9c5:
case 0xc9c6:
case 0xc9c7:
case 0xcbc0:
case 0xcbc1:
case 0xcbc2:
case 0xcbc3:
case 0xcbc4:
case 0xcbc5:
case 0xcbc6:
case 0xcbc7:
case 0xcdc0:
case 0xcdc1:
case 0xcdc2:
case 0xcdc3:
case 0xcdc4:
case 0xcdc5:
case 0xcdc6:
case 0xcdc7:
case 0xcfc0:
case 0xcfc1:
case 0xcfc2:
case 0xcfc3:
case 0xcfc4:
case 0xcfc5:
case 0xcfc6:
case 0xcfc7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0c0:
case 0xc0c1:
case 0xc0c2:
case 0xc0c3:
case 0xc0c4:
case 0xc0c5:
case 0xc0c6:
case 0xc0c7:
case 0xc2c0:
case 0xc2c1:
case 0xc2c2:
case 0xc2c3:
case 0xc2c4:
case 0xc2c5:
case 0xc2c6:
case 0xc2c7:
case 0xc4c0:
case 0xc4c1:
case 0xc4c2:
case 0xc4c3:
case 0xc4c4:
case 0xc4c5:
case 0xc4c6:
case 0xc4c7:
case 0xc6c0:
case 0xc6c1:
case 0xc6c2:
case 0xc6c3:
case 0xc6c4:
case 0xc6c5:
case 0xc6c6:
case 0xc6c7:
case 0xc8c0:
case 0xc8c1:
case 0xc8c2:
case 0xc8c3:
case 0xc8c4:
case 0xc8c5:
case 0xc8c6:
case 0xc8c7:
case 0xcac0:
case 0xcac1:
case 0xcac2:
case 0xcac3:
case 0xcac4:
case 0xcac5:
case 0xcac6:
case 0xcac7:
case 0xccc0:
case 0xccc1:
case 0xccc2:
case 0xccc3:
case 0xccc4:
case 0xccc5:
case 0xccc6:
case 0xccc7:
case 0xcec0:
case 0xcec1:
case 0xcec2:
case 0xcec3:
case 0xcec4:
case 0xcec5:
case 0xcec6:
case 0xcec7:
	{
	 HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); MULU(src, instr_b11_b9);
	}
	break;

case 0xe160:
case 0xe161:
case 0xe162:
case 0xe163:
case 0xe164:
case 0xe165:
case 0xe166:
case 0xe167:
case 0xe360:
case 0xe361:
case 0xe362:
case 0xe363:
case 0xe364:
case 0xe365:
case 0xe366:
case 0xe367:
case 0xe560:
case 0xe561:
case 0xe562:
case 0xe563:
case 0xe564:
case 0xe565:
case 0xe566:
case 0xe567:
case 0xe760:
case 0xe761:
case 0xe762:
case 0xe763:
case 0xe764:
case 0xe765:
case 0xe766:
case 0xe767:
case 0xe960:
case 0xe961:
case 0xe962:
case 0xe963:
case 0xe964:
case 0xe965:
case 0xe966:
case 0xe967:
case 0xeb60:
case 0xeb61:
case 0xeb62:
case 0xeb63:
case 0xeb64:
case 0xeb65:
case 0xeb66:
case 0xeb67:
case 0xed60:
case 0xed61:
case 0xed62:
case 0xed63:
case 0xed64:
case 0xed65:
case 0xed66:
case 0xed67:
case 0xef60:
case 0xef61:
case 0xef62:
case 0xef63:
case 0xef64:
case 0xef65:
case 0xef66:
case 0xef67:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ASL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe140:
case 0xe141:
case 0xe142:
case 0xe143:
case 0xe144:
case 0xe145:
case 0xe146:
case 0xe147:
case 0xe340:
case 0xe341:
case 0xe342:
case 0xe343:
case 0xe344:
case 0xe345:
case 0xe346:
case 0xe347:
case 0xe540:
case 0xe541:
case 0xe542:
case 0xe543:
case 0xe544:
case 0xe545:
case 0xe546:
case 0xe547:
case 0xe740:
case 0xe741:
case 0xe742:
case 0xe743:
case 0xe744:
case 0xe745:
case 0xe746:
case 0xe747:
case 0xe940:
case 0xe941:
case 0xe942:
case 0xe943:
case 0xe944:
case 0xe945:
case 0xe946:
case 0xe947:
case 0xeb40:
case 0xeb41:
case 0xeb42:
case 0xeb43:
case 0xeb44:
case 0xeb45:
case 0xeb46:
case 0xeb47:
case 0xed40:
case 0xed41:
case 0xed42:
case 0xed43:
case 0xed44:
case 0xed45:
case 0xed46:
case 0xed47:
case 0xef40:
case 0xef41:
case 0xef42:
case 0xef43:
case 0xef44:
case 0xef45:
case 0xef46:
case 0xef47:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ASL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe060:
case 0xe061:
case 0xe062:
case 0xe063:
case 0xe064:
case 0xe065:
case 0xe066:
case 0xe067:
case 0xe260:
case 0xe261:
case 0xe262:
case 0xe263:
case 0xe264:
case 0xe265:
case 0xe266:
case 0xe267:
case 0xe460:
case 0xe461:
case 0xe462:
case 0xe463:
case 0xe464:
case 0xe465:
case 0xe466:
case 0xe467:
case 0xe660:
case 0xe661:
case 0xe662:
case 0xe663:
case 0xe664:
case 0xe665:
case 0xe666:
case 0xe667:
case 0xe860:
case 0xe861:
case 0xe862:
case 0xe863:
case 0xe864:
case 0xe865:
case 0xe866:
case 0xe867:
case 0xea60:
case 0xea61:
case 0xea62:
case 0xea63:
case 0xea64:
case 0xea65:
case 0xea66:
case 0xea67:
case 0xec60:
case 0xec61:
case 0xec62:
case 0xec63:
case 0xec64:
case 0xec65:
case 0xec66:
case 0xec67:
case 0xee60:
case 0xee61:
case 0xee62:
case 0xee63:
case 0xee64:
case 0xee65:
case 0xee66:
case 0xee67:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ASR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe040:
case 0xe041:
case 0xe042:
case 0xe043:
case 0xe044:
case 0xe045:
case 0xe046:
case 0xe047:
case 0xe240:
case 0xe241:
case 0xe242:
case 0xe243:
case 0xe244:
case 0xe245:
case 0xe246:
case 0xe247:
case 0xe440:
case 0xe441:
case 0xe442:
case 0xe443:
case 0xe444:
case 0xe445:
case 0xe446:
case 0xe447:
case 0xe640:
case 0xe641:
case 0xe642:
case 0xe643:
case 0xe644:
case 0xe645:
case 0xe646:
case 0xe647:
case 0xe840:
case 0xe841:
case 0xe842:
case 0xe843:
case 0xe844:
case 0xe845:
case 0xe846:
case 0xe847:
case 0xea40:
case 0xea41:
case 0xea42:
case 0xea43:
case 0xea44:
case 0xea45:
case 0xea46:
case 0xea47:
case 0xec40:
case 0xec41:
case 0xec42:
case 0xec43:
case 0xec44:
case 0xec45:
case 0xec46:
case 0xec47:
case 0xee40:
case 0xee41:
case 0xee42:
case 0xee43:
case 0xee44:
case 0xee45:
case 0xee46:
case 0xee47:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ASR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe168:
case 0xe169:
case 0xe16a:
case 0xe16b:
case 0xe16c:
case 0xe16d:
case 0xe16e:
case 0xe16f:
case 0xe368:
case 0xe369:
case 0xe36a:
case 0xe36b:
case 0xe36c:
case 0xe36d:
case 0xe36e:
case 0xe36f:
case 0xe568:
case 0xe569:
case 0xe56a:
case 0xe56b:
case 0xe56c:
case 0xe56d:
case 0xe56e:
case 0xe56f:
case 0xe768:
case 0xe769:
case 0xe76a:
case 0xe76b:
case 0xe76c:
case 0xe76d:
case 0xe76e:
case 0xe76f:
case 0xe968:
case 0xe969:
case 0xe96a:
case 0xe96b:
case 0xe96c:
case 0xe96d:
case 0xe96e:
case 0xe96f:
case 0xeb68:
case 0xeb69:
case 0xeb6a:
case 0xeb6b:
case 0xeb6c:
case 0xeb6d:
case 0xeb6e:
case 0xeb6f:
case 0xed68:
case 0xed69:
case 0xed6a:
case 0xed6b:
case 0xed6c:
case 0xed6d:
case 0xed6e:
case 0xed6f:
case 0xef68:
case 0xef69:
case 0xef6a:
case 0xef6b:
case 0xef6c:
case 0xef6d:
case 0xef6e:
case 0xef6f:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); LSL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe148:
case 0xe149:
case 0xe14a:
case 0xe14b:
case 0xe14c:
case 0xe14d:
case 0xe14e:
case 0xe14f:
case 0xe348:
case 0xe349:
case 0xe34a:
case 0xe34b:
case 0xe34c:
case 0xe34d:
case 0xe34e:
case 0xe34f:
case 0xe548:
case 0xe549:
case 0xe54a:
case 0xe54b:
case 0xe54c:
case 0xe54d:
case 0xe54e:
case 0xe54f:
case 0xe748:
case 0xe749:
case 0xe74a:
case 0xe74b:
case 0xe74c:
case 0xe74d:
case 0xe74e:
case 0xe74f:
case 0xe948:
case 0xe949:
case 0xe94a:
case 0xe94b:
case 0xe94c:
case 0xe94d:
case 0xe94e:
case 0xe94f:
case 0xeb48:
case 0xeb49:
case 0xeb4a:
case 0xeb4b:
case 0xeb4c:
case 0xeb4d:
case 0xeb4e:
case 0xeb4f:
case 0xed48:
case 0xed49:
case 0xed4a:
case 0xed4b:
case 0xed4c:
case 0xed4d:
case 0xed4e:
case 0xed4f:
case 0xef48:
case 0xef49:
case 0xef4a:
case 0xef4b:
case 0xef4c:
case 0xef4d:
case 0xef4e:
case 0xef4f:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); LSL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe068:
case 0xe069:
case 0xe06a:
case 0xe06b:
case 0xe06c:
case 0xe06d:
case 0xe06e:
case 0xe06f:
case 0xe268:
case 0xe269:
case 0xe26a:
case 0xe26b:
case 0xe26c:
case 0xe26d:
case 0xe26e:
case 0xe26f:
case 0xe468:
case 0xe469:
case 0xe46a:
case 0xe46b:
case 0xe46c:
case 0xe46d:
case 0xe46e:
case 0xe46f:
case 0xe668:
case 0xe669:
case 0xe66a:
case 0xe66b:
case 0xe66c:
case 0xe66d:
case 0xe66e:
case 0xe66f:
case 0xe868:
case 0xe869:
case 0xe86a:
case 0xe86b:
case 0xe86c:
case 0xe86d:
case 0xe86e:
case 0xe86f:
case 0xea68:
case 0xea69:
case 0xea6a:
case 0xea6b:
case 0xea6c:
case 0xea6d:
case 0xea6e:
case 0xea6f:
case 0xec68:
case 0xec69:
case 0xec6a:
case 0xec6b:
case 0xec6c:
case 0xec6d:
case 0xec6e:
case 0xec6f:
case 0xee68:
case 0xee69:
case 0xee6a:
case 0xee6b:
case 0xee6c:
case 0xee6d:
case 0xee6e:
case 0xee6f:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); LSR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe048:
case 0xe049:
case 0xe04a:
case 0xe04b:
case 0xe04c:
case 0xe04d:
case 0xe04e:
case 0xe04f:
case 0xe248:
case 0xe249:
case 0xe24a:
case 0xe24b:
case 0xe24c:
case 0xe24d:
case 0xe24e:
case 0xe24f:
case 0xe448:
case 0xe449:
case 0xe44a:
case 0xe44b:
case 0xe44c:
case 0xe44d:
case 0xe44e:
case 0xe44f:
case 0xe648:
case 0xe649:
case 0xe64a:
case 0xe64b:
case 0xe64c:
case 0xe64d:
case 0xe64e:
case 0xe64f:
case 0xe848:
case 0xe849:
case 0xe84a:
case 0xe84b:
case 0xe84c:
case 0xe84d:
case 0xe84e:
case 0xe84f:
case 0xea48:
case 0xea49:
case 0xea4a:
case 0xea4b:
case 0xea4c:
case 0xea4d:
case 0xea4e:
case 0xea4f:
case 0xec48:
case 0xec49:
case 0xec4a:
case 0xec4b:
case 0xec4c:
case 0xec4d:
case 0xec4e:
case 0xec4f:
case 0xee48:
case 0xee49:
case 0xee4a:
case 0xee4b:
case 0xee4c:
case 0xee4d:
case 0xee4e:
case 0xee4f:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); LSR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe178:
case 0xe179:
case 0xe17a:
case 0xe17b:
case 0xe17c:
case 0xe17d:
case 0xe17e:
case 0xe17f:
case 0xe378:
case 0xe379:
case 0xe37a:
case 0xe37b:
case 0xe37c:
case 0xe37d:
case 0xe37e:
case 0xe37f:
case 0xe578:
case 0xe579:
case 0xe57a:
case 0xe57b:
case 0xe57c:
case 0xe57d:
case 0xe57e:
case 0xe57f:
case 0xe778:
case 0xe779:
case 0xe77a:
case 0xe77b:
case 0xe77c:
case 0xe77d:
case 0xe77e:
case 0xe77f:
case 0xe978:
case 0xe979:
case 0xe97a:
case 0xe97b:
case 0xe97c:
case 0xe97d:
case 0xe97e:
case 0xe97f:
case 0xeb78:
case 0xeb79:
case 0xeb7a:
case 0xeb7b:
case 0xeb7c:
case 0xeb7d:
case 0xeb7e:
case 0xeb7f:
case 0xed78:
case 0xed79:
case 0xed7a:
case 0xed7b:
case 0xed7c:
case 0xed7d:
case 0xed7e:
case 0xed7f:
case 0xef78:
case 0xef79:
case 0xef7a:
case 0xef7b:
case 0xef7c:
case 0xef7d:
case 0xef7e:
case 0xef7f:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ROL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe158:
case 0xe159:
case 0xe15a:
case 0xe15b:
case 0xe15c:
case 0xe15d:
case 0xe15e:
case 0xe15f:
case 0xe358:
case 0xe359:
case 0xe35a:
case 0xe35b:
case 0xe35c:
case 0xe35d:
case 0xe35e:
case 0xe35f:
case 0xe558:
case 0xe559:
case 0xe55a:
case 0xe55b:
case 0xe55c:
case 0xe55d:
case 0xe55e:
case 0xe55f:
case 0xe758:
case 0xe759:
case 0xe75a:
case 0xe75b:
case 0xe75c:
case 0xe75d:
case 0xe75e:
case 0xe75f:
case 0xe958:
case 0xe959:
case 0xe95a:
case 0xe95b:
case 0xe95c:
case 0xe95d:
case 0xe95e:
case 0xe95f:
case 0xeb58:
case 0xeb59:
case 0xeb5a:
case 0xeb5b:
case 0xeb5c:
case 0xeb5d:
case 0xeb5e:
case 0xeb5f:
case 0xed58:
case 0xed59:
case 0xed5a:
case 0xed5b:
case 0xed5c:
case 0xed5d:
case 0xed5e:
case 0xed5f:
case 0xef58:
case 0xef59:
case 0xef5a:
case 0xef5b:
case 0xef5c:
case 0xef5d:
case 0xef5e:
case 0xef5f:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ROL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe078:
case 0xe079:
case 0xe07a:
case 0xe07b:
case 0xe07c:
case 0xe07d:
case 0xe07e:
case 0xe07f:
case 0xe278:
case 0xe279:
case 0xe27a:
case 0xe27b:
case 0xe27c:
case 0xe27d:
case 0xe27e:
case 0xe27f:
case 0xe478:
case 0xe479:
case 0xe47a:
case 0xe47b:
case 0xe47c:
case 0xe47d:
case 0xe47e:
case 0xe47f:
case 0xe678:
case 0xe679:
case 0xe67a:
case 0xe67b:
case 0xe67c:
case 0xe67d:
case 0xe67e:
case 0xe67f:
case 0xe878:
case 0xe879:
case 0xe87a:
case 0xe87b:
case 0xe87c:
case 0xe87d:
case 0xe87e:
case 0xe87f:
case 0xea78:
case 0xea79:
case 0xea7a:
case 0xea7b:
case 0xea7c:
case 0xea7d:
case 0xea7e:
case 0xea7f:
case 0xec78:
case 0xec79:
case 0xec7a:
case 0xec7b:
case 0xec7c:
case 0xec7d:
case 0xec7e:
case 0xec7f:
case 0xee78:
case 0xee79:
case 0xee7a:
case 0xee7b:
case 0xee7c:
case 0xee7d:
case 0xee7e:
case 0xee7f:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ROR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe058:
case 0xe059:
case 0xe05a:
case 0xe05b:
case 0xe05c:
case 0xe05d:
case 0xe05e:
case 0xe05f:
case 0xe258:
case 0xe259:
case 0xe25a:
case 0xe25b:
case 0xe25c:
case 0xe25d:
case 0xe25e:
case 0xe25f:
case 0xe458:
case 0xe459:
case 0xe45a:
case 0xe45b:
case 0xe45c:
case 0xe45d:
case 0xe45e:
case 0xe45f:
case 0xe658:
case 0xe659:
case 0xe65a:
case 0xe65b:
case 0xe65c:
case 0xe65d:
case 0xe65e:
case 0xe65f:
case 0xe858:
case 0xe859:
case 0xe85a:
case 0xe85b:
case 0xe85c:
case 0xe85d:
case 0xe85e:
case 0xe85f:
case 0xea58:
case 0xea59:
case 0xea5a:
case 0xea5b:
case 0xea5c:
case 0xea5d:
case 0xea5e:
case 0xea5f:
case 0xec58:
case 0xec59:
case 0xec5a:
case 0xec5b:
case 0xec5c:
case 0xec5d:
case 0xec5e:
case 0xec5f:
case 0xee58:
case 0xee59:
case 0xee5a:
case 0xee5b:
case 0xee5c:
case 0xee5d:
case 0xee5e:
case 0xee5f:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ROR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe170:
case 0xe171:
case 0xe172:
case 0xe173:
case 0xe174:
case 0xe175:
case 0xe176:
case 0xe177:
case 0xe370:
case 0xe371:
case 0xe372:
case 0xe373:
case 0xe374:
case 0xe375:
case 0xe376:
case 0xe377:
case 0xe570:
case 0xe571:
case 0xe572:
case 0xe573:
case 0xe574:
case 0xe575:
case 0xe576:
case 0xe577:
case 0xe770:
case 0xe771:
case 0xe772:
case 0xe773:
case 0xe774:
case 0xe775:
case 0xe776:
case 0xe777:
case 0xe970:
case 0xe971:
case 0xe972:
case 0xe973:
case 0xe974:
case 0xe975:
case 0xe976:
case 0xe977:
case 0xeb70:
case 0xeb71:
case 0xeb72:
case 0xeb73:
case 0xeb74:
case 0xeb75:
case 0xeb76:
case 0xeb77:
case 0xed70:
case 0xed71:
case 0xed72:
case 0xed73:
case 0xed74:
case 0xed75:
case 0xed76:
case 0xed77:
case 0xef70:
case 0xef71:
case 0xef72:
case 0xef73:
case 0xef74:
case 0xef75:
case 0xef76:
case 0xef77:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ROXL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe150:
case 0xe151:
case 0xe152:
case 0xe153:
case 0xe154:
case 0xe155:
case 0xe156:
case 0xe157:
case 0xe350:
case 0xe351:
case 0xe352:
case 0xe353:
case 0xe354:
case 0xe355:
case 0xe356:
case 0xe357:
case 0xe550:
case 0xe551:
case 0xe552:
case 0xe553:
case 0xe554:
case 0xe555:
case 0xe556:
case 0xe557:
case 0xe750:
case 0xe751:
case 0xe752:
case 0xe753:
case 0xe754:
case 0xe755:
case 0xe756:
case 0xe757:
case 0xe950:
case 0xe951:
case 0xe952:
case 0xe953:
case 0xe954:
case 0xe955:
case 0xe956:
case 0xe957:
case 0xeb50:
case 0xeb51:
case 0xeb52:
case 0xeb53:
case 0xeb54:
case 0xeb55:
case 0xeb56:
case 0xeb57:
case 0xed50:
case 0xed51:
case 0xed52:
case 0xed53:
case 0xed54:
case 0xed55:
case 0xed56:
case 0xed57:
case 0xef50:
case 0xef51:
case 0xef52:
case 0xef53:
case 0xef54:
case 0xef55:
case 0xef56:
case 0xef57:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ROXL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe070:
case 0xe071:
case 0xe072:
case 0xe073:
case 0xe074:
case 0xe075:
case 0xe076:
case 0xe077:
case 0xe270:
case 0xe271:
case 0xe272:
case 0xe273:
case 0xe274:
case 0xe275:
case 0xe276:
case 0xe277:
case 0xe470:
case 0xe471:
case 0xe472:
case 0xe473:
case 0xe474:
case 0xe475:
case 0xe476:
case 0xe477:
case 0xe670:
case 0xe671:
case 0xe672:
case 0xe673:
case 0xe674:
case 0xe675:
case 0xe676:
case 0xe677:
case 0xe870:
case 0xe871:
case 0xe872:
case 0xe873:
case 0xe874:
case 0xe875:
case 0xe876:
case 0xe877:
case 0xea70:
case 0xea71:
case 0xea72:
case 0xea73:
case 0xea74:
case 0xea75:
case 0xea76:
case 0xea77:
case 0xec70:
case 0xec71:
case 0xec72:
case 0xec73:
case 0xec74:
case 0xec75:
case 0xec76:
case 0xec77:
case 0xee70:
case 0xee71:
case 0xee72:
case 0xee73:
case 0xee74:
case 0xee75:
case 0xee76:
case 0xee77:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ROXR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe050:
case 0xe051:
case 0xe052:
case 0xe053:
case 0xe054:
case 0xe055:
case 0xe056:
case 0xe057:
case 0xe250:
case 0xe251:
case 0xe252:
case 0xe253:
case 0xe254:
case 0xe255:
case 0xe256:
case 0xe257:
case 0xe450:
case 0xe451:
case 0xe452:
case 0xe453:
case 0xe454:
case 0xe455:
case 0xe456:
case 0xe457:
case 0xe650:
case 0xe651:
case 0xe652:
case 0xe653:
case 0xe654:
case 0xe655:
case 0xe656:
case 0xe657:
case 0xe850:
case 0xe851:
case 0xe852:
case 0xe853:
case 0xe854:
case 0xe855:
case 0xe856:
case 0xe857:
case 0xea50:
case 0xea51:
case 0xea52:
case 0xea53:
case 0xea54:
case 0xea55:
case 0xea56:
case 0xea57:
case 0xec50:
case 0xec51:
case 0xec52:
case 0xec53:
case 0xec54:
case 0xec55:
case 0xec56:
case 0xec57:
case 0xee50:
case 0xee51:
case 0xee52:
case 0xee53:
case 0xee54:
case 0xee55:
case 0xee56:
case 0xee57:
	{
	 HAM<uint16, DATA_REG_DIR> targ(this, instr_b2_b0); ROXR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0x81fc:
case 0x83fc:
case 0x85fc:
case 0x87fc:
case 0x89fc:
case 0x8bfc:
case 0x8dfc:
case 0x8ffc:
	{
	 HAM<uint16, IMMEDIATE> src(this); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80fc:
case 0x82fc:
case 0x84fc:
case 0x86fc:
case 0x88fc:
case 0x8afc:
case 0x8cfc:
case 0x8efc:
	{
	 HAM<uint16, IMMEDIATE> src(this); DIVU(src, instr_b11_b9);
	}
	break;

case 0x0679:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_LONG> dst(this); ADD(src, dst);
	}
	break;

case 0x0279:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_LONG> dst(this); AND(src, dst);
	}
	break;

case 0x0c79:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_LONG> dst(this); CMP(src, dst);
	}
	break;

case 0x0a79:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_LONG> dst(this); EOR(src, dst);
	}
	break;

case 0x33fc:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x0079:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_LONG> dst(this); OR(src, dst);
	}
	break;

case 0x0479:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_LONG> dst(this); SUB(src, dst);
	}
	break;

case 0x0678:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_SHORT> dst(this); ADD(src, dst);
	}
	break;

case 0x0278:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_SHORT> dst(this); AND(src, dst);
	}
	break;

case 0x0c78:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_SHORT> dst(this); CMP(src, dst);
	}
	break;

case 0x0a78:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_SHORT> dst(this); EOR(src, dst);
	}
	break;

case 0x31fc:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x0078:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_SHORT> dst(this); OR(src, dst);
	}
	break;

case 0x0478:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ABS_SHORT> dst(this); SUB(src, dst);
	}
	break;

case 0x30bc:
case 0x32bc:
case 0x34bc:
case 0x36bc:
case 0x38bc:
case 0x3abc:
case 0x3cbc:
case 0x3ebc:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0650:
case 0x0651:
case 0x0652:
case 0x0653:
case 0x0654:
case 0x0655:
case 0x0656:
case 0x0657:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0250:
case 0x0251:
case 0x0252:
case 0x0253:
case 0x0254:
case 0x0255:
case 0x0256:
case 0x0257:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c50:
case 0x0c51:
case 0x0c52:
case 0x0c53:
case 0x0c54:
case 0x0c55:
case 0x0c56:
case 0x0c57:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a50:
case 0x0a51:
case 0x0a52:
case 0x0a53:
case 0x0a54:
case 0x0a55:
case 0x0a56:
case 0x0a57:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0050:
case 0x0051:
case 0x0052:
case 0x0053:
case 0x0054:
case 0x0055:
case 0x0056:
case 0x0057:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0450:
case 0x0451:
case 0x0452:
case 0x0453:
case 0x0454:
case 0x0455:
case 0x0456:
case 0x0457:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x317c:
case 0x337c:
case 0x357c:
case 0x377c:
case 0x397c:
case 0x3b7c:
case 0x3d7c:
case 0x3f7c:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0668:
case 0x0669:
case 0x066a:
case 0x066b:
case 0x066c:
case 0x066d:
case 0x066e:
case 0x066f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0268:
case 0x0269:
case 0x026a:
case 0x026b:
case 0x026c:
case 0x026d:
case 0x026e:
case 0x026f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c68:
case 0x0c69:
case 0x0c6a:
case 0x0c6b:
case 0x0c6c:
case 0x0c6d:
case 0x0c6e:
case 0x0c6f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a68:
case 0x0a69:
case 0x0a6a:
case 0x0a6b:
case 0x0a6c:
case 0x0a6d:
case 0x0a6e:
case 0x0a6f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0068:
case 0x0069:
case 0x006a:
case 0x006b:
case 0x006c:
case 0x006d:
case 0x006e:
case 0x006f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0468:
case 0x0469:
case 0x046a:
case 0x046b:
case 0x046c:
case 0x046d:
case 0x046e:
case 0x046f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x31bc:
case 0x33bc:
case 0x35bc:
case 0x37bc:
case 0x39bc:
case 0x3bbc:
case 0x3dbc:
case 0x3fbc:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0670:
case 0x0671:
case 0x0672:
case 0x0673:
case 0x0674:
case 0x0675:
case 0x0676:
case 0x0677:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0270:
case 0x0271:
case 0x0272:
case 0x0273:
case 0x0274:
case 0x0275:
case 0x0276:
case 0x0277:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c70:
case 0x0c71:
case 0x0c72:
case 0x0c73:
case 0x0c74:
case 0x0c75:
case 0x0c76:
case 0x0c77:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a70:
case 0x0a71:
case 0x0a72:
case 0x0a73:
case 0x0a74:
case 0x0a75:
case 0x0a76:
case 0x0a77:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0070:
case 0x0071:
case 0x0072:
case 0x0073:
case 0x0074:
case 0x0075:
case 0x0076:
case 0x0077:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0470:
case 0x0471:
case 0x0472:
case 0x0473:
case 0x0474:
case 0x0475:
case 0x0476:
case 0x0477:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x30fc:
case 0x32fc:
case 0x34fc:
case 0x36fc:
case 0x38fc:
case 0x3afc:
case 0x3cfc:
case 0x3efc:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0658:
case 0x0659:
case 0x065a:
case 0x065b:
case 0x065c:
case 0x065d:
case 0x065e:
case 0x065f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0258:
case 0x0259:
case 0x025a:
case 0x025b:
case 0x025c:
case 0x025d:
case 0x025e:
case 0x025f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c58:
case 0x0c59:
case 0x0c5a:
case 0x0c5b:
case 0x0c5c:
case 0x0c5d:
case 0x0c5e:
case 0x0c5f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a58:
case 0x0a59:
case 0x0a5a:
case 0x0a5b:
case 0x0a5c:
case 0x0a5d:
case 0x0a5e:
case 0x0a5f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0058:
case 0x0059:
case 0x005a:
case 0x005b:
case 0x005c:
case 0x005d:
case 0x005e:
case 0x005f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0458:
case 0x0459:
case 0x045a:
case 0x045b:
case 0x045c:
case 0x045d:
case 0x045e:
case 0x045f:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x313c:
case 0x333c:
case 0x353c:
case 0x373c:
case 0x393c:
case 0x3b3c:
case 0x3d3c:
case 0x3f3c:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0660:
case 0x0661:
case 0x0662:
case 0x0663:
case 0x0664:
case 0x0665:
case 0x0666:
case 0x0667:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0260:
case 0x0261:
case 0x0262:
case 0x0263:
case 0x0264:
case 0x0265:
case 0x0266:
case 0x0267:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c60:
case 0x0c61:
case 0x0c62:
case 0x0c63:
case 0x0c64:
case 0x0c65:
case 0x0c66:
case 0x0c67:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a60:
case 0x0a61:
case 0x0a62:
case 0x0a63:
case 0x0a64:
case 0x0a65:
case 0x0a66:
case 0x0a67:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0060:
case 0x0061:
case 0x0062:
case 0x0063:
case 0x0064:
case 0x0065:
case 0x0066:
case 0x0067:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0460:
case 0x0461:
case 0x0462:
case 0x0463:
case 0x0464:
case 0x0465:
case 0x0466:
case 0x0467:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd07c:
case 0xd27c:
case 0xd47c:
case 0xd67c:
case 0xd87c:
case 0xda7c:
case 0xdc7c:
case 0xde7c:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc07c:
case 0xc27c:
case 0xc47c:
case 0xc67c:
case 0xc87c:
case 0xca7c:
case 0xcc7c:
case 0xce7c:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x41bc:
case 0x43bc:
case 0x45bc:
case 0x47bc:
case 0x49bc:
case 0x4bbc:
case 0x4dbc:
case 0x4fbc:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb07c:
case 0xb27c:
case 0xb47c:
case 0xb67c:
case 0xb87c:
case 0xba7c:
case 0xbc7c:
case 0xbe7c:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x303c:
case 0x323c:
case 0x343c:
case 0x363c:
case 0x383c:
case 0x3a3c:
case 0x3c3c:
case 0x3e3c:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x807c:
case 0x827c:
case 0x847c:
case 0x867c:
case 0x887c:
case 0x8a7c:
case 0x8c7c:
case 0x8e7c:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x907c:
case 0x927c:
case 0x947c:
case 0x967c:
case 0x987c:
case 0x9a7c:
case 0x9c7c:
case 0x9e7c:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0640:
case 0x0641:
case 0x0642:
case 0x0643:
case 0x0644:
case 0x0645:
case 0x0646:
case 0x0647:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0240:
case 0x0241:
case 0x0242:
case 0x0243:
case 0x0244:
case 0x0245:
case 0x0246:
case 0x0247:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c40:
case 0x0c41:
case 0x0c42:
case 0x0c43:
case 0x0c44:
case 0x0c45:
case 0x0c46:
case 0x0c47:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a40:
case 0x0a41:
case 0x0a42:
case 0x0a43:
case 0x0a44:
case 0x0a45:
case 0x0a46:
case 0x0a47:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0040:
case 0x0041:
case 0x0042:
case 0x0043:
case 0x0044:
case 0x0045:
case 0x0046:
case 0x0047:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0440:
case 0x0441:
case 0x0442:
case 0x0443:
case 0x0444:
case 0x0445:
case 0x0446:
case 0x0447:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd0fc:
case 0xd2fc:
case 0xd4fc:
case 0xd6fc:
case 0xd8fc:
case 0xdafc:
case 0xdcfc:
case 0xdefc:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0fc:
case 0xb2fc:
case 0xb4fc:
case 0xb6fc:
case 0xb8fc:
case 0xbafc:
case 0xbcfc:
case 0xbefc:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90fc:
case 0x92fc:
case 0x94fc:
case 0x96fc:
case 0x98fc:
case 0x9afc:
case 0x9cfc:
case 0x9efc:
	{
	 HAM<uint16, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x307c:
case 0x327c:
case 0x347c:
case 0x367c:
case 0x387c:
case 0x3a7c:
case 0x3c7c:
case 0x3e7c:
	{
	 HAM<uint16, IMMEDIATE> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44fc:
	{
	 HAM<uint16, IMMEDIATE> src(this); MOVE_to_CCR(src);
	}
	break;

case 0xc1fc:
case 0xc3fc:
case 0xc5fc:
case 0xc7fc:
case 0xc9fc:
case 0xcbfc:
case 0xcdfc:
case 0xcffc:
	{
	 HAM<uint16, IMMEDIATE> src(this); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0fc:
case 0xc2fc:
case 0xc4fc:
case 0xc6fc:
case 0xc8fc:
case 0xcafc:
case 0xccfc:
case 0xcefc:
	{
	 HAM<uint16, IMMEDIATE> src(this); MULU(src, instr_b11_b9);
	}
	break;

case 0x5079:
case 0x5279:
case 0x5479:
case 0x5679:
case 0x5879:
case 0x5a79:
case 0x5c79:
case 0x5e79:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ABS_LONG> dst(this); ADD(src, dst);
	}
	break;

case 0x5179:
case 0x5379:
case 0x5579:
case 0x5779:
case 0x5979:
case 0x5b79:
case 0x5d79:
case 0x5f79:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ABS_LONG> dst(this); SUB(src, dst);
	}
	break;

case 0x5078:
case 0x5278:
case 0x5478:
case 0x5678:
case 0x5878:
case 0x5a78:
case 0x5c78:
case 0x5e78:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ABS_SHORT> dst(this); ADD(src, dst);
	}
	break;

case 0x5178:
case 0x5378:
case 0x5578:
case 0x5778:
case 0x5978:
case 0x5b78:
case 0x5d78:
case 0x5f78:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ABS_SHORT> dst(this); SUB(src, dst);
	}
	break;

case 0x5050:
case 0x5051:
case 0x5052:
case 0x5053:
case 0x5054:
case 0x5055:
case 0x5056:
case 0x5057:
case 0x5250:
case 0x5251:
case 0x5252:
case 0x5253:
case 0x5254:
case 0x5255:
case 0x5256:
case 0x5257:
case 0x5450:
case 0x5451:
case 0x5452:
case 0x5453:
case 0x5454:
case 0x5455:
case 0x5456:
case 0x5457:
case 0x5650:
case 0x5651:
case 0x5652:
case 0x5653:
case 0x5654:
case 0x5655:
case 0x5656:
case 0x5657:
case 0x5850:
case 0x5851:
case 0x5852:
case 0x5853:
case 0x5854:
case 0x5855:
case 0x5856:
case 0x5857:
case 0x5a50:
case 0x5a51:
case 0x5a52:
case 0x5a53:
case 0x5a54:
case 0x5a55:
case 0x5a56:
case 0x5a57:
case 0x5c50:
case 0x5c51:
case 0x5c52:
case 0x5c53:
case 0x5c54:
case 0x5c55:
case 0x5c56:
case 0x5c57:
case 0x5e50:
case 0x5e51:
case 0x5e52:
case 0x5e53:
case 0x5e54:
case 0x5e55:
case 0x5e56:
case 0x5e57:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5150:
case 0x5151:
case 0x5152:
case 0x5153:
case 0x5154:
case 0x5155:
case 0x5156:
case 0x5157:
case 0x5350:
case 0x5351:
case 0x5352:
case 0x5353:
case 0x5354:
case 0x5355:
case 0x5356:
case 0x5357:
case 0x5550:
case 0x5551:
case 0x5552:
case 0x5553:
case 0x5554:
case 0x5555:
case 0x5556:
case 0x5557:
case 0x5750:
case 0x5751:
case 0x5752:
case 0x5753:
case 0x5754:
case 0x5755:
case 0x5756:
case 0x5757:
case 0x5950:
case 0x5951:
case 0x5952:
case 0x5953:
case 0x5954:
case 0x5955:
case 0x5956:
case 0x5957:
case 0x5b50:
case 0x5b51:
case 0x5b52:
case 0x5b53:
case 0x5b54:
case 0x5b55:
case 0x5b56:
case 0x5b57:
case 0x5d50:
case 0x5d51:
case 0x5d52:
case 0x5d53:
case 0x5d54:
case 0x5d55:
case 0x5d56:
case 0x5d57:
case 0x5f50:
case 0x5f51:
case 0x5f52:
case 0x5f53:
case 0x5f54:
case 0x5f55:
case 0x5f56:
case 0x5f57:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5068:
case 0x5069:
case 0x506a:
case 0x506b:
case 0x506c:
case 0x506d:
case 0x506e:
case 0x506f:
case 0x5268:
case 0x5269:
case 0x526a:
case 0x526b:
case 0x526c:
case 0x526d:
case 0x526e:
case 0x526f:
case 0x5468:
case 0x5469:
case 0x546a:
case 0x546b:
case 0x546c:
case 0x546d:
case 0x546e:
case 0x546f:
case 0x5668:
case 0x5669:
case 0x566a:
case 0x566b:
case 0x566c:
case 0x566d:
case 0x566e:
case 0x566f:
case 0x5868:
case 0x5869:
case 0x586a:
case 0x586b:
case 0x586c:
case 0x586d:
case 0x586e:
case 0x586f:
case 0x5a68:
case 0x5a69:
case 0x5a6a:
case 0x5a6b:
case 0x5a6c:
case 0x5a6d:
case 0x5a6e:
case 0x5a6f:
case 0x5c68:
case 0x5c69:
case 0x5c6a:
case 0x5c6b:
case 0x5c6c:
case 0x5c6d:
case 0x5c6e:
case 0x5c6f:
case 0x5e68:
case 0x5e69:
case 0x5e6a:
case 0x5e6b:
case 0x5e6c:
case 0x5e6d:
case 0x5e6e:
case 0x5e6f:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5168:
case 0x5169:
case 0x516a:
case 0x516b:
case 0x516c:
case 0x516d:
case 0x516e:
case 0x516f:
case 0x5368:
case 0x5369:
case 0x536a:
case 0x536b:
case 0x536c:
case 0x536d:
case 0x536e:
case 0x536f:
case 0x5568:
case 0x5569:
case 0x556a:
case 0x556b:
case 0x556c:
case 0x556d:
case 0x556e:
case 0x556f:
case 0x5768:
case 0x5769:
case 0x576a:
case 0x576b:
case 0x576c:
case 0x576d:
case 0x576e:
case 0x576f:
case 0x5968:
case 0x5969:
case 0x596a:
case 0x596b:
case 0x596c:
case 0x596d:
case 0x596e:
case 0x596f:
case 0x5b68:
case 0x5b69:
case 0x5b6a:
case 0x5b6b:
case 0x5b6c:
case 0x5b6d:
case 0x5b6e:
case 0x5b6f:
case 0x5d68:
case 0x5d69:
case 0x5d6a:
case 0x5d6b:
case 0x5d6c:
case 0x5d6d:
case 0x5d6e:
case 0x5d6f:
case 0x5f68:
case 0x5f69:
case 0x5f6a:
case 0x5f6b:
case 0x5f6c:
case 0x5f6d:
case 0x5f6e:
case 0x5f6f:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5070:
case 0x5071:
case 0x5072:
case 0x5073:
case 0x5074:
case 0x5075:
case 0x5076:
case 0x5077:
case 0x5270:
case 0x5271:
case 0x5272:
case 0x5273:
case 0x5274:
case 0x5275:
case 0x5276:
case 0x5277:
case 0x5470:
case 0x5471:
case 0x5472:
case 0x5473:
case 0x5474:
case 0x5475:
case 0x5476:
case 0x5477:
case 0x5670:
case 0x5671:
case 0x5672:
case 0x5673:
case 0x5674:
case 0x5675:
case 0x5676:
case 0x5677:
case 0x5870:
case 0x5871:
case 0x5872:
case 0x5873:
case 0x5874:
case 0x5875:
case 0x5876:
case 0x5877:
case 0x5a70:
case 0x5a71:
case 0x5a72:
case 0x5a73:
case 0x5a74:
case 0x5a75:
case 0x5a76:
case 0x5a77:
case 0x5c70:
case 0x5c71:
case 0x5c72:
case 0x5c73:
case 0x5c74:
case 0x5c75:
case 0x5c76:
case 0x5c77:
case 0x5e70:
case 0x5e71:
case 0x5e72:
case 0x5e73:
case 0x5e74:
case 0x5e75:
case 0x5e76:
case 0x5e77:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5170:
case 0x5171:
case 0x5172:
case 0x5173:
case 0x5174:
case 0x5175:
case 0x5176:
case 0x5177:
case 0x5370:
case 0x5371:
case 0x5372:
case 0x5373:
case 0x5374:
case 0x5375:
case 0x5376:
case 0x5377:
case 0x5570:
case 0x5571:
case 0x5572:
case 0x5573:
case 0x5574:
case 0x5575:
case 0x5576:
case 0x5577:
case 0x5770:
case 0x5771:
case 0x5772:
case 0x5773:
case 0x5774:
case 0x5775:
case 0x5776:
case 0x5777:
case 0x5970:
case 0x5971:
case 0x5972:
case 0x5973:
case 0x5974:
case 0x5975:
case 0x5976:
case 0x5977:
case 0x5b70:
case 0x5b71:
case 0x5b72:
case 0x5b73:
case 0x5b74:
case 0x5b75:
case 0x5b76:
case 0x5b77:
case 0x5d70:
case 0x5d71:
case 0x5d72:
case 0x5d73:
case 0x5d74:
case 0x5d75:
case 0x5d76:
case 0x5d77:
case 0x5f70:
case 0x5f71:
case 0x5f72:
case 0x5f73:
case 0x5f74:
case 0x5f75:
case 0x5f76:
case 0x5f77:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5058:
case 0x5059:
case 0x505a:
case 0x505b:
case 0x505c:
case 0x505d:
case 0x505e:
case 0x505f:
case 0x5258:
case 0x5259:
case 0x525a:
case 0x525b:
case 0x525c:
case 0x525d:
case 0x525e:
case 0x525f:
case 0x5458:
case 0x5459:
case 0x545a:
case 0x545b:
case 0x545c:
case 0x545d:
case 0x545e:
case 0x545f:
case 0x5658:
case 0x5659:
case 0x565a:
case 0x565b:
case 0x565c:
case 0x565d:
case 0x565e:
case 0x565f:
case 0x5858:
case 0x5859:
case 0x585a:
case 0x585b:
case 0x585c:
case 0x585d:
case 0x585e:
case 0x585f:
case 0x5a58:
case 0x5a59:
case 0x5a5a:
case 0x5a5b:
case 0x5a5c:
case 0x5a5d:
case 0x5a5e:
case 0x5a5f:
case 0x5c58:
case 0x5c59:
case 0x5c5a:
case 0x5c5b:
case 0x5c5c:
case 0x5c5d:
case 0x5c5e:
case 0x5c5f:
case 0x5e58:
case 0x5e59:
case 0x5e5a:
case 0x5e5b:
case 0x5e5c:
case 0x5e5d:
case 0x5e5e:
case 0x5e5f:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5158:
case 0x5159:
case 0x515a:
case 0x515b:
case 0x515c:
case 0x515d:
case 0x515e:
case 0x515f:
case 0x5358:
case 0x5359:
case 0x535a:
case 0x535b:
case 0x535c:
case 0x535d:
case 0x535e:
case 0x535f:
case 0x5558:
case 0x5559:
case 0x555a:
case 0x555b:
case 0x555c:
case 0x555d:
case 0x555e:
case 0x555f:
case 0x5758:
case 0x5759:
case 0x575a:
case 0x575b:
case 0x575c:
case 0x575d:
case 0x575e:
case 0x575f:
case 0x5958:
case 0x5959:
case 0x595a:
case 0x595b:
case 0x595c:
case 0x595d:
case 0x595e:
case 0x595f:
case 0x5b58:
case 0x5b59:
case 0x5b5a:
case 0x5b5b:
case 0x5b5c:
case 0x5b5d:
case 0x5b5e:
case 0x5b5f:
case 0x5d58:
case 0x5d59:
case 0x5d5a:
case 0x5d5b:
case 0x5d5c:
case 0x5d5d:
case 0x5d5e:
case 0x5d5f:
case 0x5f58:
case 0x5f59:
case 0x5f5a:
case 0x5f5b:
case 0x5f5c:
case 0x5f5d:
case 0x5f5e:
case 0x5f5f:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5060:
case 0x5061:
case 0x5062:
case 0x5063:
case 0x5064:
case 0x5065:
case 0x5066:
case 0x5067:
case 0x5260:
case 0x5261:
case 0x5262:
case 0x5263:
case 0x5264:
case 0x5265:
case 0x5266:
case 0x5267:
case 0x5460:
case 0x5461:
case 0x5462:
case 0x5463:
case 0x5464:
case 0x5465:
case 0x5466:
case 0x5467:
case 0x5660:
case 0x5661:
case 0x5662:
case 0x5663:
case 0x5664:
case 0x5665:
case 0x5666:
case 0x5667:
case 0x5860:
case 0x5861:
case 0x5862:
case 0x5863:
case 0x5864:
case 0x5865:
case 0x5866:
case 0x5867:
case 0x5a60:
case 0x5a61:
case 0x5a62:
case 0x5a63:
case 0x5a64:
case 0x5a65:
case 0x5a66:
case 0x5a67:
case 0x5c60:
case 0x5c61:
case 0x5c62:
case 0x5c63:
case 0x5c64:
case 0x5c65:
case 0x5c66:
case 0x5c67:
case 0x5e60:
case 0x5e61:
case 0x5e62:
case 0x5e63:
case 0x5e64:
case 0x5e65:
case 0x5e66:
case 0x5e67:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5160:
case 0x5161:
case 0x5162:
case 0x5163:
case 0x5164:
case 0x5165:
case 0x5166:
case 0x5167:
case 0x5360:
case 0x5361:
case 0x5362:
case 0x5363:
case 0x5364:
case 0x5365:
case 0x5366:
case 0x5367:
case 0x5560:
case 0x5561:
case 0x5562:
case 0x5563:
case 0x5564:
case 0x5565:
case 0x5566:
case 0x5567:
case 0x5760:
case 0x5761:
case 0x5762:
case 0x5763:
case 0x5764:
case 0x5765:
case 0x5766:
case 0x5767:
case 0x5960:
case 0x5961:
case 0x5962:
case 0x5963:
case 0x5964:
case 0x5965:
case 0x5966:
case 0x5967:
case 0x5b60:
case 0x5b61:
case 0x5b62:
case 0x5b63:
case 0x5b64:
case 0x5b65:
case 0x5b66:
case 0x5b67:
case 0x5d60:
case 0x5d61:
case 0x5d62:
case 0x5d63:
case 0x5d64:
case 0x5d65:
case 0x5d66:
case 0x5d67:
case 0x5f60:
case 0x5f61:
case 0x5f62:
case 0x5f63:
case 0x5f64:
case 0x5f65:
case 0x5f66:
case 0x5f67:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5040:
case 0x5041:
case 0x5042:
case 0x5043:
case 0x5044:
case 0x5045:
case 0x5046:
case 0x5047:
case 0x5240:
case 0x5241:
case 0x5242:
case 0x5243:
case 0x5244:
case 0x5245:
case 0x5246:
case 0x5247:
case 0x5440:
case 0x5441:
case 0x5442:
case 0x5443:
case 0x5444:
case 0x5445:
case 0x5446:
case 0x5447:
case 0x5640:
case 0x5641:
case 0x5642:
case 0x5643:
case 0x5644:
case 0x5645:
case 0x5646:
case 0x5647:
case 0x5840:
case 0x5841:
case 0x5842:
case 0x5843:
case 0x5844:
case 0x5845:
case 0x5846:
case 0x5847:
case 0x5a40:
case 0x5a41:
case 0x5a42:
case 0x5a43:
case 0x5a44:
case 0x5a45:
case 0x5a46:
case 0x5a47:
case 0x5c40:
case 0x5c41:
case 0x5c42:
case 0x5c43:
case 0x5c44:
case 0x5c45:
case 0x5c46:
case 0x5c47:
case 0x5e40:
case 0x5e41:
case 0x5e42:
case 0x5e43:
case 0x5e44:
case 0x5e45:
case 0x5e46:
case 0x5e47:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5140:
case 0x5141:
case 0x5142:
case 0x5143:
case 0x5144:
case 0x5145:
case 0x5146:
case 0x5147:
case 0x5340:
case 0x5341:
case 0x5342:
case 0x5343:
case 0x5344:
case 0x5345:
case 0x5346:
case 0x5347:
case 0x5540:
case 0x5541:
case 0x5542:
case 0x5543:
case 0x5544:
case 0x5545:
case 0x5546:
case 0x5547:
case 0x5740:
case 0x5741:
case 0x5742:
case 0x5743:
case 0x5744:
case 0x5745:
case 0x5746:
case 0x5747:
case 0x5940:
case 0x5941:
case 0x5942:
case 0x5943:
case 0x5944:
case 0x5945:
case 0x5946:
case 0x5947:
case 0x5b40:
case 0x5b41:
case 0x5b42:
case 0x5b43:
case 0x5b44:
case 0x5b45:
case 0x5b46:
case 0x5b47:
case 0x5d40:
case 0x5d41:
case 0x5d42:
case 0x5d43:
case 0x5d44:
case 0x5d45:
case 0x5d46:
case 0x5d47:
case 0x5f40:
case 0x5f41:
case 0x5f42:
case 0x5f43:
case 0x5f44:
case 0x5f45:
case 0x5f46:
case 0x5f47:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5048:
case 0x5049:
case 0x504a:
case 0x504b:
case 0x504c:
case 0x504d:
case 0x504e:
case 0x504f:
case 0x5248:
case 0x5249:
case 0x524a:
case 0x524b:
case 0x524c:
case 0x524d:
case 0x524e:
case 0x524f:
case 0x5448:
case 0x5449:
case 0x544a:
case 0x544b:
case 0x544c:
case 0x544d:
case 0x544e:
case 0x544f:
case 0x5648:
case 0x5649:
case 0x564a:
case 0x564b:
case 0x564c:
case 0x564d:
case 0x564e:
case 0x564f:
case 0x5848:
case 0x5849:
case 0x584a:
case 0x584b:
case 0x584c:
case 0x584d:
case 0x584e:
case 0x584f:
case 0x5a48:
case 0x5a49:
case 0x5a4a:
case 0x5a4b:
case 0x5a4c:
case 0x5a4d:
case 0x5a4e:
case 0x5a4f:
case 0x5c48:
case 0x5c49:
case 0x5c4a:
case 0x5c4b:
case 0x5c4c:
case 0x5c4d:
case 0x5c4e:
case 0x5c4f:
case 0x5e48:
case 0x5e49:
case 0x5e4a:
case 0x5e4b:
case 0x5e4c:
case 0x5e4d:
case 0x5e4e:
case 0x5e4f:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5148:
case 0x5149:
case 0x514a:
case 0x514b:
case 0x514c:
case 0x514d:
case 0x514e:
case 0x514f:
case 0x5348:
case 0x5349:
case 0x534a:
case 0x534b:
case 0x534c:
case 0x534d:
case 0x534e:
case 0x534f:
case 0x5548:
case 0x5549:
case 0x554a:
case 0x554b:
case 0x554c:
case 0x554d:
case 0x554e:
case 0x554f:
case 0x5748:
case 0x5749:
case 0x574a:
case 0x574b:
case 0x574c:
case 0x574d:
case 0x574e:
case 0x574f:
case 0x5948:
case 0x5949:
case 0x594a:
case 0x594b:
case 0x594c:
case 0x594d:
case 0x594e:
case 0x594f:
case 0x5b48:
case 0x5b49:
case 0x5b4a:
case 0x5b4b:
case 0x5b4c:
case 0x5b4d:
case 0x5b4e:
case 0x5b4f:
case 0x5d48:
case 0x5d49:
case 0x5d4a:
case 0x5d4b:
case 0x5d4c:
case 0x5d4d:
case 0x5d4e:
case 0x5d4f:
case 0x5f48:
case 0x5f49:
case 0x5f4a:
case 0x5f4b:
case 0x5f4c:
case 0x5f4d:
case 0x5f4e:
case 0x5f4f:
	{
	 HAM<uint16, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x81fa:
case 0x83fa:
case 0x85fa:
case 0x87fa:
case 0x89fa:
case 0x8bfa:
case 0x8dfa:
case 0x8ffa:
	{
	 HAM<uint16, PC_DISP> src(this); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80fa:
case 0x82fa:
case 0x84fa:
case 0x86fa:
case 0x88fa:
case 0x8afa:
case 0x8cfa:
case 0x8efa:
	{
	 HAM<uint16, PC_DISP> src(this); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33fa:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31fa:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x30ba:
case 0x32ba:
case 0x34ba:
case 0x36ba:
case 0x38ba:
case 0x3aba:
case 0x3cba:
case 0x3eba:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x317a:
case 0x337a:
case 0x357a:
case 0x377a:
case 0x397a:
case 0x3b7a:
case 0x3d7a:
case 0x3f7a:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x31ba:
case 0x33ba:
case 0x35ba:
case 0x37ba:
case 0x39ba:
case 0x3bba:
case 0x3dba:
case 0x3fba:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30fa:
case 0x32fa:
case 0x34fa:
case 0x36fa:
case 0x38fa:
case 0x3afa:
case 0x3cfa:
case 0x3efa:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x313a:
case 0x333a:
case 0x353a:
case 0x373a:
case 0x393a:
case 0x3b3a:
case 0x3d3a:
case 0x3f3a:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd07a:
case 0xd27a:
case 0xd47a:
case 0xd67a:
case 0xd87a:
case 0xda7a:
case 0xdc7a:
case 0xde7a:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc07a:
case 0xc27a:
case 0xc47a:
case 0xc67a:
case 0xc87a:
case 0xca7a:
case 0xcc7a:
case 0xce7a:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x41ba:
case 0x43ba:
case 0x45ba:
case 0x47ba:
case 0x49ba:
case 0x4bba:
case 0x4dba:
case 0x4fba:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb07a:
case 0xb27a:
case 0xb47a:
case 0xb67a:
case 0xb87a:
case 0xba7a:
case 0xbc7a:
case 0xbe7a:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x303a:
case 0x323a:
case 0x343a:
case 0x363a:
case 0x383a:
case 0x3a3a:
case 0x3c3a:
case 0x3e3a:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x807a:
case 0x827a:
case 0x847a:
case 0x867a:
case 0x887a:
case 0x8a7a:
case 0x8c7a:
case 0x8e7a:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x907a:
case 0x927a:
case 0x947a:
case 0x967a:
case 0x987a:
case 0x9a7a:
case 0x9c7a:
case 0x9e7a:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0fa:
case 0xd2fa:
case 0xd4fa:
case 0xd6fa:
case 0xd8fa:
case 0xdafa:
case 0xdcfa:
case 0xdefa:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0fa:
case 0xb2fa:
case 0xb4fa:
case 0xb6fa:
case 0xb8fa:
case 0xbafa:
case 0xbcfa:
case 0xbefa:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90fa:
case 0x92fa:
case 0x94fa:
case 0x96fa:
case 0x98fa:
case 0x9afa:
case 0x9cfa:
case 0x9efa:
	{
	 HAM<uint16, PC_DISP> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x307a:
case 0x327a:
case 0x347a:
case 0x367a:
case 0x387a:
case 0x3a7a:
case 0x3c7a:
case 0x3e7a:
	{
	 HAM<uint16, PC_DISP> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44fa:
	{
	 HAM<uint16, PC_DISP> src(this); MOVE_to_CCR(src);
	}
	break;

case 0xc1fa:
case 0xc3fa:
case 0xc5fa:
case 0xc7fa:
case 0xc9fa:
case 0xcbfa:
case 0xcdfa:
case 0xcffa:
	{
	 HAM<uint16, PC_DISP> src(this); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0fa:
case 0xc2fa:
case 0xc4fa:
case 0xc6fa:
case 0xc8fa:
case 0xcafa:
case 0xccfa:
case 0xcefa:
	{
	 HAM<uint16, PC_DISP> src(this); MULU(src, instr_b11_b9);
	}
	break;

case 0x81fb:
case 0x83fb:
case 0x85fb:
case 0x87fb:
case 0x89fb:
case 0x8bfb:
case 0x8dfb:
case 0x8ffb:
	{
	 HAM<uint16, PC_INDEX> src(this); DIVS(src, instr_b11_b9);
	}
	break;

case 0x80fb:
case 0x82fb:
case 0x84fb:
case 0x86fb:
case 0x88fb:
case 0x8afb:
case 0x8cfb:
case 0x8efb:
	{
	 HAM<uint16, PC_INDEX> src(this); DIVU(src, instr_b11_b9);
	}
	break;

case 0x33fb:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x31fb:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x30bb:
case 0x32bb:
case 0x34bb:
case 0x36bb:
case 0x38bb:
case 0x3abb:
case 0x3cbb:
case 0x3ebb:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x317b:
case 0x337b:
case 0x357b:
case 0x377b:
case 0x397b:
case 0x3b7b:
case 0x3d7b:
case 0x3f7b:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x31bb:
case 0x33bb:
case 0x35bb:
case 0x37bb:
case 0x39bb:
case 0x3bbb:
case 0x3dbb:
case 0x3fbb:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x30fb:
case 0x32fb:
case 0x34fb:
case 0x36fb:
case 0x38fb:
case 0x3afb:
case 0x3cfb:
case 0x3efb:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x313b:
case 0x333b:
case 0x353b:
case 0x373b:
case 0x393b:
case 0x3b3b:
case 0x3d3b:
case 0x3f3b:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd07b:
case 0xd27b:
case 0xd47b:
case 0xd67b:
case 0xd87b:
case 0xda7b:
case 0xdc7b:
case 0xde7b:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc07b:
case 0xc27b:
case 0xc47b:
case 0xc67b:
case 0xc87b:
case 0xca7b:
case 0xcc7b:
case 0xce7b:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0x41bb:
case 0x43bb:
case 0x45bb:
case 0x47bb:
case 0x49bb:
case 0x4bbb:
case 0x4dbb:
case 0x4fbb:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CHK(src, dst);
	}
	break;

case 0xb07b:
case 0xb27b:
case 0xb47b:
case 0xb67b:
case 0xb87b:
case 0xba7b:
case 0xbc7b:
case 0xbe7b:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x303b:
case 0x323b:
case 0x343b:
case 0x363b:
case 0x383b:
case 0x3a3b:
case 0x3c3b:
case 0x3e3b:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x807b:
case 0x827b:
case 0x847b:
case 0x867b:
case 0x887b:
case 0x8a7b:
case 0x8c7b:
case 0x8e7b:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x907b:
case 0x927b:
case 0x947b:
case 0x967b:
case 0x987b:
case 0x9a7b:
case 0x9c7b:
case 0x9e7b:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint16, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0xd0fb:
case 0xd2fb:
case 0xd4fb:
case 0xd6fb:
case 0xd8fb:
case 0xdafb:
case 0xdcfb:
case 0xdefb:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb0fb:
case 0xb2fb:
case 0xb4fb:
case 0xb6fb:
case 0xb8fb:
case 0xbafb:
case 0xbcfb:
case 0xbefb:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x90fb:
case 0x92fb:
case 0x94fb:
case 0x96fb:
case 0x98fb:
case 0x9afb:
case 0x9cfb:
case 0x9efb:
	{
	 HAM<uint16, PC_INDEX> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x307b:
case 0x327b:
case 0x347b:
case 0x367b:
case 0x387b:
case 0x3a7b:
case 0x3c7b:
case 0x3e7b:
	{
	 HAM<uint16, PC_INDEX> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x44fb:
	{
	 HAM<uint16, PC_INDEX> src(this); MOVE_to_CCR(src);
	}
	break;

case 0xc1fb:
case 0xc3fb:
case 0xc5fb:
case 0xc7fb:
case 0xc9fb:
case 0xcbfb:
case 0xcdfb:
case 0xcffb:
	{
	 HAM<uint16, PC_INDEX> src(this); MULS(src, instr_b11_b9);
	}
	break;

case 0xc0fb:
case 0xc2fb:
case 0xc4fb:
case 0xc6fb:
case 0xc8fb:
case 0xcafb:
case 0xccfb:
case 0xcefb:
	{
	 HAM<uint16, PC_INDEX> src(this); MULU(src, instr_b11_b9);
	}
	break;

case 0x42b9:
	{
	 HAM<uint32, ABS_LONG> dst(this); CLR(dst);
	}
	break;

case 0x44b9:
	{
	 HAM<uint32, ABS_LONG> dst(this); NEG(dst);
	}
	break;

case 0x40b9:
	{
	 HAM<uint32, ABS_LONG> dst(this); NEGX(dst);
	}
	break;

case 0x46b9:
	{
	 HAM<uint32, ABS_LONG> dst(this); NOT(dst);
	}
	break;

case 0x4ab9:
	{
	 HAM<uint32, ABS_LONG> dst(this); TST(dst);
	}
	break;

case 0x23f9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21f9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1f9:
case 0xd3f9:
case 0xd5f9:
case 0xd7f9:
case 0xd9f9:
case 0xdbf9:
case 0xddf9:
case 0xdff9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1f9:
case 0xb3f9:
case 0xb5f9:
case 0xb7f9:
case 0xb9f9:
case 0xbbf9:
case 0xbdf9:
case 0xbff9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91f9:
case 0x93f9:
case 0x95f9:
case 0x97f9:
case 0x99f9:
case 0x9bf9:
case 0x9df9:
case 0x9ff9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x20b9:
case 0x22b9:
case 0x24b9:
case 0x26b9:
case 0x28b9:
case 0x2ab9:
case 0x2cb9:
case 0x2eb9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2179:
case 0x2379:
case 0x2579:
case 0x2779:
case 0x2979:
case 0x2b79:
case 0x2d79:
case 0x2f79:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x21b9:
case 0x23b9:
case 0x25b9:
case 0x27b9:
case 0x29b9:
case 0x2bb9:
case 0x2db9:
case 0x2fb9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20f9:
case 0x22f9:
case 0x24f9:
case 0x26f9:
case 0x28f9:
case 0x2af9:
case 0x2cf9:
case 0x2ef9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2139:
case 0x2339:
case 0x2539:
case 0x2739:
case 0x2939:
case 0x2b39:
case 0x2d39:
case 0x2f39:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd0b9:
case 0xd2b9:
case 0xd4b9:
case 0xd6b9:
case 0xd8b9:
case 0xdab9:
case 0xdcb9:
case 0xdeb9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc0b9:
case 0xc2b9:
case 0xc4b9:
case 0xc6b9:
case 0xc8b9:
case 0xcab9:
case 0xccb9:
case 0xceb9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb0b9:
case 0xb2b9:
case 0xb4b9:
case 0xb6b9:
case 0xb8b9:
case 0xbab9:
case 0xbcb9:
case 0xbeb9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x2039:
case 0x2239:
case 0x2439:
case 0x2639:
case 0x2839:
case 0x2a39:
case 0x2c39:
case 0x2e39:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x80b9:
case 0x82b9:
case 0x84b9:
case 0x86b9:
case 0x88b9:
case 0x8ab9:
case 0x8cb9:
case 0x8eb9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x90b9:
case 0x92b9:
case 0x94b9:
case 0x96b9:
case 0x98b9:
case 0x9ab9:
case 0x9cb9:
case 0x9eb9:
	{
	 HAM<uint32, ABS_LONG> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2079:
case 0x2279:
case 0x2479:
case 0x2679:
case 0x2879:
case 0x2a79:
case 0x2c79:
case 0x2e79:
	{
	 HAM<uint32, ABS_LONG> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x42b8:
	{
	 HAM<uint32, ABS_SHORT> dst(this); CLR(dst);
	}
	break;

case 0x44b8:
	{
	 HAM<uint32, ABS_SHORT> dst(this); NEG(dst);
	}
	break;

case 0x40b8:
	{
	 HAM<uint32, ABS_SHORT> dst(this); NEGX(dst);
	}
	break;

case 0x46b8:
	{
	 HAM<uint32, ABS_SHORT> dst(this); NOT(dst);
	}
	break;

case 0x4ab8:
	{
	 HAM<uint32, ABS_SHORT> dst(this); TST(dst);
	}
	break;

case 0x23f8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21f8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1f8:
case 0xd3f8:
case 0xd5f8:
case 0xd7f8:
case 0xd9f8:
case 0xdbf8:
case 0xddf8:
case 0xdff8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1f8:
case 0xb3f8:
case 0xb5f8:
case 0xb7f8:
case 0xb9f8:
case 0xbbf8:
case 0xbdf8:
case 0xbff8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91f8:
case 0x93f8:
case 0x95f8:
case 0x97f8:
case 0x99f8:
case 0x9bf8:
case 0x9df8:
case 0x9ff8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x20b8:
case 0x22b8:
case 0x24b8:
case 0x26b8:
case 0x28b8:
case 0x2ab8:
case 0x2cb8:
case 0x2eb8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2178:
case 0x2378:
case 0x2578:
case 0x2778:
case 0x2978:
case 0x2b78:
case 0x2d78:
case 0x2f78:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x21b8:
case 0x23b8:
case 0x25b8:
case 0x27b8:
case 0x29b8:
case 0x2bb8:
case 0x2db8:
case 0x2fb8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20f8:
case 0x22f8:
case 0x24f8:
case 0x26f8:
case 0x28f8:
case 0x2af8:
case 0x2cf8:
case 0x2ef8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2138:
case 0x2338:
case 0x2538:
case 0x2738:
case 0x2938:
case 0x2b38:
case 0x2d38:
case 0x2f38:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd0b8:
case 0xd2b8:
case 0xd4b8:
case 0xd6b8:
case 0xd8b8:
case 0xdab8:
case 0xdcb8:
case 0xdeb8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc0b8:
case 0xc2b8:
case 0xc4b8:
case 0xc6b8:
case 0xc8b8:
case 0xcab8:
case 0xccb8:
case 0xceb8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb0b8:
case 0xb2b8:
case 0xb4b8:
case 0xb6b8:
case 0xb8b8:
case 0xbab8:
case 0xbcb8:
case 0xbeb8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x2038:
case 0x2238:
case 0x2438:
case 0x2638:
case 0x2838:
case 0x2a38:
case 0x2c38:
case 0x2e38:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x80b8:
case 0x82b8:
case 0x84b8:
case 0x86b8:
case 0x88b8:
case 0x8ab8:
case 0x8cb8:
case 0x8eb8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x90b8:
case 0x92b8:
case 0x94b8:
case 0x96b8:
case 0x98b8:
case 0x9ab8:
case 0x9cb8:
case 0x9eb8:
	{
	 HAM<uint32, ABS_SHORT> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2078:
case 0x2278:
case 0x2478:
case 0x2678:
case 0x2878:
case 0x2a78:
case 0x2c78:
case 0x2e78:
	{
	 HAM<uint32, ABS_SHORT> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x23c8:
case 0x23c9:
case 0x23ca:
case 0x23cb:
case 0x23cc:
case 0x23cd:
case 0x23ce:
case 0x23cf:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21c8:
case 0x21c9:
case 0x21ca:
case 0x21cb:
case 0x21cc:
case 0x21cd:
case 0x21ce:
case 0x21cf:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1c8:
case 0xd1c9:
case 0xd1ca:
case 0xd1cb:
case 0xd1cc:
case 0xd1cd:
case 0xd1ce:
case 0xd1cf:
case 0xd3c8:
case 0xd3c9:
case 0xd3ca:
case 0xd3cb:
case 0xd3cc:
case 0xd3cd:
case 0xd3ce:
case 0xd3cf:
case 0xd5c8:
case 0xd5c9:
case 0xd5ca:
case 0xd5cb:
case 0xd5cc:
case 0xd5cd:
case 0xd5ce:
case 0xd5cf:
case 0xd7c8:
case 0xd7c9:
case 0xd7ca:
case 0xd7cb:
case 0xd7cc:
case 0xd7cd:
case 0xd7ce:
case 0xd7cf:
case 0xd9c8:
case 0xd9c9:
case 0xd9ca:
case 0xd9cb:
case 0xd9cc:
case 0xd9cd:
case 0xd9ce:
case 0xd9cf:
case 0xdbc8:
case 0xdbc9:
case 0xdbca:
case 0xdbcb:
case 0xdbcc:
case 0xdbcd:
case 0xdbce:
case 0xdbcf:
case 0xddc8:
case 0xddc9:
case 0xddca:
case 0xddcb:
case 0xddcc:
case 0xddcd:
case 0xddce:
case 0xddcf:
case 0xdfc8:
case 0xdfc9:
case 0xdfca:
case 0xdfcb:
case 0xdfcc:
case 0xdfcd:
case 0xdfce:
case 0xdfcf:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1c8:
case 0xb1c9:
case 0xb1ca:
case 0xb1cb:
case 0xb1cc:
case 0xb1cd:
case 0xb1ce:
case 0xb1cf:
case 0xb3c8:
case 0xb3c9:
case 0xb3ca:
case 0xb3cb:
case 0xb3cc:
case 0xb3cd:
case 0xb3ce:
case 0xb3cf:
case 0xb5c8:
case 0xb5c9:
case 0xb5ca:
case 0xb5cb:
case 0xb5cc:
case 0xb5cd:
case 0xb5ce:
case 0xb5cf:
case 0xb7c8:
case 0xb7c9:
case 0xb7ca:
case 0xb7cb:
case 0xb7cc:
case 0xb7cd:
case 0xb7ce:
case 0xb7cf:
case 0xb9c8:
case 0xb9c9:
case 0xb9ca:
case 0xb9cb:
case 0xb9cc:
case 0xb9cd:
case 0xb9ce:
case 0xb9cf:
case 0xbbc8:
case 0xbbc9:
case 0xbbca:
case 0xbbcb:
case 0xbbcc:
case 0xbbcd:
case 0xbbce:
case 0xbbcf:
case 0xbdc8:
case 0xbdc9:
case 0xbdca:
case 0xbdcb:
case 0xbdcc:
case 0xbdcd:
case 0xbdce:
case 0xbdcf:
case 0xbfc8:
case 0xbfc9:
case 0xbfca:
case 0xbfcb:
case 0xbfcc:
case 0xbfcd:
case 0xbfce:
case 0xbfcf:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91c8:
case 0x91c9:
case 0x91ca:
case 0x91cb:
case 0x91cc:
case 0x91cd:
case 0x91ce:
case 0x91cf:
case 0x93c8:
case 0x93c9:
case 0x93ca:
case 0x93cb:
case 0x93cc:
case 0x93cd:
case 0x93ce:
case 0x93cf:
case 0x95c8:
case 0x95c9:
case 0x95ca:
case 0x95cb:
case 0x95cc:
case 0x95cd:
case 0x95ce:
case 0x95cf:
case 0x97c8:
case 0x97c9:
case 0x97ca:
case 0x97cb:
case 0x97cc:
case 0x97cd:
case 0x97ce:
case 0x97cf:
case 0x99c8:
case 0x99c9:
case 0x99ca:
case 0x99cb:
case 0x99cc:
case 0x99cd:
case 0x99ce:
case 0x99cf:
case 0x9bc8:
case 0x9bc9:
case 0x9bca:
case 0x9bcb:
case 0x9bcc:
case 0x9bcd:
case 0x9bce:
case 0x9bcf:
case 0x9dc8:
case 0x9dc9:
case 0x9dca:
case 0x9dcb:
case 0x9dcc:
case 0x9dcd:
case 0x9dce:
case 0x9dcf:
case 0x9fc8:
case 0x9fc9:
case 0x9fca:
case 0x9fcb:
case 0x9fcc:
case 0x9fcd:
case 0x9fce:
case 0x9fcf:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2088:
case 0x2089:
case 0x208a:
case 0x208b:
case 0x208c:
case 0x208d:
case 0x208e:
case 0x208f:
case 0x2288:
case 0x2289:
case 0x228a:
case 0x228b:
case 0x228c:
case 0x228d:
case 0x228e:
case 0x228f:
case 0x2488:
case 0x2489:
case 0x248a:
case 0x248b:
case 0x248c:
case 0x248d:
case 0x248e:
case 0x248f:
case 0x2688:
case 0x2689:
case 0x268a:
case 0x268b:
case 0x268c:
case 0x268d:
case 0x268e:
case 0x268f:
case 0x2888:
case 0x2889:
case 0x288a:
case 0x288b:
case 0x288c:
case 0x288d:
case 0x288e:
case 0x288f:
case 0x2a88:
case 0x2a89:
case 0x2a8a:
case 0x2a8b:
case 0x2a8c:
case 0x2a8d:
case 0x2a8e:
case 0x2a8f:
case 0x2c88:
case 0x2c89:
case 0x2c8a:
case 0x2c8b:
case 0x2c8c:
case 0x2c8d:
case 0x2c8e:
case 0x2c8f:
case 0x2e88:
case 0x2e89:
case 0x2e8a:
case 0x2e8b:
case 0x2e8c:
case 0x2e8d:
case 0x2e8e:
case 0x2e8f:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2148:
case 0x2149:
case 0x214a:
case 0x214b:
case 0x214c:
case 0x214d:
case 0x214e:
case 0x214f:
case 0x2348:
case 0x2349:
case 0x234a:
case 0x234b:
case 0x234c:
case 0x234d:
case 0x234e:
case 0x234f:
case 0x2548:
case 0x2549:
case 0x254a:
case 0x254b:
case 0x254c:
case 0x254d:
case 0x254e:
case 0x254f:
case 0x2748:
case 0x2749:
case 0x274a:
case 0x274b:
case 0x274c:
case 0x274d:
case 0x274e:
case 0x274f:
case 0x2948:
case 0x2949:
case 0x294a:
case 0x294b:
case 0x294c:
case 0x294d:
case 0x294e:
case 0x294f:
case 0x2b48:
case 0x2b49:
case 0x2b4a:
case 0x2b4b:
case 0x2b4c:
case 0x2b4d:
case 0x2b4e:
case 0x2b4f:
case 0x2d48:
case 0x2d49:
case 0x2d4a:
case 0x2d4b:
case 0x2d4c:
case 0x2d4d:
case 0x2d4e:
case 0x2d4f:
case 0x2f48:
case 0x2f49:
case 0x2f4a:
case 0x2f4b:
case 0x2f4c:
case 0x2f4d:
case 0x2f4e:
case 0x2f4f:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2188:
case 0x2189:
case 0x218a:
case 0x218b:
case 0x218c:
case 0x218d:
case 0x218e:
case 0x218f:
case 0x2388:
case 0x2389:
case 0x238a:
case 0x238b:
case 0x238c:
case 0x238d:
case 0x238e:
case 0x238f:
case 0x2588:
case 0x2589:
case 0x258a:
case 0x258b:
case 0x258c:
case 0x258d:
case 0x258e:
case 0x258f:
case 0x2788:
case 0x2789:
case 0x278a:
case 0x278b:
case 0x278c:
case 0x278d:
case 0x278e:
case 0x278f:
case 0x2988:
case 0x2989:
case 0x298a:
case 0x298b:
case 0x298c:
case 0x298d:
case 0x298e:
case 0x298f:
case 0x2b88:
case 0x2b89:
case 0x2b8a:
case 0x2b8b:
case 0x2b8c:
case 0x2b8d:
case 0x2b8e:
case 0x2b8f:
case 0x2d88:
case 0x2d89:
case 0x2d8a:
case 0x2d8b:
case 0x2d8c:
case 0x2d8d:
case 0x2d8e:
case 0x2d8f:
case 0x2f88:
case 0x2f89:
case 0x2f8a:
case 0x2f8b:
case 0x2f8c:
case 0x2f8d:
case 0x2f8e:
case 0x2f8f:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20c8:
case 0x20c9:
case 0x20ca:
case 0x20cb:
case 0x20cc:
case 0x20cd:
case 0x20ce:
case 0x20cf:
case 0x22c8:
case 0x22c9:
case 0x22ca:
case 0x22cb:
case 0x22cc:
case 0x22cd:
case 0x22ce:
case 0x22cf:
case 0x24c8:
case 0x24c9:
case 0x24ca:
case 0x24cb:
case 0x24cc:
case 0x24cd:
case 0x24ce:
case 0x24cf:
case 0x26c8:
case 0x26c9:
case 0x26ca:
case 0x26cb:
case 0x26cc:
case 0x26cd:
case 0x26ce:
case 0x26cf:
case 0x28c8:
case 0x28c9:
case 0x28ca:
case 0x28cb:
case 0x28cc:
case 0x28cd:
case 0x28ce:
case 0x28cf:
case 0x2ac8:
case 0x2ac9:
case 0x2aca:
case 0x2acb:
case 0x2acc:
case 0x2acd:
case 0x2ace:
case 0x2acf:
case 0x2cc8:
case 0x2cc9:
case 0x2cca:
case 0x2ccb:
case 0x2ccc:
case 0x2ccd:
case 0x2cce:
case 0x2ccf:
case 0x2ec8:
case 0x2ec9:
case 0x2eca:
case 0x2ecb:
case 0x2ecc:
case 0x2ecd:
case 0x2ece:
case 0x2ecf:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2108:
case 0x2109:
case 0x210a:
case 0x210b:
case 0x210c:
case 0x210d:
case 0x210e:
case 0x210f:
case 0x2308:
case 0x2309:
case 0x230a:
case 0x230b:
case 0x230c:
case 0x230d:
case 0x230e:
case 0x230f:
case 0x2508:
case 0x2509:
case 0x250a:
case 0x250b:
case 0x250c:
case 0x250d:
case 0x250e:
case 0x250f:
case 0x2708:
case 0x2709:
case 0x270a:
case 0x270b:
case 0x270c:
case 0x270d:
case 0x270e:
case 0x270f:
case 0x2908:
case 0x2909:
case 0x290a:
case 0x290b:
case 0x290c:
case 0x290d:
case 0x290e:
case 0x290f:
case 0x2b08:
case 0x2b09:
case 0x2b0a:
case 0x2b0b:
case 0x2b0c:
case 0x2b0d:
case 0x2b0e:
case 0x2b0f:
case 0x2d08:
case 0x2d09:
case 0x2d0a:
case 0x2d0b:
case 0x2d0c:
case 0x2d0d:
case 0x2d0e:
case 0x2d0f:
case 0x2f08:
case 0x2f09:
case 0x2f0a:
case 0x2f0b:
case 0x2f0c:
case 0x2f0d:
case 0x2f0e:
case 0x2f0f:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd088:
case 0xd089:
case 0xd08a:
case 0xd08b:
case 0xd08c:
case 0xd08d:
case 0xd08e:
case 0xd08f:
case 0xd288:
case 0xd289:
case 0xd28a:
case 0xd28b:
case 0xd28c:
case 0xd28d:
case 0xd28e:
case 0xd28f:
case 0xd488:
case 0xd489:
case 0xd48a:
case 0xd48b:
case 0xd48c:
case 0xd48d:
case 0xd48e:
case 0xd48f:
case 0xd688:
case 0xd689:
case 0xd68a:
case 0xd68b:
case 0xd68c:
case 0xd68d:
case 0xd68e:
case 0xd68f:
case 0xd888:
case 0xd889:
case 0xd88a:
case 0xd88b:
case 0xd88c:
case 0xd88d:
case 0xd88e:
case 0xd88f:
case 0xda88:
case 0xda89:
case 0xda8a:
case 0xda8b:
case 0xda8c:
case 0xda8d:
case 0xda8e:
case 0xda8f:
case 0xdc88:
case 0xdc89:
case 0xdc8a:
case 0xdc8b:
case 0xdc8c:
case 0xdc8d:
case 0xdc8e:
case 0xdc8f:
case 0xde88:
case 0xde89:
case 0xde8a:
case 0xde8b:
case 0xde8c:
case 0xde8d:
case 0xde8e:
case 0xde8f:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb088:
case 0xb089:
case 0xb08a:
case 0xb08b:
case 0xb08c:
case 0xb08d:
case 0xb08e:
case 0xb08f:
case 0xb288:
case 0xb289:
case 0xb28a:
case 0xb28b:
case 0xb28c:
case 0xb28d:
case 0xb28e:
case 0xb28f:
case 0xb488:
case 0xb489:
case 0xb48a:
case 0xb48b:
case 0xb48c:
case 0xb48d:
case 0xb48e:
case 0xb48f:
case 0xb688:
case 0xb689:
case 0xb68a:
case 0xb68b:
case 0xb68c:
case 0xb68d:
case 0xb68e:
case 0xb68f:
case 0xb888:
case 0xb889:
case 0xb88a:
case 0xb88b:
case 0xb88c:
case 0xb88d:
case 0xb88e:
case 0xb88f:
case 0xba88:
case 0xba89:
case 0xba8a:
case 0xba8b:
case 0xba8c:
case 0xba8d:
case 0xba8e:
case 0xba8f:
case 0xbc88:
case 0xbc89:
case 0xbc8a:
case 0xbc8b:
case 0xbc8c:
case 0xbc8d:
case 0xbc8e:
case 0xbc8f:
case 0xbe88:
case 0xbe89:
case 0xbe8a:
case 0xbe8b:
case 0xbe8c:
case 0xbe8d:
case 0xbe8e:
case 0xbe8f:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x2008:
case 0x2009:
case 0x200a:
case 0x200b:
case 0x200c:
case 0x200d:
case 0x200e:
case 0x200f:
case 0x2208:
case 0x2209:
case 0x220a:
case 0x220b:
case 0x220c:
case 0x220d:
case 0x220e:
case 0x220f:
case 0x2408:
case 0x2409:
case 0x240a:
case 0x240b:
case 0x240c:
case 0x240d:
case 0x240e:
case 0x240f:
case 0x2608:
case 0x2609:
case 0x260a:
case 0x260b:
case 0x260c:
case 0x260d:
case 0x260e:
case 0x260f:
case 0x2808:
case 0x2809:
case 0x280a:
case 0x280b:
case 0x280c:
case 0x280d:
case 0x280e:
case 0x280f:
case 0x2a08:
case 0x2a09:
case 0x2a0a:
case 0x2a0b:
case 0x2a0c:
case 0x2a0d:
case 0x2a0e:
case 0x2a0f:
case 0x2c08:
case 0x2c09:
case 0x2c0a:
case 0x2c0b:
case 0x2c0c:
case 0x2c0d:
case 0x2c0e:
case 0x2c0f:
case 0x2e08:
case 0x2e09:
case 0x2e0a:
case 0x2e0b:
case 0x2e0c:
case 0x2e0d:
case 0x2e0e:
case 0x2e0f:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x9088:
case 0x9089:
case 0x908a:
case 0x908b:
case 0x908c:
case 0x908d:
case 0x908e:
case 0x908f:
case 0x9288:
case 0x9289:
case 0x928a:
case 0x928b:
case 0x928c:
case 0x928d:
case 0x928e:
case 0x928f:
case 0x9488:
case 0x9489:
case 0x948a:
case 0x948b:
case 0x948c:
case 0x948d:
case 0x948e:
case 0x948f:
case 0x9688:
case 0x9689:
case 0x968a:
case 0x968b:
case 0x968c:
case 0x968d:
case 0x968e:
case 0x968f:
case 0x9888:
case 0x9889:
case 0x988a:
case 0x988b:
case 0x988c:
case 0x988d:
case 0x988e:
case 0x988f:
case 0x9a88:
case 0x9a89:
case 0x9a8a:
case 0x9a8b:
case 0x9a8c:
case 0x9a8d:
case 0x9a8e:
case 0x9a8f:
case 0x9c88:
case 0x9c89:
case 0x9c8a:
case 0x9c8b:
case 0x9c8c:
case 0x9c8d:
case 0x9c8e:
case 0x9c8f:
case 0x9e88:
case 0x9e89:
case 0x9e8a:
case 0x9e8b:
case 0x9e8c:
case 0x9e8d:
case 0x9e8e:
case 0x9e8f:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2048:
case 0x2049:
case 0x204a:
case 0x204b:
case 0x204c:
case 0x204d:
case 0x204e:
case 0x204f:
case 0x2248:
case 0x2249:
case 0x224a:
case 0x224b:
case 0x224c:
case 0x224d:
case 0x224e:
case 0x224f:
case 0x2448:
case 0x2449:
case 0x244a:
case 0x244b:
case 0x244c:
case 0x244d:
case 0x244e:
case 0x244f:
case 0x2648:
case 0x2649:
case 0x264a:
case 0x264b:
case 0x264c:
case 0x264d:
case 0x264e:
case 0x264f:
case 0x2848:
case 0x2849:
case 0x284a:
case 0x284b:
case 0x284c:
case 0x284d:
case 0x284e:
case 0x284f:
case 0x2a48:
case 0x2a49:
case 0x2a4a:
case 0x2a4b:
case 0x2a4c:
case 0x2a4d:
case 0x2a4e:
case 0x2a4f:
case 0x2c48:
case 0x2c49:
case 0x2c4a:
case 0x2c4b:
case 0x2c4c:
case 0x2c4d:
case 0x2c4e:
case 0x2c4f:
case 0x2e48:
case 0x2e49:
case 0x2e4a:
case 0x2e4b:
case 0x2e4c:
case 0x2e4d:
case 0x2e4e:
case 0x2e4f:
	{
	 HAM<uint32, ADDR_REG_DIR> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x4290:
case 0x4291:
case 0x4292:
case 0x4293:
case 0x4294:
case 0x4295:
case 0x4296:
case 0x4297:
	{
	 HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4490:
case 0x4491:
case 0x4492:
case 0x4493:
case 0x4494:
case 0x4495:
case 0x4496:
case 0x4497:
	{
	 HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4090:
case 0x4091:
case 0x4092:
case 0x4093:
case 0x4094:
case 0x4095:
case 0x4096:
case 0x4097:
	{
	 HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4690:
case 0x4691:
case 0x4692:
case 0x4693:
case 0x4694:
case 0x4695:
case 0x4696:
case 0x4697:
	{
	 HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4a90:
case 0x4a91:
case 0x4a92:
case 0x4a93:
case 0x4a94:
case 0x4a95:
case 0x4a96:
case 0x4a97:
	{
	 HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x23d0:
case 0x23d1:
case 0x23d2:
case 0x23d3:
case 0x23d4:
case 0x23d5:
case 0x23d6:
case 0x23d7:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21d0:
case 0x21d1:
case 0x21d2:
case 0x21d3:
case 0x21d4:
case 0x21d5:
case 0x21d6:
case 0x21d7:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1d0:
case 0xd1d1:
case 0xd1d2:
case 0xd1d3:
case 0xd1d4:
case 0xd1d5:
case 0xd1d6:
case 0xd1d7:
case 0xd3d0:
case 0xd3d1:
case 0xd3d2:
case 0xd3d3:
case 0xd3d4:
case 0xd3d5:
case 0xd3d6:
case 0xd3d7:
case 0xd5d0:
case 0xd5d1:
case 0xd5d2:
case 0xd5d3:
case 0xd5d4:
case 0xd5d5:
case 0xd5d6:
case 0xd5d7:
case 0xd7d0:
case 0xd7d1:
case 0xd7d2:
case 0xd7d3:
case 0xd7d4:
case 0xd7d5:
case 0xd7d6:
case 0xd7d7:
case 0xd9d0:
case 0xd9d1:
case 0xd9d2:
case 0xd9d3:
case 0xd9d4:
case 0xd9d5:
case 0xd9d6:
case 0xd9d7:
case 0xdbd0:
case 0xdbd1:
case 0xdbd2:
case 0xdbd3:
case 0xdbd4:
case 0xdbd5:
case 0xdbd6:
case 0xdbd7:
case 0xddd0:
case 0xddd1:
case 0xddd2:
case 0xddd3:
case 0xddd4:
case 0xddd5:
case 0xddd6:
case 0xddd7:
case 0xdfd0:
case 0xdfd1:
case 0xdfd2:
case 0xdfd3:
case 0xdfd4:
case 0xdfd5:
case 0xdfd6:
case 0xdfd7:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1d0:
case 0xb1d1:
case 0xb1d2:
case 0xb1d3:
case 0xb1d4:
case 0xb1d5:
case 0xb1d6:
case 0xb1d7:
case 0xb3d0:
case 0xb3d1:
case 0xb3d2:
case 0xb3d3:
case 0xb3d4:
case 0xb3d5:
case 0xb3d6:
case 0xb3d7:
case 0xb5d0:
case 0xb5d1:
case 0xb5d2:
case 0xb5d3:
case 0xb5d4:
case 0xb5d5:
case 0xb5d6:
case 0xb5d7:
case 0xb7d0:
case 0xb7d1:
case 0xb7d2:
case 0xb7d3:
case 0xb7d4:
case 0xb7d5:
case 0xb7d6:
case 0xb7d7:
case 0xb9d0:
case 0xb9d1:
case 0xb9d2:
case 0xb9d3:
case 0xb9d4:
case 0xb9d5:
case 0xb9d6:
case 0xb9d7:
case 0xbbd0:
case 0xbbd1:
case 0xbbd2:
case 0xbbd3:
case 0xbbd4:
case 0xbbd5:
case 0xbbd6:
case 0xbbd7:
case 0xbdd0:
case 0xbdd1:
case 0xbdd2:
case 0xbdd3:
case 0xbdd4:
case 0xbdd5:
case 0xbdd6:
case 0xbdd7:
case 0xbfd0:
case 0xbfd1:
case 0xbfd2:
case 0xbfd3:
case 0xbfd4:
case 0xbfd5:
case 0xbfd6:
case 0xbfd7:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91d0:
case 0x91d1:
case 0x91d2:
case 0x91d3:
case 0x91d4:
case 0x91d5:
case 0x91d6:
case 0x91d7:
case 0x93d0:
case 0x93d1:
case 0x93d2:
case 0x93d3:
case 0x93d4:
case 0x93d5:
case 0x93d6:
case 0x93d7:
case 0x95d0:
case 0x95d1:
case 0x95d2:
case 0x95d3:
case 0x95d4:
case 0x95d5:
case 0x95d6:
case 0x95d7:
case 0x97d0:
case 0x97d1:
case 0x97d2:
case 0x97d3:
case 0x97d4:
case 0x97d5:
case 0x97d6:
case 0x97d7:
case 0x99d0:
case 0x99d1:
case 0x99d2:
case 0x99d3:
case 0x99d4:
case 0x99d5:
case 0x99d6:
case 0x99d7:
case 0x9bd0:
case 0x9bd1:
case 0x9bd2:
case 0x9bd3:
case 0x9bd4:
case 0x9bd5:
case 0x9bd6:
case 0x9bd7:
case 0x9dd0:
case 0x9dd1:
case 0x9dd2:
case 0x9dd3:
case 0x9dd4:
case 0x9dd5:
case 0x9dd6:
case 0x9dd7:
case 0x9fd0:
case 0x9fd1:
case 0x9fd2:
case 0x9fd3:
case 0x9fd4:
case 0x9fd5:
case 0x9fd6:
case 0x9fd7:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2090:
case 0x2091:
case 0x2092:
case 0x2093:
case 0x2094:
case 0x2095:
case 0x2096:
case 0x2097:
case 0x2290:
case 0x2291:
case 0x2292:
case 0x2293:
case 0x2294:
case 0x2295:
case 0x2296:
case 0x2297:
case 0x2490:
case 0x2491:
case 0x2492:
case 0x2493:
case 0x2494:
case 0x2495:
case 0x2496:
case 0x2497:
case 0x2690:
case 0x2691:
case 0x2692:
case 0x2693:
case 0x2694:
case 0x2695:
case 0x2696:
case 0x2697:
case 0x2890:
case 0x2891:
case 0x2892:
case 0x2893:
case 0x2894:
case 0x2895:
case 0x2896:
case 0x2897:
case 0x2a90:
case 0x2a91:
case 0x2a92:
case 0x2a93:
case 0x2a94:
case 0x2a95:
case 0x2a96:
case 0x2a97:
case 0x2c90:
case 0x2c91:
case 0x2c92:
case 0x2c93:
case 0x2c94:
case 0x2c95:
case 0x2c96:
case 0x2c97:
case 0x2e90:
case 0x2e91:
case 0x2e92:
case 0x2e93:
case 0x2e94:
case 0x2e95:
case 0x2e96:
case 0x2e97:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2150:
case 0x2151:
case 0x2152:
case 0x2153:
case 0x2154:
case 0x2155:
case 0x2156:
case 0x2157:
case 0x2350:
case 0x2351:
case 0x2352:
case 0x2353:
case 0x2354:
case 0x2355:
case 0x2356:
case 0x2357:
case 0x2550:
case 0x2551:
case 0x2552:
case 0x2553:
case 0x2554:
case 0x2555:
case 0x2556:
case 0x2557:
case 0x2750:
case 0x2751:
case 0x2752:
case 0x2753:
case 0x2754:
case 0x2755:
case 0x2756:
case 0x2757:
case 0x2950:
case 0x2951:
case 0x2952:
case 0x2953:
case 0x2954:
case 0x2955:
case 0x2956:
case 0x2957:
case 0x2b50:
case 0x2b51:
case 0x2b52:
case 0x2b53:
case 0x2b54:
case 0x2b55:
case 0x2b56:
case 0x2b57:
case 0x2d50:
case 0x2d51:
case 0x2d52:
case 0x2d53:
case 0x2d54:
case 0x2d55:
case 0x2d56:
case 0x2d57:
case 0x2f50:
case 0x2f51:
case 0x2f52:
case 0x2f53:
case 0x2f54:
case 0x2f55:
case 0x2f56:
case 0x2f57:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2190:
case 0x2191:
case 0x2192:
case 0x2193:
case 0x2194:
case 0x2195:
case 0x2196:
case 0x2197:
case 0x2390:
case 0x2391:
case 0x2392:
case 0x2393:
case 0x2394:
case 0x2395:
case 0x2396:
case 0x2397:
case 0x2590:
case 0x2591:
case 0x2592:
case 0x2593:
case 0x2594:
case 0x2595:
case 0x2596:
case 0x2597:
case 0x2790:
case 0x2791:
case 0x2792:
case 0x2793:
case 0x2794:
case 0x2795:
case 0x2796:
case 0x2797:
case 0x2990:
case 0x2991:
case 0x2992:
case 0x2993:
case 0x2994:
case 0x2995:
case 0x2996:
case 0x2997:
case 0x2b90:
case 0x2b91:
case 0x2b92:
case 0x2b93:
case 0x2b94:
case 0x2b95:
case 0x2b96:
case 0x2b97:
case 0x2d90:
case 0x2d91:
case 0x2d92:
case 0x2d93:
case 0x2d94:
case 0x2d95:
case 0x2d96:
case 0x2d97:
case 0x2f90:
case 0x2f91:
case 0x2f92:
case 0x2f93:
case 0x2f94:
case 0x2f95:
case 0x2f96:
case 0x2f97:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20d0:
case 0x20d1:
case 0x20d2:
case 0x20d3:
case 0x20d4:
case 0x20d5:
case 0x20d6:
case 0x20d7:
case 0x22d0:
case 0x22d1:
case 0x22d2:
case 0x22d3:
case 0x22d4:
case 0x22d5:
case 0x22d6:
case 0x22d7:
case 0x24d0:
case 0x24d1:
case 0x24d2:
case 0x24d3:
case 0x24d4:
case 0x24d5:
case 0x24d6:
case 0x24d7:
case 0x26d0:
case 0x26d1:
case 0x26d2:
case 0x26d3:
case 0x26d4:
case 0x26d5:
case 0x26d6:
case 0x26d7:
case 0x28d0:
case 0x28d1:
case 0x28d2:
case 0x28d3:
case 0x28d4:
case 0x28d5:
case 0x28d6:
case 0x28d7:
case 0x2ad0:
case 0x2ad1:
case 0x2ad2:
case 0x2ad3:
case 0x2ad4:
case 0x2ad5:
case 0x2ad6:
case 0x2ad7:
case 0x2cd0:
case 0x2cd1:
case 0x2cd2:
case 0x2cd3:
case 0x2cd4:
case 0x2cd5:
case 0x2cd6:
case 0x2cd7:
case 0x2ed0:
case 0x2ed1:
case 0x2ed2:
case 0x2ed3:
case 0x2ed4:
case 0x2ed5:
case 0x2ed6:
case 0x2ed7:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2110:
case 0x2111:
case 0x2112:
case 0x2113:
case 0x2114:
case 0x2115:
case 0x2116:
case 0x2117:
case 0x2310:
case 0x2311:
case 0x2312:
case 0x2313:
case 0x2314:
case 0x2315:
case 0x2316:
case 0x2317:
case 0x2510:
case 0x2511:
case 0x2512:
case 0x2513:
case 0x2514:
case 0x2515:
case 0x2516:
case 0x2517:
case 0x2710:
case 0x2711:
case 0x2712:
case 0x2713:
case 0x2714:
case 0x2715:
case 0x2716:
case 0x2717:
case 0x2910:
case 0x2911:
case 0x2912:
case 0x2913:
case 0x2914:
case 0x2915:
case 0x2916:
case 0x2917:
case 0x2b10:
case 0x2b11:
case 0x2b12:
case 0x2b13:
case 0x2b14:
case 0x2b15:
case 0x2b16:
case 0x2b17:
case 0x2d10:
case 0x2d11:
case 0x2d12:
case 0x2d13:
case 0x2d14:
case 0x2d15:
case 0x2d16:
case 0x2d17:
case 0x2f10:
case 0x2f11:
case 0x2f12:
case 0x2f13:
case 0x2f14:
case 0x2f15:
case 0x2f16:
case 0x2f17:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd090:
case 0xd091:
case 0xd092:
case 0xd093:
case 0xd094:
case 0xd095:
case 0xd096:
case 0xd097:
case 0xd290:
case 0xd291:
case 0xd292:
case 0xd293:
case 0xd294:
case 0xd295:
case 0xd296:
case 0xd297:
case 0xd490:
case 0xd491:
case 0xd492:
case 0xd493:
case 0xd494:
case 0xd495:
case 0xd496:
case 0xd497:
case 0xd690:
case 0xd691:
case 0xd692:
case 0xd693:
case 0xd694:
case 0xd695:
case 0xd696:
case 0xd697:
case 0xd890:
case 0xd891:
case 0xd892:
case 0xd893:
case 0xd894:
case 0xd895:
case 0xd896:
case 0xd897:
case 0xda90:
case 0xda91:
case 0xda92:
case 0xda93:
case 0xda94:
case 0xda95:
case 0xda96:
case 0xda97:
case 0xdc90:
case 0xdc91:
case 0xdc92:
case 0xdc93:
case 0xdc94:
case 0xdc95:
case 0xdc96:
case 0xdc97:
case 0xde90:
case 0xde91:
case 0xde92:
case 0xde93:
case 0xde94:
case 0xde95:
case 0xde96:
case 0xde97:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc090:
case 0xc091:
case 0xc092:
case 0xc093:
case 0xc094:
case 0xc095:
case 0xc096:
case 0xc097:
case 0xc290:
case 0xc291:
case 0xc292:
case 0xc293:
case 0xc294:
case 0xc295:
case 0xc296:
case 0xc297:
case 0xc490:
case 0xc491:
case 0xc492:
case 0xc493:
case 0xc494:
case 0xc495:
case 0xc496:
case 0xc497:
case 0xc690:
case 0xc691:
case 0xc692:
case 0xc693:
case 0xc694:
case 0xc695:
case 0xc696:
case 0xc697:
case 0xc890:
case 0xc891:
case 0xc892:
case 0xc893:
case 0xc894:
case 0xc895:
case 0xc896:
case 0xc897:
case 0xca90:
case 0xca91:
case 0xca92:
case 0xca93:
case 0xca94:
case 0xca95:
case 0xca96:
case 0xca97:
case 0xcc90:
case 0xcc91:
case 0xcc92:
case 0xcc93:
case 0xcc94:
case 0xcc95:
case 0xcc96:
case 0xcc97:
case 0xce90:
case 0xce91:
case 0xce92:
case 0xce93:
case 0xce94:
case 0xce95:
case 0xce96:
case 0xce97:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb090:
case 0xb091:
case 0xb092:
case 0xb093:
case 0xb094:
case 0xb095:
case 0xb096:
case 0xb097:
case 0xb290:
case 0xb291:
case 0xb292:
case 0xb293:
case 0xb294:
case 0xb295:
case 0xb296:
case 0xb297:
case 0xb490:
case 0xb491:
case 0xb492:
case 0xb493:
case 0xb494:
case 0xb495:
case 0xb496:
case 0xb497:
case 0xb690:
case 0xb691:
case 0xb692:
case 0xb693:
case 0xb694:
case 0xb695:
case 0xb696:
case 0xb697:
case 0xb890:
case 0xb891:
case 0xb892:
case 0xb893:
case 0xb894:
case 0xb895:
case 0xb896:
case 0xb897:
case 0xba90:
case 0xba91:
case 0xba92:
case 0xba93:
case 0xba94:
case 0xba95:
case 0xba96:
case 0xba97:
case 0xbc90:
case 0xbc91:
case 0xbc92:
case 0xbc93:
case 0xbc94:
case 0xbc95:
case 0xbc96:
case 0xbc97:
case 0xbe90:
case 0xbe91:
case 0xbe92:
case 0xbe93:
case 0xbe94:
case 0xbe95:
case 0xbe96:
case 0xbe97:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x2010:
case 0x2011:
case 0x2012:
case 0x2013:
case 0x2014:
case 0x2015:
case 0x2016:
case 0x2017:
case 0x2210:
case 0x2211:
case 0x2212:
case 0x2213:
case 0x2214:
case 0x2215:
case 0x2216:
case 0x2217:
case 0x2410:
case 0x2411:
case 0x2412:
case 0x2413:
case 0x2414:
case 0x2415:
case 0x2416:
case 0x2417:
case 0x2610:
case 0x2611:
case 0x2612:
case 0x2613:
case 0x2614:
case 0x2615:
case 0x2616:
case 0x2617:
case 0x2810:
case 0x2811:
case 0x2812:
case 0x2813:
case 0x2814:
case 0x2815:
case 0x2816:
case 0x2817:
case 0x2a10:
case 0x2a11:
case 0x2a12:
case 0x2a13:
case 0x2a14:
case 0x2a15:
case 0x2a16:
case 0x2a17:
case 0x2c10:
case 0x2c11:
case 0x2c12:
case 0x2c13:
case 0x2c14:
case 0x2c15:
case 0x2c16:
case 0x2c17:
case 0x2e10:
case 0x2e11:
case 0x2e12:
case 0x2e13:
case 0x2e14:
case 0x2e15:
case 0x2e16:
case 0x2e17:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8090:
case 0x8091:
case 0x8092:
case 0x8093:
case 0x8094:
case 0x8095:
case 0x8096:
case 0x8097:
case 0x8290:
case 0x8291:
case 0x8292:
case 0x8293:
case 0x8294:
case 0x8295:
case 0x8296:
case 0x8297:
case 0x8490:
case 0x8491:
case 0x8492:
case 0x8493:
case 0x8494:
case 0x8495:
case 0x8496:
case 0x8497:
case 0x8690:
case 0x8691:
case 0x8692:
case 0x8693:
case 0x8694:
case 0x8695:
case 0x8696:
case 0x8697:
case 0x8890:
case 0x8891:
case 0x8892:
case 0x8893:
case 0x8894:
case 0x8895:
case 0x8896:
case 0x8897:
case 0x8a90:
case 0x8a91:
case 0x8a92:
case 0x8a93:
case 0x8a94:
case 0x8a95:
case 0x8a96:
case 0x8a97:
case 0x8c90:
case 0x8c91:
case 0x8c92:
case 0x8c93:
case 0x8c94:
case 0x8c95:
case 0x8c96:
case 0x8c97:
case 0x8e90:
case 0x8e91:
case 0x8e92:
case 0x8e93:
case 0x8e94:
case 0x8e95:
case 0x8e96:
case 0x8e97:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9090:
case 0x9091:
case 0x9092:
case 0x9093:
case 0x9094:
case 0x9095:
case 0x9096:
case 0x9097:
case 0x9290:
case 0x9291:
case 0x9292:
case 0x9293:
case 0x9294:
case 0x9295:
case 0x9296:
case 0x9297:
case 0x9490:
case 0x9491:
case 0x9492:
case 0x9493:
case 0x9494:
case 0x9495:
case 0x9496:
case 0x9497:
case 0x9690:
case 0x9691:
case 0x9692:
case 0x9693:
case 0x9694:
case 0x9695:
case 0x9696:
case 0x9697:
case 0x9890:
case 0x9891:
case 0x9892:
case 0x9893:
case 0x9894:
case 0x9895:
case 0x9896:
case 0x9897:
case 0x9a90:
case 0x9a91:
case 0x9a92:
case 0x9a93:
case 0x9a94:
case 0x9a95:
case 0x9a96:
case 0x9a97:
case 0x9c90:
case 0x9c91:
case 0x9c92:
case 0x9c93:
case 0x9c94:
case 0x9c95:
case 0x9c96:
case 0x9c97:
case 0x9e90:
case 0x9e91:
case 0x9e92:
case 0x9e93:
case 0x9e94:
case 0x9e95:
case 0x9e96:
case 0x9e97:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2050:
case 0x2051:
case 0x2052:
case 0x2053:
case 0x2054:
case 0x2055:
case 0x2056:
case 0x2057:
case 0x2250:
case 0x2251:
case 0x2252:
case 0x2253:
case 0x2254:
case 0x2255:
case 0x2256:
case 0x2257:
case 0x2450:
case 0x2451:
case 0x2452:
case 0x2453:
case 0x2454:
case 0x2455:
case 0x2456:
case 0x2457:
case 0x2650:
case 0x2651:
case 0x2652:
case 0x2653:
case 0x2654:
case 0x2655:
case 0x2656:
case 0x2657:
case 0x2850:
case 0x2851:
case 0x2852:
case 0x2853:
case 0x2854:
case 0x2855:
case 0x2856:
case 0x2857:
case 0x2a50:
case 0x2a51:
case 0x2a52:
case 0x2a53:
case 0x2a54:
case 0x2a55:
case 0x2a56:
case 0x2a57:
case 0x2c50:
case 0x2c51:
case 0x2c52:
case 0x2c53:
case 0x2c54:
case 0x2c55:
case 0x2c56:
case 0x2c57:
case 0x2e50:
case 0x2e51:
case 0x2e52:
case 0x2e53:
case 0x2e54:
case 0x2e55:
case 0x2e56:
case 0x2e57:
	{
	 HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x42a8:
case 0x42a9:
case 0x42aa:
case 0x42ab:
case 0x42ac:
case 0x42ad:
case 0x42ae:
case 0x42af:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x44a8:
case 0x44a9:
case 0x44aa:
case 0x44ab:
case 0x44ac:
case 0x44ad:
case 0x44ae:
case 0x44af:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x40a8:
case 0x40a9:
case 0x40aa:
case 0x40ab:
case 0x40ac:
case 0x40ad:
case 0x40ae:
case 0x40af:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x46a8:
case 0x46a9:
case 0x46aa:
case 0x46ab:
case 0x46ac:
case 0x46ad:
case 0x46ae:
case 0x46af:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4aa8:
case 0x4aa9:
case 0x4aaa:
case 0x4aab:
case 0x4aac:
case 0x4aad:
case 0x4aae:
case 0x4aaf:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x23e8:
case 0x23e9:
case 0x23ea:
case 0x23eb:
case 0x23ec:
case 0x23ed:
case 0x23ee:
case 0x23ef:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21e8:
case 0x21e9:
case 0x21ea:
case 0x21eb:
case 0x21ec:
case 0x21ed:
case 0x21ee:
case 0x21ef:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1e8:
case 0xd1e9:
case 0xd1ea:
case 0xd1eb:
case 0xd1ec:
case 0xd1ed:
case 0xd1ee:
case 0xd1ef:
case 0xd3e8:
case 0xd3e9:
case 0xd3ea:
case 0xd3eb:
case 0xd3ec:
case 0xd3ed:
case 0xd3ee:
case 0xd3ef:
case 0xd5e8:
case 0xd5e9:
case 0xd5ea:
case 0xd5eb:
case 0xd5ec:
case 0xd5ed:
case 0xd5ee:
case 0xd5ef:
case 0xd7e8:
case 0xd7e9:
case 0xd7ea:
case 0xd7eb:
case 0xd7ec:
case 0xd7ed:
case 0xd7ee:
case 0xd7ef:
case 0xd9e8:
case 0xd9e9:
case 0xd9ea:
case 0xd9eb:
case 0xd9ec:
case 0xd9ed:
case 0xd9ee:
case 0xd9ef:
case 0xdbe8:
case 0xdbe9:
case 0xdbea:
case 0xdbeb:
case 0xdbec:
case 0xdbed:
case 0xdbee:
case 0xdbef:
case 0xdde8:
case 0xdde9:
case 0xddea:
case 0xddeb:
case 0xddec:
case 0xdded:
case 0xddee:
case 0xddef:
case 0xdfe8:
case 0xdfe9:
case 0xdfea:
case 0xdfeb:
case 0xdfec:
case 0xdfed:
case 0xdfee:
case 0xdfef:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1e8:
case 0xb1e9:
case 0xb1ea:
case 0xb1eb:
case 0xb1ec:
case 0xb1ed:
case 0xb1ee:
case 0xb1ef:
case 0xb3e8:
case 0xb3e9:
case 0xb3ea:
case 0xb3eb:
case 0xb3ec:
case 0xb3ed:
case 0xb3ee:
case 0xb3ef:
case 0xb5e8:
case 0xb5e9:
case 0xb5ea:
case 0xb5eb:
case 0xb5ec:
case 0xb5ed:
case 0xb5ee:
case 0xb5ef:
case 0xb7e8:
case 0xb7e9:
case 0xb7ea:
case 0xb7eb:
case 0xb7ec:
case 0xb7ed:
case 0xb7ee:
case 0xb7ef:
case 0xb9e8:
case 0xb9e9:
case 0xb9ea:
case 0xb9eb:
case 0xb9ec:
case 0xb9ed:
case 0xb9ee:
case 0xb9ef:
case 0xbbe8:
case 0xbbe9:
case 0xbbea:
case 0xbbeb:
case 0xbbec:
case 0xbbed:
case 0xbbee:
case 0xbbef:
case 0xbde8:
case 0xbde9:
case 0xbdea:
case 0xbdeb:
case 0xbdec:
case 0xbded:
case 0xbdee:
case 0xbdef:
case 0xbfe8:
case 0xbfe9:
case 0xbfea:
case 0xbfeb:
case 0xbfec:
case 0xbfed:
case 0xbfee:
case 0xbfef:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91e8:
case 0x91e9:
case 0x91ea:
case 0x91eb:
case 0x91ec:
case 0x91ed:
case 0x91ee:
case 0x91ef:
case 0x93e8:
case 0x93e9:
case 0x93ea:
case 0x93eb:
case 0x93ec:
case 0x93ed:
case 0x93ee:
case 0x93ef:
case 0x95e8:
case 0x95e9:
case 0x95ea:
case 0x95eb:
case 0x95ec:
case 0x95ed:
case 0x95ee:
case 0x95ef:
case 0x97e8:
case 0x97e9:
case 0x97ea:
case 0x97eb:
case 0x97ec:
case 0x97ed:
case 0x97ee:
case 0x97ef:
case 0x99e8:
case 0x99e9:
case 0x99ea:
case 0x99eb:
case 0x99ec:
case 0x99ed:
case 0x99ee:
case 0x99ef:
case 0x9be8:
case 0x9be9:
case 0x9bea:
case 0x9beb:
case 0x9bec:
case 0x9bed:
case 0x9bee:
case 0x9bef:
case 0x9de8:
case 0x9de9:
case 0x9dea:
case 0x9deb:
case 0x9dec:
case 0x9ded:
case 0x9dee:
case 0x9def:
case 0x9fe8:
case 0x9fe9:
case 0x9fea:
case 0x9feb:
case 0x9fec:
case 0x9fed:
case 0x9fee:
case 0x9fef:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x20a8:
case 0x20a9:
case 0x20aa:
case 0x20ab:
case 0x20ac:
case 0x20ad:
case 0x20ae:
case 0x20af:
case 0x22a8:
case 0x22a9:
case 0x22aa:
case 0x22ab:
case 0x22ac:
case 0x22ad:
case 0x22ae:
case 0x22af:
case 0x24a8:
case 0x24a9:
case 0x24aa:
case 0x24ab:
case 0x24ac:
case 0x24ad:
case 0x24ae:
case 0x24af:
case 0x26a8:
case 0x26a9:
case 0x26aa:
case 0x26ab:
case 0x26ac:
case 0x26ad:
case 0x26ae:
case 0x26af:
case 0x28a8:
case 0x28a9:
case 0x28aa:
case 0x28ab:
case 0x28ac:
case 0x28ad:
case 0x28ae:
case 0x28af:
case 0x2aa8:
case 0x2aa9:
case 0x2aaa:
case 0x2aab:
case 0x2aac:
case 0x2aad:
case 0x2aae:
case 0x2aaf:
case 0x2ca8:
case 0x2ca9:
case 0x2caa:
case 0x2cab:
case 0x2cac:
case 0x2cad:
case 0x2cae:
case 0x2caf:
case 0x2ea8:
case 0x2ea9:
case 0x2eaa:
case 0x2eab:
case 0x2eac:
case 0x2ead:
case 0x2eae:
case 0x2eaf:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2168:
case 0x2169:
case 0x216a:
case 0x216b:
case 0x216c:
case 0x216d:
case 0x216e:
case 0x216f:
case 0x2368:
case 0x2369:
case 0x236a:
case 0x236b:
case 0x236c:
case 0x236d:
case 0x236e:
case 0x236f:
case 0x2568:
case 0x2569:
case 0x256a:
case 0x256b:
case 0x256c:
case 0x256d:
case 0x256e:
case 0x256f:
case 0x2768:
case 0x2769:
case 0x276a:
case 0x276b:
case 0x276c:
case 0x276d:
case 0x276e:
case 0x276f:
case 0x2968:
case 0x2969:
case 0x296a:
case 0x296b:
case 0x296c:
case 0x296d:
case 0x296e:
case 0x296f:
case 0x2b68:
case 0x2b69:
case 0x2b6a:
case 0x2b6b:
case 0x2b6c:
case 0x2b6d:
case 0x2b6e:
case 0x2b6f:
case 0x2d68:
case 0x2d69:
case 0x2d6a:
case 0x2d6b:
case 0x2d6c:
case 0x2d6d:
case 0x2d6e:
case 0x2d6f:
case 0x2f68:
case 0x2f69:
case 0x2f6a:
case 0x2f6b:
case 0x2f6c:
case 0x2f6d:
case 0x2f6e:
case 0x2f6f:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x21a8:
case 0x21a9:
case 0x21aa:
case 0x21ab:
case 0x21ac:
case 0x21ad:
case 0x21ae:
case 0x21af:
case 0x23a8:
case 0x23a9:
case 0x23aa:
case 0x23ab:
case 0x23ac:
case 0x23ad:
case 0x23ae:
case 0x23af:
case 0x25a8:
case 0x25a9:
case 0x25aa:
case 0x25ab:
case 0x25ac:
case 0x25ad:
case 0x25ae:
case 0x25af:
case 0x27a8:
case 0x27a9:
case 0x27aa:
case 0x27ab:
case 0x27ac:
case 0x27ad:
case 0x27ae:
case 0x27af:
case 0x29a8:
case 0x29a9:
case 0x29aa:
case 0x29ab:
case 0x29ac:
case 0x29ad:
case 0x29ae:
case 0x29af:
case 0x2ba8:
case 0x2ba9:
case 0x2baa:
case 0x2bab:
case 0x2bac:
case 0x2bad:
case 0x2bae:
case 0x2baf:
case 0x2da8:
case 0x2da9:
case 0x2daa:
case 0x2dab:
case 0x2dac:
case 0x2dad:
case 0x2dae:
case 0x2daf:
case 0x2fa8:
case 0x2fa9:
case 0x2faa:
case 0x2fab:
case 0x2fac:
case 0x2fad:
case 0x2fae:
case 0x2faf:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20e8:
case 0x20e9:
case 0x20ea:
case 0x20eb:
case 0x20ec:
case 0x20ed:
case 0x20ee:
case 0x20ef:
case 0x22e8:
case 0x22e9:
case 0x22ea:
case 0x22eb:
case 0x22ec:
case 0x22ed:
case 0x22ee:
case 0x22ef:
case 0x24e8:
case 0x24e9:
case 0x24ea:
case 0x24eb:
case 0x24ec:
case 0x24ed:
case 0x24ee:
case 0x24ef:
case 0x26e8:
case 0x26e9:
case 0x26ea:
case 0x26eb:
case 0x26ec:
case 0x26ed:
case 0x26ee:
case 0x26ef:
case 0x28e8:
case 0x28e9:
case 0x28ea:
case 0x28eb:
case 0x28ec:
case 0x28ed:
case 0x28ee:
case 0x28ef:
case 0x2ae8:
case 0x2ae9:
case 0x2aea:
case 0x2aeb:
case 0x2aec:
case 0x2aed:
case 0x2aee:
case 0x2aef:
case 0x2ce8:
case 0x2ce9:
case 0x2cea:
case 0x2ceb:
case 0x2cec:
case 0x2ced:
case 0x2cee:
case 0x2cef:
case 0x2ee8:
case 0x2ee9:
case 0x2eea:
case 0x2eeb:
case 0x2eec:
case 0x2eed:
case 0x2eee:
case 0x2eef:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2128:
case 0x2129:
case 0x212a:
case 0x212b:
case 0x212c:
case 0x212d:
case 0x212e:
case 0x212f:
case 0x2328:
case 0x2329:
case 0x232a:
case 0x232b:
case 0x232c:
case 0x232d:
case 0x232e:
case 0x232f:
case 0x2528:
case 0x2529:
case 0x252a:
case 0x252b:
case 0x252c:
case 0x252d:
case 0x252e:
case 0x252f:
case 0x2728:
case 0x2729:
case 0x272a:
case 0x272b:
case 0x272c:
case 0x272d:
case 0x272e:
case 0x272f:
case 0x2928:
case 0x2929:
case 0x292a:
case 0x292b:
case 0x292c:
case 0x292d:
case 0x292e:
case 0x292f:
case 0x2b28:
case 0x2b29:
case 0x2b2a:
case 0x2b2b:
case 0x2b2c:
case 0x2b2d:
case 0x2b2e:
case 0x2b2f:
case 0x2d28:
case 0x2d29:
case 0x2d2a:
case 0x2d2b:
case 0x2d2c:
case 0x2d2d:
case 0x2d2e:
case 0x2d2f:
case 0x2f28:
case 0x2f29:
case 0x2f2a:
case 0x2f2b:
case 0x2f2c:
case 0x2f2d:
case 0x2f2e:
case 0x2f2f:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd0a8:
case 0xd0a9:
case 0xd0aa:
case 0xd0ab:
case 0xd0ac:
case 0xd0ad:
case 0xd0ae:
case 0xd0af:
case 0xd2a8:
case 0xd2a9:
case 0xd2aa:
case 0xd2ab:
case 0xd2ac:
case 0xd2ad:
case 0xd2ae:
case 0xd2af:
case 0xd4a8:
case 0xd4a9:
case 0xd4aa:
case 0xd4ab:
case 0xd4ac:
case 0xd4ad:
case 0xd4ae:
case 0xd4af:
case 0xd6a8:
case 0xd6a9:
case 0xd6aa:
case 0xd6ab:
case 0xd6ac:
case 0xd6ad:
case 0xd6ae:
case 0xd6af:
case 0xd8a8:
case 0xd8a9:
case 0xd8aa:
case 0xd8ab:
case 0xd8ac:
case 0xd8ad:
case 0xd8ae:
case 0xd8af:
case 0xdaa8:
case 0xdaa9:
case 0xdaaa:
case 0xdaab:
case 0xdaac:
case 0xdaad:
case 0xdaae:
case 0xdaaf:
case 0xdca8:
case 0xdca9:
case 0xdcaa:
case 0xdcab:
case 0xdcac:
case 0xdcad:
case 0xdcae:
case 0xdcaf:
case 0xdea8:
case 0xdea9:
case 0xdeaa:
case 0xdeab:
case 0xdeac:
case 0xdead:
case 0xdeae:
case 0xdeaf:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc0a8:
case 0xc0a9:
case 0xc0aa:
case 0xc0ab:
case 0xc0ac:
case 0xc0ad:
case 0xc0ae:
case 0xc0af:
case 0xc2a8:
case 0xc2a9:
case 0xc2aa:
case 0xc2ab:
case 0xc2ac:
case 0xc2ad:
case 0xc2ae:
case 0xc2af:
case 0xc4a8:
case 0xc4a9:
case 0xc4aa:
case 0xc4ab:
case 0xc4ac:
case 0xc4ad:
case 0xc4ae:
case 0xc4af:
case 0xc6a8:
case 0xc6a9:
case 0xc6aa:
case 0xc6ab:
case 0xc6ac:
case 0xc6ad:
case 0xc6ae:
case 0xc6af:
case 0xc8a8:
case 0xc8a9:
case 0xc8aa:
case 0xc8ab:
case 0xc8ac:
case 0xc8ad:
case 0xc8ae:
case 0xc8af:
case 0xcaa8:
case 0xcaa9:
case 0xcaaa:
case 0xcaab:
case 0xcaac:
case 0xcaad:
case 0xcaae:
case 0xcaaf:
case 0xcca8:
case 0xcca9:
case 0xccaa:
case 0xccab:
case 0xccac:
case 0xccad:
case 0xccae:
case 0xccaf:
case 0xcea8:
case 0xcea9:
case 0xceaa:
case 0xceab:
case 0xceac:
case 0xcead:
case 0xceae:
case 0xceaf:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb0a8:
case 0xb0a9:
case 0xb0aa:
case 0xb0ab:
case 0xb0ac:
case 0xb0ad:
case 0xb0ae:
case 0xb0af:
case 0xb2a8:
case 0xb2a9:
case 0xb2aa:
case 0xb2ab:
case 0xb2ac:
case 0xb2ad:
case 0xb2ae:
case 0xb2af:
case 0xb4a8:
case 0xb4a9:
case 0xb4aa:
case 0xb4ab:
case 0xb4ac:
case 0xb4ad:
case 0xb4ae:
case 0xb4af:
case 0xb6a8:
case 0xb6a9:
case 0xb6aa:
case 0xb6ab:
case 0xb6ac:
case 0xb6ad:
case 0xb6ae:
case 0xb6af:
case 0xb8a8:
case 0xb8a9:
case 0xb8aa:
case 0xb8ab:
case 0xb8ac:
case 0xb8ad:
case 0xb8ae:
case 0xb8af:
case 0xbaa8:
case 0xbaa9:
case 0xbaaa:
case 0xbaab:
case 0xbaac:
case 0xbaad:
case 0xbaae:
case 0xbaaf:
case 0xbca8:
case 0xbca9:
case 0xbcaa:
case 0xbcab:
case 0xbcac:
case 0xbcad:
case 0xbcae:
case 0xbcaf:
case 0xbea8:
case 0xbea9:
case 0xbeaa:
case 0xbeab:
case 0xbeac:
case 0xbead:
case 0xbeae:
case 0xbeaf:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x2028:
case 0x2029:
case 0x202a:
case 0x202b:
case 0x202c:
case 0x202d:
case 0x202e:
case 0x202f:
case 0x2228:
case 0x2229:
case 0x222a:
case 0x222b:
case 0x222c:
case 0x222d:
case 0x222e:
case 0x222f:
case 0x2428:
case 0x2429:
case 0x242a:
case 0x242b:
case 0x242c:
case 0x242d:
case 0x242e:
case 0x242f:
case 0x2628:
case 0x2629:
case 0x262a:
case 0x262b:
case 0x262c:
case 0x262d:
case 0x262e:
case 0x262f:
case 0x2828:
case 0x2829:
case 0x282a:
case 0x282b:
case 0x282c:
case 0x282d:
case 0x282e:
case 0x282f:
case 0x2a28:
case 0x2a29:
case 0x2a2a:
case 0x2a2b:
case 0x2a2c:
case 0x2a2d:
case 0x2a2e:
case 0x2a2f:
case 0x2c28:
case 0x2c29:
case 0x2c2a:
case 0x2c2b:
case 0x2c2c:
case 0x2c2d:
case 0x2c2e:
case 0x2c2f:
case 0x2e28:
case 0x2e29:
case 0x2e2a:
case 0x2e2b:
case 0x2e2c:
case 0x2e2d:
case 0x2e2e:
case 0x2e2f:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x80a8:
case 0x80a9:
case 0x80aa:
case 0x80ab:
case 0x80ac:
case 0x80ad:
case 0x80ae:
case 0x80af:
case 0x82a8:
case 0x82a9:
case 0x82aa:
case 0x82ab:
case 0x82ac:
case 0x82ad:
case 0x82ae:
case 0x82af:
case 0x84a8:
case 0x84a9:
case 0x84aa:
case 0x84ab:
case 0x84ac:
case 0x84ad:
case 0x84ae:
case 0x84af:
case 0x86a8:
case 0x86a9:
case 0x86aa:
case 0x86ab:
case 0x86ac:
case 0x86ad:
case 0x86ae:
case 0x86af:
case 0x88a8:
case 0x88a9:
case 0x88aa:
case 0x88ab:
case 0x88ac:
case 0x88ad:
case 0x88ae:
case 0x88af:
case 0x8aa8:
case 0x8aa9:
case 0x8aaa:
case 0x8aab:
case 0x8aac:
case 0x8aad:
case 0x8aae:
case 0x8aaf:
case 0x8ca8:
case 0x8ca9:
case 0x8caa:
case 0x8cab:
case 0x8cac:
case 0x8cad:
case 0x8cae:
case 0x8caf:
case 0x8ea8:
case 0x8ea9:
case 0x8eaa:
case 0x8eab:
case 0x8eac:
case 0x8ead:
case 0x8eae:
case 0x8eaf:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x90a8:
case 0x90a9:
case 0x90aa:
case 0x90ab:
case 0x90ac:
case 0x90ad:
case 0x90ae:
case 0x90af:
case 0x92a8:
case 0x92a9:
case 0x92aa:
case 0x92ab:
case 0x92ac:
case 0x92ad:
case 0x92ae:
case 0x92af:
case 0x94a8:
case 0x94a9:
case 0x94aa:
case 0x94ab:
case 0x94ac:
case 0x94ad:
case 0x94ae:
case 0x94af:
case 0x96a8:
case 0x96a9:
case 0x96aa:
case 0x96ab:
case 0x96ac:
case 0x96ad:
case 0x96ae:
case 0x96af:
case 0x98a8:
case 0x98a9:
case 0x98aa:
case 0x98ab:
case 0x98ac:
case 0x98ad:
case 0x98ae:
case 0x98af:
case 0x9aa8:
case 0x9aa9:
case 0x9aaa:
case 0x9aab:
case 0x9aac:
case 0x9aad:
case 0x9aae:
case 0x9aaf:
case 0x9ca8:
case 0x9ca9:
case 0x9caa:
case 0x9cab:
case 0x9cac:
case 0x9cad:
case 0x9cae:
case 0x9caf:
case 0x9ea8:
case 0x9ea9:
case 0x9eaa:
case 0x9eab:
case 0x9eac:
case 0x9ead:
case 0x9eae:
case 0x9eaf:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2068:
case 0x2069:
case 0x206a:
case 0x206b:
case 0x206c:
case 0x206d:
case 0x206e:
case 0x206f:
case 0x2268:
case 0x2269:
case 0x226a:
case 0x226b:
case 0x226c:
case 0x226d:
case 0x226e:
case 0x226f:
case 0x2468:
case 0x2469:
case 0x246a:
case 0x246b:
case 0x246c:
case 0x246d:
case 0x246e:
case 0x246f:
case 0x2668:
case 0x2669:
case 0x266a:
case 0x266b:
case 0x266c:
case 0x266d:
case 0x266e:
case 0x266f:
case 0x2868:
case 0x2869:
case 0x286a:
case 0x286b:
case 0x286c:
case 0x286d:
case 0x286e:
case 0x286f:
case 0x2a68:
case 0x2a69:
case 0x2a6a:
case 0x2a6b:
case 0x2a6c:
case 0x2a6d:
case 0x2a6e:
case 0x2a6f:
case 0x2c68:
case 0x2c69:
case 0x2c6a:
case 0x2c6b:
case 0x2c6c:
case 0x2c6d:
case 0x2c6e:
case 0x2c6f:
case 0x2e68:
case 0x2e69:
case 0x2e6a:
case 0x2e6b:
case 0x2e6c:
case 0x2e6d:
case 0x2e6e:
case 0x2e6f:
	{
	 HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x42b0:
case 0x42b1:
case 0x42b2:
case 0x42b3:
case 0x42b4:
case 0x42b5:
case 0x42b6:
case 0x42b7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x44b0:
case 0x44b1:
case 0x44b2:
case 0x44b3:
case 0x44b4:
case 0x44b5:
case 0x44b6:
case 0x44b7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x40b0:
case 0x40b1:
case 0x40b2:
case 0x40b3:
case 0x40b4:
case 0x40b5:
case 0x40b6:
case 0x40b7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x46b0:
case 0x46b1:
case 0x46b2:
case 0x46b3:
case 0x46b4:
case 0x46b5:
case 0x46b6:
case 0x46b7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4ab0:
case 0x4ab1:
case 0x4ab2:
case 0x4ab3:
case 0x4ab4:
case 0x4ab5:
case 0x4ab6:
case 0x4ab7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x23f0:
case 0x23f1:
case 0x23f2:
case 0x23f3:
case 0x23f4:
case 0x23f5:
case 0x23f6:
case 0x23f7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21f0:
case 0x21f1:
case 0x21f2:
case 0x21f3:
case 0x21f4:
case 0x21f5:
case 0x21f6:
case 0x21f7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1f0:
case 0xd1f1:
case 0xd1f2:
case 0xd1f3:
case 0xd1f4:
case 0xd1f5:
case 0xd1f6:
case 0xd1f7:
case 0xd3f0:
case 0xd3f1:
case 0xd3f2:
case 0xd3f3:
case 0xd3f4:
case 0xd3f5:
case 0xd3f6:
case 0xd3f7:
case 0xd5f0:
case 0xd5f1:
case 0xd5f2:
case 0xd5f3:
case 0xd5f4:
case 0xd5f5:
case 0xd5f6:
case 0xd5f7:
case 0xd7f0:
case 0xd7f1:
case 0xd7f2:
case 0xd7f3:
case 0xd7f4:
case 0xd7f5:
case 0xd7f6:
case 0xd7f7:
case 0xd9f0:
case 0xd9f1:
case 0xd9f2:
case 0xd9f3:
case 0xd9f4:
case 0xd9f5:
case 0xd9f6:
case 0xd9f7:
case 0xdbf0:
case 0xdbf1:
case 0xdbf2:
case 0xdbf3:
case 0xdbf4:
case 0xdbf5:
case 0xdbf6:
case 0xdbf7:
case 0xddf0:
case 0xddf1:
case 0xddf2:
case 0xddf3:
case 0xddf4:
case 0xddf5:
case 0xddf6:
case 0xddf7:
case 0xdff0:
case 0xdff1:
case 0xdff2:
case 0xdff3:
case 0xdff4:
case 0xdff5:
case 0xdff6:
case 0xdff7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1f0:
case 0xb1f1:
case 0xb1f2:
case 0xb1f3:
case 0xb1f4:
case 0xb1f5:
case 0xb1f6:
case 0xb1f7:
case 0xb3f0:
case 0xb3f1:
case 0xb3f2:
case 0xb3f3:
case 0xb3f4:
case 0xb3f5:
case 0xb3f6:
case 0xb3f7:
case 0xb5f0:
case 0xb5f1:
case 0xb5f2:
case 0xb5f3:
case 0xb5f4:
case 0xb5f5:
case 0xb5f6:
case 0xb5f7:
case 0xb7f0:
case 0xb7f1:
case 0xb7f2:
case 0xb7f3:
case 0xb7f4:
case 0xb7f5:
case 0xb7f6:
case 0xb7f7:
case 0xb9f0:
case 0xb9f1:
case 0xb9f2:
case 0xb9f3:
case 0xb9f4:
case 0xb9f5:
case 0xb9f6:
case 0xb9f7:
case 0xbbf0:
case 0xbbf1:
case 0xbbf2:
case 0xbbf3:
case 0xbbf4:
case 0xbbf5:
case 0xbbf6:
case 0xbbf7:
case 0xbdf0:
case 0xbdf1:
case 0xbdf2:
case 0xbdf3:
case 0xbdf4:
case 0xbdf5:
case 0xbdf6:
case 0xbdf7:
case 0xbff0:
case 0xbff1:
case 0xbff2:
case 0xbff3:
case 0xbff4:
case 0xbff5:
case 0xbff6:
case 0xbff7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91f0:
case 0x91f1:
case 0x91f2:
case 0x91f3:
case 0x91f4:
case 0x91f5:
case 0x91f6:
case 0x91f7:
case 0x93f0:
case 0x93f1:
case 0x93f2:
case 0x93f3:
case 0x93f4:
case 0x93f5:
case 0x93f6:
case 0x93f7:
case 0x95f0:
case 0x95f1:
case 0x95f2:
case 0x95f3:
case 0x95f4:
case 0x95f5:
case 0x95f6:
case 0x95f7:
case 0x97f0:
case 0x97f1:
case 0x97f2:
case 0x97f3:
case 0x97f4:
case 0x97f5:
case 0x97f6:
case 0x97f7:
case 0x99f0:
case 0x99f1:
case 0x99f2:
case 0x99f3:
case 0x99f4:
case 0x99f5:
case 0x99f6:
case 0x99f7:
case 0x9bf0:
case 0x9bf1:
case 0x9bf2:
case 0x9bf3:
case 0x9bf4:
case 0x9bf5:
case 0x9bf6:
case 0x9bf7:
case 0x9df0:
case 0x9df1:
case 0x9df2:
case 0x9df3:
case 0x9df4:
case 0x9df5:
case 0x9df6:
case 0x9df7:
case 0x9ff0:
case 0x9ff1:
case 0x9ff2:
case 0x9ff3:
case 0x9ff4:
case 0x9ff5:
case 0x9ff6:
case 0x9ff7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x20b0:
case 0x20b1:
case 0x20b2:
case 0x20b3:
case 0x20b4:
case 0x20b5:
case 0x20b6:
case 0x20b7:
case 0x22b0:
case 0x22b1:
case 0x22b2:
case 0x22b3:
case 0x22b4:
case 0x22b5:
case 0x22b6:
case 0x22b7:
case 0x24b0:
case 0x24b1:
case 0x24b2:
case 0x24b3:
case 0x24b4:
case 0x24b5:
case 0x24b6:
case 0x24b7:
case 0x26b0:
case 0x26b1:
case 0x26b2:
case 0x26b3:
case 0x26b4:
case 0x26b5:
case 0x26b6:
case 0x26b7:
case 0x28b0:
case 0x28b1:
case 0x28b2:
case 0x28b3:
case 0x28b4:
case 0x28b5:
case 0x28b6:
case 0x28b7:
case 0x2ab0:
case 0x2ab1:
case 0x2ab2:
case 0x2ab3:
case 0x2ab4:
case 0x2ab5:
case 0x2ab6:
case 0x2ab7:
case 0x2cb0:
case 0x2cb1:
case 0x2cb2:
case 0x2cb3:
case 0x2cb4:
case 0x2cb5:
case 0x2cb6:
case 0x2cb7:
case 0x2eb0:
case 0x2eb1:
case 0x2eb2:
case 0x2eb3:
case 0x2eb4:
case 0x2eb5:
case 0x2eb6:
case 0x2eb7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2170:
case 0x2171:
case 0x2172:
case 0x2173:
case 0x2174:
case 0x2175:
case 0x2176:
case 0x2177:
case 0x2370:
case 0x2371:
case 0x2372:
case 0x2373:
case 0x2374:
case 0x2375:
case 0x2376:
case 0x2377:
case 0x2570:
case 0x2571:
case 0x2572:
case 0x2573:
case 0x2574:
case 0x2575:
case 0x2576:
case 0x2577:
case 0x2770:
case 0x2771:
case 0x2772:
case 0x2773:
case 0x2774:
case 0x2775:
case 0x2776:
case 0x2777:
case 0x2970:
case 0x2971:
case 0x2972:
case 0x2973:
case 0x2974:
case 0x2975:
case 0x2976:
case 0x2977:
case 0x2b70:
case 0x2b71:
case 0x2b72:
case 0x2b73:
case 0x2b74:
case 0x2b75:
case 0x2b76:
case 0x2b77:
case 0x2d70:
case 0x2d71:
case 0x2d72:
case 0x2d73:
case 0x2d74:
case 0x2d75:
case 0x2d76:
case 0x2d77:
case 0x2f70:
case 0x2f71:
case 0x2f72:
case 0x2f73:
case 0x2f74:
case 0x2f75:
case 0x2f76:
case 0x2f77:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x21b0:
case 0x21b1:
case 0x21b2:
case 0x21b3:
case 0x21b4:
case 0x21b5:
case 0x21b6:
case 0x21b7:
case 0x23b0:
case 0x23b1:
case 0x23b2:
case 0x23b3:
case 0x23b4:
case 0x23b5:
case 0x23b6:
case 0x23b7:
case 0x25b0:
case 0x25b1:
case 0x25b2:
case 0x25b3:
case 0x25b4:
case 0x25b5:
case 0x25b6:
case 0x25b7:
case 0x27b0:
case 0x27b1:
case 0x27b2:
case 0x27b3:
case 0x27b4:
case 0x27b5:
case 0x27b6:
case 0x27b7:
case 0x29b0:
case 0x29b1:
case 0x29b2:
case 0x29b3:
case 0x29b4:
case 0x29b5:
case 0x29b6:
case 0x29b7:
case 0x2bb0:
case 0x2bb1:
case 0x2bb2:
case 0x2bb3:
case 0x2bb4:
case 0x2bb5:
case 0x2bb6:
case 0x2bb7:
case 0x2db0:
case 0x2db1:
case 0x2db2:
case 0x2db3:
case 0x2db4:
case 0x2db5:
case 0x2db6:
case 0x2db7:
case 0x2fb0:
case 0x2fb1:
case 0x2fb2:
case 0x2fb3:
case 0x2fb4:
case 0x2fb5:
case 0x2fb6:
case 0x2fb7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20f0:
case 0x20f1:
case 0x20f2:
case 0x20f3:
case 0x20f4:
case 0x20f5:
case 0x20f6:
case 0x20f7:
case 0x22f0:
case 0x22f1:
case 0x22f2:
case 0x22f3:
case 0x22f4:
case 0x22f5:
case 0x22f6:
case 0x22f7:
case 0x24f0:
case 0x24f1:
case 0x24f2:
case 0x24f3:
case 0x24f4:
case 0x24f5:
case 0x24f6:
case 0x24f7:
case 0x26f0:
case 0x26f1:
case 0x26f2:
case 0x26f3:
case 0x26f4:
case 0x26f5:
case 0x26f6:
case 0x26f7:
case 0x28f0:
case 0x28f1:
case 0x28f2:
case 0x28f3:
case 0x28f4:
case 0x28f5:
case 0x28f6:
case 0x28f7:
case 0x2af0:
case 0x2af1:
case 0x2af2:
case 0x2af3:
case 0x2af4:
case 0x2af5:
case 0x2af6:
case 0x2af7:
case 0x2cf0:
case 0x2cf1:
case 0x2cf2:
case 0x2cf3:
case 0x2cf4:
case 0x2cf5:
case 0x2cf6:
case 0x2cf7:
case 0x2ef0:
case 0x2ef1:
case 0x2ef2:
case 0x2ef3:
case 0x2ef4:
case 0x2ef5:
case 0x2ef6:
case 0x2ef7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2130:
case 0x2131:
case 0x2132:
case 0x2133:
case 0x2134:
case 0x2135:
case 0x2136:
case 0x2137:
case 0x2330:
case 0x2331:
case 0x2332:
case 0x2333:
case 0x2334:
case 0x2335:
case 0x2336:
case 0x2337:
case 0x2530:
case 0x2531:
case 0x2532:
case 0x2533:
case 0x2534:
case 0x2535:
case 0x2536:
case 0x2537:
case 0x2730:
case 0x2731:
case 0x2732:
case 0x2733:
case 0x2734:
case 0x2735:
case 0x2736:
case 0x2737:
case 0x2930:
case 0x2931:
case 0x2932:
case 0x2933:
case 0x2934:
case 0x2935:
case 0x2936:
case 0x2937:
case 0x2b30:
case 0x2b31:
case 0x2b32:
case 0x2b33:
case 0x2b34:
case 0x2b35:
case 0x2b36:
case 0x2b37:
case 0x2d30:
case 0x2d31:
case 0x2d32:
case 0x2d33:
case 0x2d34:
case 0x2d35:
case 0x2d36:
case 0x2d37:
case 0x2f30:
case 0x2f31:
case 0x2f32:
case 0x2f33:
case 0x2f34:
case 0x2f35:
case 0x2f36:
case 0x2f37:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd0b0:
case 0xd0b1:
case 0xd0b2:
case 0xd0b3:
case 0xd0b4:
case 0xd0b5:
case 0xd0b6:
case 0xd0b7:
case 0xd2b0:
case 0xd2b1:
case 0xd2b2:
case 0xd2b3:
case 0xd2b4:
case 0xd2b5:
case 0xd2b6:
case 0xd2b7:
case 0xd4b0:
case 0xd4b1:
case 0xd4b2:
case 0xd4b3:
case 0xd4b4:
case 0xd4b5:
case 0xd4b6:
case 0xd4b7:
case 0xd6b0:
case 0xd6b1:
case 0xd6b2:
case 0xd6b3:
case 0xd6b4:
case 0xd6b5:
case 0xd6b6:
case 0xd6b7:
case 0xd8b0:
case 0xd8b1:
case 0xd8b2:
case 0xd8b3:
case 0xd8b4:
case 0xd8b5:
case 0xd8b6:
case 0xd8b7:
case 0xdab0:
case 0xdab1:
case 0xdab2:
case 0xdab3:
case 0xdab4:
case 0xdab5:
case 0xdab6:
case 0xdab7:
case 0xdcb0:
case 0xdcb1:
case 0xdcb2:
case 0xdcb3:
case 0xdcb4:
case 0xdcb5:
case 0xdcb6:
case 0xdcb7:
case 0xdeb0:
case 0xdeb1:
case 0xdeb2:
case 0xdeb3:
case 0xdeb4:
case 0xdeb5:
case 0xdeb6:
case 0xdeb7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc0b0:
case 0xc0b1:
case 0xc0b2:
case 0xc0b3:
case 0xc0b4:
case 0xc0b5:
case 0xc0b6:
case 0xc0b7:
case 0xc2b0:
case 0xc2b1:
case 0xc2b2:
case 0xc2b3:
case 0xc2b4:
case 0xc2b5:
case 0xc2b6:
case 0xc2b7:
case 0xc4b0:
case 0xc4b1:
case 0xc4b2:
case 0xc4b3:
case 0xc4b4:
case 0xc4b5:
case 0xc4b6:
case 0xc4b7:
case 0xc6b0:
case 0xc6b1:
case 0xc6b2:
case 0xc6b3:
case 0xc6b4:
case 0xc6b5:
case 0xc6b6:
case 0xc6b7:
case 0xc8b0:
case 0xc8b1:
case 0xc8b2:
case 0xc8b3:
case 0xc8b4:
case 0xc8b5:
case 0xc8b6:
case 0xc8b7:
case 0xcab0:
case 0xcab1:
case 0xcab2:
case 0xcab3:
case 0xcab4:
case 0xcab5:
case 0xcab6:
case 0xcab7:
case 0xccb0:
case 0xccb1:
case 0xccb2:
case 0xccb3:
case 0xccb4:
case 0xccb5:
case 0xccb6:
case 0xccb7:
case 0xceb0:
case 0xceb1:
case 0xceb2:
case 0xceb3:
case 0xceb4:
case 0xceb5:
case 0xceb6:
case 0xceb7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb0b0:
case 0xb0b1:
case 0xb0b2:
case 0xb0b3:
case 0xb0b4:
case 0xb0b5:
case 0xb0b6:
case 0xb0b7:
case 0xb2b0:
case 0xb2b1:
case 0xb2b2:
case 0xb2b3:
case 0xb2b4:
case 0xb2b5:
case 0xb2b6:
case 0xb2b7:
case 0xb4b0:
case 0xb4b1:
case 0xb4b2:
case 0xb4b3:
case 0xb4b4:
case 0xb4b5:
case 0xb4b6:
case 0xb4b7:
case 0xb6b0:
case 0xb6b1:
case 0xb6b2:
case 0xb6b3:
case 0xb6b4:
case 0xb6b5:
case 0xb6b6:
case 0xb6b7:
case 0xb8b0:
case 0xb8b1:
case 0xb8b2:
case 0xb8b3:
case 0xb8b4:
case 0xb8b5:
case 0xb8b6:
case 0xb8b7:
case 0xbab0:
case 0xbab1:
case 0xbab2:
case 0xbab3:
case 0xbab4:
case 0xbab5:
case 0xbab6:
case 0xbab7:
case 0xbcb0:
case 0xbcb1:
case 0xbcb2:
case 0xbcb3:
case 0xbcb4:
case 0xbcb5:
case 0xbcb6:
case 0xbcb7:
case 0xbeb0:
case 0xbeb1:
case 0xbeb2:
case 0xbeb3:
case 0xbeb4:
case 0xbeb5:
case 0xbeb6:
case 0xbeb7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x2030:
case 0x2031:
case 0x2032:
case 0x2033:
case 0x2034:
case 0x2035:
case 0x2036:
case 0x2037:
case 0x2230:
case 0x2231:
case 0x2232:
case 0x2233:
case 0x2234:
case 0x2235:
case 0x2236:
case 0x2237:
case 0x2430:
case 0x2431:
case 0x2432:
case 0x2433:
case 0x2434:
case 0x2435:
case 0x2436:
case 0x2437:
case 0x2630:
case 0x2631:
case 0x2632:
case 0x2633:
case 0x2634:
case 0x2635:
case 0x2636:
case 0x2637:
case 0x2830:
case 0x2831:
case 0x2832:
case 0x2833:
case 0x2834:
case 0x2835:
case 0x2836:
case 0x2837:
case 0x2a30:
case 0x2a31:
case 0x2a32:
case 0x2a33:
case 0x2a34:
case 0x2a35:
case 0x2a36:
case 0x2a37:
case 0x2c30:
case 0x2c31:
case 0x2c32:
case 0x2c33:
case 0x2c34:
case 0x2c35:
case 0x2c36:
case 0x2c37:
case 0x2e30:
case 0x2e31:
case 0x2e32:
case 0x2e33:
case 0x2e34:
case 0x2e35:
case 0x2e36:
case 0x2e37:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x80b0:
case 0x80b1:
case 0x80b2:
case 0x80b3:
case 0x80b4:
case 0x80b5:
case 0x80b6:
case 0x80b7:
case 0x82b0:
case 0x82b1:
case 0x82b2:
case 0x82b3:
case 0x82b4:
case 0x82b5:
case 0x82b6:
case 0x82b7:
case 0x84b0:
case 0x84b1:
case 0x84b2:
case 0x84b3:
case 0x84b4:
case 0x84b5:
case 0x84b6:
case 0x84b7:
case 0x86b0:
case 0x86b1:
case 0x86b2:
case 0x86b3:
case 0x86b4:
case 0x86b5:
case 0x86b6:
case 0x86b7:
case 0x88b0:
case 0x88b1:
case 0x88b2:
case 0x88b3:
case 0x88b4:
case 0x88b5:
case 0x88b6:
case 0x88b7:
case 0x8ab0:
case 0x8ab1:
case 0x8ab2:
case 0x8ab3:
case 0x8ab4:
case 0x8ab5:
case 0x8ab6:
case 0x8ab7:
case 0x8cb0:
case 0x8cb1:
case 0x8cb2:
case 0x8cb3:
case 0x8cb4:
case 0x8cb5:
case 0x8cb6:
case 0x8cb7:
case 0x8eb0:
case 0x8eb1:
case 0x8eb2:
case 0x8eb3:
case 0x8eb4:
case 0x8eb5:
case 0x8eb6:
case 0x8eb7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x90b0:
case 0x90b1:
case 0x90b2:
case 0x90b3:
case 0x90b4:
case 0x90b5:
case 0x90b6:
case 0x90b7:
case 0x92b0:
case 0x92b1:
case 0x92b2:
case 0x92b3:
case 0x92b4:
case 0x92b5:
case 0x92b6:
case 0x92b7:
case 0x94b0:
case 0x94b1:
case 0x94b2:
case 0x94b3:
case 0x94b4:
case 0x94b5:
case 0x94b6:
case 0x94b7:
case 0x96b0:
case 0x96b1:
case 0x96b2:
case 0x96b3:
case 0x96b4:
case 0x96b5:
case 0x96b6:
case 0x96b7:
case 0x98b0:
case 0x98b1:
case 0x98b2:
case 0x98b3:
case 0x98b4:
case 0x98b5:
case 0x98b6:
case 0x98b7:
case 0x9ab0:
case 0x9ab1:
case 0x9ab2:
case 0x9ab3:
case 0x9ab4:
case 0x9ab5:
case 0x9ab6:
case 0x9ab7:
case 0x9cb0:
case 0x9cb1:
case 0x9cb2:
case 0x9cb3:
case 0x9cb4:
case 0x9cb5:
case 0x9cb6:
case 0x9cb7:
case 0x9eb0:
case 0x9eb1:
case 0x9eb2:
case 0x9eb3:
case 0x9eb4:
case 0x9eb5:
case 0x9eb6:
case 0x9eb7:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2070:
case 0x2071:
case 0x2072:
case 0x2073:
case 0x2074:
case 0x2075:
case 0x2076:
case 0x2077:
case 0x2270:
case 0x2271:
case 0x2272:
case 0x2273:
case 0x2274:
case 0x2275:
case 0x2276:
case 0x2277:
case 0x2470:
case 0x2471:
case 0x2472:
case 0x2473:
case 0x2474:
case 0x2475:
case 0x2476:
case 0x2477:
case 0x2670:
case 0x2671:
case 0x2672:
case 0x2673:
case 0x2674:
case 0x2675:
case 0x2676:
case 0x2677:
case 0x2870:
case 0x2871:
case 0x2872:
case 0x2873:
case 0x2874:
case 0x2875:
case 0x2876:
case 0x2877:
case 0x2a70:
case 0x2a71:
case 0x2a72:
case 0x2a73:
case 0x2a74:
case 0x2a75:
case 0x2a76:
case 0x2a77:
case 0x2c70:
case 0x2c71:
case 0x2c72:
case 0x2c73:
case 0x2c74:
case 0x2c75:
case 0x2c76:
case 0x2c77:
case 0x2e70:
case 0x2e71:
case 0x2e72:
case 0x2e73:
case 0x2e74:
case 0x2e75:
case 0x2e76:
case 0x2e77:
	{
	 HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x4298:
case 0x4299:
case 0x429a:
case 0x429b:
case 0x429c:
case 0x429d:
case 0x429e:
case 0x429f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4498:
case 0x4499:
case 0x449a:
case 0x449b:
case 0x449c:
case 0x449d:
case 0x449e:
case 0x449f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4098:
case 0x4099:
case 0x409a:
case 0x409b:
case 0x409c:
case 0x409d:
case 0x409e:
case 0x409f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4698:
case 0x4699:
case 0x469a:
case 0x469b:
case 0x469c:
case 0x469d:
case 0x469e:
case 0x469f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4a98:
case 0x4a99:
case 0x4a9a:
case 0x4a9b:
case 0x4a9c:
case 0x4a9d:
case 0x4a9e:
case 0x4a9f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x23d8:
case 0x23d9:
case 0x23da:
case 0x23db:
case 0x23dc:
case 0x23dd:
case 0x23de:
case 0x23df:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21d8:
case 0x21d9:
case 0x21da:
case 0x21db:
case 0x21dc:
case 0x21dd:
case 0x21de:
case 0x21df:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1d8:
case 0xd1d9:
case 0xd1da:
case 0xd1db:
case 0xd1dc:
case 0xd1dd:
case 0xd1de:
case 0xd1df:
case 0xd3d8:
case 0xd3d9:
case 0xd3da:
case 0xd3db:
case 0xd3dc:
case 0xd3dd:
case 0xd3de:
case 0xd3df:
case 0xd5d8:
case 0xd5d9:
case 0xd5da:
case 0xd5db:
case 0xd5dc:
case 0xd5dd:
case 0xd5de:
case 0xd5df:
case 0xd7d8:
case 0xd7d9:
case 0xd7da:
case 0xd7db:
case 0xd7dc:
case 0xd7dd:
case 0xd7de:
case 0xd7df:
case 0xd9d8:
case 0xd9d9:
case 0xd9da:
case 0xd9db:
case 0xd9dc:
case 0xd9dd:
case 0xd9de:
case 0xd9df:
case 0xdbd8:
case 0xdbd9:
case 0xdbda:
case 0xdbdb:
case 0xdbdc:
case 0xdbdd:
case 0xdbde:
case 0xdbdf:
case 0xddd8:
case 0xddd9:
case 0xddda:
case 0xdddb:
case 0xdddc:
case 0xdddd:
case 0xddde:
case 0xdddf:
case 0xdfd8:
case 0xdfd9:
case 0xdfda:
case 0xdfdb:
case 0xdfdc:
case 0xdfdd:
case 0xdfde:
case 0xdfdf:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1d8:
case 0xb1d9:
case 0xb1da:
case 0xb1db:
case 0xb1dc:
case 0xb1dd:
case 0xb1de:
case 0xb1df:
case 0xb3d8:
case 0xb3d9:
case 0xb3da:
case 0xb3db:
case 0xb3dc:
case 0xb3dd:
case 0xb3de:
case 0xb3df:
case 0xb5d8:
case 0xb5d9:
case 0xb5da:
case 0xb5db:
case 0xb5dc:
case 0xb5dd:
case 0xb5de:
case 0xb5df:
case 0xb7d8:
case 0xb7d9:
case 0xb7da:
case 0xb7db:
case 0xb7dc:
case 0xb7dd:
case 0xb7de:
case 0xb7df:
case 0xb9d8:
case 0xb9d9:
case 0xb9da:
case 0xb9db:
case 0xb9dc:
case 0xb9dd:
case 0xb9de:
case 0xb9df:
case 0xbbd8:
case 0xbbd9:
case 0xbbda:
case 0xbbdb:
case 0xbbdc:
case 0xbbdd:
case 0xbbde:
case 0xbbdf:
case 0xbdd8:
case 0xbdd9:
case 0xbdda:
case 0xbddb:
case 0xbddc:
case 0xbddd:
case 0xbdde:
case 0xbddf:
case 0xbfd8:
case 0xbfd9:
case 0xbfda:
case 0xbfdb:
case 0xbfdc:
case 0xbfdd:
case 0xbfde:
case 0xbfdf:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91d8:
case 0x91d9:
case 0x91da:
case 0x91db:
case 0x91dc:
case 0x91dd:
case 0x91de:
case 0x91df:
case 0x93d8:
case 0x93d9:
case 0x93da:
case 0x93db:
case 0x93dc:
case 0x93dd:
case 0x93de:
case 0x93df:
case 0x95d8:
case 0x95d9:
case 0x95da:
case 0x95db:
case 0x95dc:
case 0x95dd:
case 0x95de:
case 0x95df:
case 0x97d8:
case 0x97d9:
case 0x97da:
case 0x97db:
case 0x97dc:
case 0x97dd:
case 0x97de:
case 0x97df:
case 0x99d8:
case 0x99d9:
case 0x99da:
case 0x99db:
case 0x99dc:
case 0x99dd:
case 0x99de:
case 0x99df:
case 0x9bd8:
case 0x9bd9:
case 0x9bda:
case 0x9bdb:
case 0x9bdc:
case 0x9bdd:
case 0x9bde:
case 0x9bdf:
case 0x9dd8:
case 0x9dd9:
case 0x9dda:
case 0x9ddb:
case 0x9ddc:
case 0x9ddd:
case 0x9dde:
case 0x9ddf:
case 0x9fd8:
case 0x9fd9:
case 0x9fda:
case 0x9fdb:
case 0x9fdc:
case 0x9fdd:
case 0x9fde:
case 0x9fdf:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2098:
case 0x2099:
case 0x209a:
case 0x209b:
case 0x209c:
case 0x209d:
case 0x209e:
case 0x209f:
case 0x2298:
case 0x2299:
case 0x229a:
case 0x229b:
case 0x229c:
case 0x229d:
case 0x229e:
case 0x229f:
case 0x2498:
case 0x2499:
case 0x249a:
case 0x249b:
case 0x249c:
case 0x249d:
case 0x249e:
case 0x249f:
case 0x2698:
case 0x2699:
case 0x269a:
case 0x269b:
case 0x269c:
case 0x269d:
case 0x269e:
case 0x269f:
case 0x2898:
case 0x2899:
case 0x289a:
case 0x289b:
case 0x289c:
case 0x289d:
case 0x289e:
case 0x289f:
case 0x2a98:
case 0x2a99:
case 0x2a9a:
case 0x2a9b:
case 0x2a9c:
case 0x2a9d:
case 0x2a9e:
case 0x2a9f:
case 0x2c98:
case 0x2c99:
case 0x2c9a:
case 0x2c9b:
case 0x2c9c:
case 0x2c9d:
case 0x2c9e:
case 0x2c9f:
case 0x2e98:
case 0x2e99:
case 0x2e9a:
case 0x2e9b:
case 0x2e9c:
case 0x2e9d:
case 0x2e9e:
case 0x2e9f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2158:
case 0x2159:
case 0x215a:
case 0x215b:
case 0x215c:
case 0x215d:
case 0x215e:
case 0x215f:
case 0x2358:
case 0x2359:
case 0x235a:
case 0x235b:
case 0x235c:
case 0x235d:
case 0x235e:
case 0x235f:
case 0x2558:
case 0x2559:
case 0x255a:
case 0x255b:
case 0x255c:
case 0x255d:
case 0x255e:
case 0x255f:
case 0x2758:
case 0x2759:
case 0x275a:
case 0x275b:
case 0x275c:
case 0x275d:
case 0x275e:
case 0x275f:
case 0x2958:
case 0x2959:
case 0x295a:
case 0x295b:
case 0x295c:
case 0x295d:
case 0x295e:
case 0x295f:
case 0x2b58:
case 0x2b59:
case 0x2b5a:
case 0x2b5b:
case 0x2b5c:
case 0x2b5d:
case 0x2b5e:
case 0x2b5f:
case 0x2d58:
case 0x2d59:
case 0x2d5a:
case 0x2d5b:
case 0x2d5c:
case 0x2d5d:
case 0x2d5e:
case 0x2d5f:
case 0x2f58:
case 0x2f59:
case 0x2f5a:
case 0x2f5b:
case 0x2f5c:
case 0x2f5d:
case 0x2f5e:
case 0x2f5f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2198:
case 0x2199:
case 0x219a:
case 0x219b:
case 0x219c:
case 0x219d:
case 0x219e:
case 0x219f:
case 0x2398:
case 0x2399:
case 0x239a:
case 0x239b:
case 0x239c:
case 0x239d:
case 0x239e:
case 0x239f:
case 0x2598:
case 0x2599:
case 0x259a:
case 0x259b:
case 0x259c:
case 0x259d:
case 0x259e:
case 0x259f:
case 0x2798:
case 0x2799:
case 0x279a:
case 0x279b:
case 0x279c:
case 0x279d:
case 0x279e:
case 0x279f:
case 0x2998:
case 0x2999:
case 0x299a:
case 0x299b:
case 0x299c:
case 0x299d:
case 0x299e:
case 0x299f:
case 0x2b98:
case 0x2b99:
case 0x2b9a:
case 0x2b9b:
case 0x2b9c:
case 0x2b9d:
case 0x2b9e:
case 0x2b9f:
case 0x2d98:
case 0x2d99:
case 0x2d9a:
case 0x2d9b:
case 0x2d9c:
case 0x2d9d:
case 0x2d9e:
case 0x2d9f:
case 0x2f98:
case 0x2f99:
case 0x2f9a:
case 0x2f9b:
case 0x2f9c:
case 0x2f9d:
case 0x2f9e:
case 0x2f9f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xb188:
case 0xb189:
case 0xb18a:
case 0xb18b:
case 0xb18c:
case 0xb18d:
case 0xb18e:
case 0xb18f:
case 0xb388:
case 0xb389:
case 0xb38a:
case 0xb38b:
case 0xb38c:
case 0xb38d:
case 0xb38e:
case 0xb38f:
case 0xb588:
case 0xb589:
case 0xb58a:
case 0xb58b:
case 0xb58c:
case 0xb58d:
case 0xb58e:
case 0xb58f:
case 0xb788:
case 0xb789:
case 0xb78a:
case 0xb78b:
case 0xb78c:
case 0xb78d:
case 0xb78e:
case 0xb78f:
case 0xb988:
case 0xb989:
case 0xb98a:
case 0xb98b:
case 0xb98c:
case 0xb98d:
case 0xb98e:
case 0xb98f:
case 0xbb88:
case 0xbb89:
case 0xbb8a:
case 0xbb8b:
case 0xbb8c:
case 0xbb8d:
case 0xbb8e:
case 0xbb8f:
case 0xbd88:
case 0xbd89:
case 0xbd8a:
case 0xbd8b:
case 0xbd8c:
case 0xbd8d:
case 0xbd8e:
case 0xbd8f:
case 0xbf88:
case 0xbf89:
case 0xbf8a:
case 0xbf8b:
case 0xbf8c:
case 0xbf8d:
case 0xbf8e:
case 0xbf8f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x20d8:
case 0x20d9:
case 0x20da:
case 0x20db:
case 0x20dc:
case 0x20dd:
case 0x20de:
case 0x20df:
case 0x22d8:
case 0x22d9:
case 0x22da:
case 0x22db:
case 0x22dc:
case 0x22dd:
case 0x22de:
case 0x22df:
case 0x24d8:
case 0x24d9:
case 0x24da:
case 0x24db:
case 0x24dc:
case 0x24dd:
case 0x24de:
case 0x24df:
case 0x26d8:
case 0x26d9:
case 0x26da:
case 0x26db:
case 0x26dc:
case 0x26dd:
case 0x26de:
case 0x26df:
case 0x28d8:
case 0x28d9:
case 0x28da:
case 0x28db:
case 0x28dc:
case 0x28dd:
case 0x28de:
case 0x28df:
case 0x2ad8:
case 0x2ad9:
case 0x2ada:
case 0x2adb:
case 0x2adc:
case 0x2add:
case 0x2ade:
case 0x2adf:
case 0x2cd8:
case 0x2cd9:
case 0x2cda:
case 0x2cdb:
case 0x2cdc:
case 0x2cdd:
case 0x2cde:
case 0x2cdf:
case 0x2ed8:
case 0x2ed9:
case 0x2eda:
case 0x2edb:
case 0x2edc:
case 0x2edd:
case 0x2ede:
case 0x2edf:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2118:
case 0x2119:
case 0x211a:
case 0x211b:
case 0x211c:
case 0x211d:
case 0x211e:
case 0x211f:
case 0x2318:
case 0x2319:
case 0x231a:
case 0x231b:
case 0x231c:
case 0x231d:
case 0x231e:
case 0x231f:
case 0x2518:
case 0x2519:
case 0x251a:
case 0x251b:
case 0x251c:
case 0x251d:
case 0x251e:
case 0x251f:
case 0x2718:
case 0x2719:
case 0x271a:
case 0x271b:
case 0x271c:
case 0x271d:
case 0x271e:
case 0x271f:
case 0x2918:
case 0x2919:
case 0x291a:
case 0x291b:
case 0x291c:
case 0x291d:
case 0x291e:
case 0x291f:
case 0x2b18:
case 0x2b19:
case 0x2b1a:
case 0x2b1b:
case 0x2b1c:
case 0x2b1d:
case 0x2b1e:
case 0x2b1f:
case 0x2d18:
case 0x2d19:
case 0x2d1a:
case 0x2d1b:
case 0x2d1c:
case 0x2d1d:
case 0x2d1e:
case 0x2d1f:
case 0x2f18:
case 0x2f19:
case 0x2f1a:
case 0x2f1b:
case 0x2f1c:
case 0x2f1d:
case 0x2f1e:
case 0x2f1f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd098:
case 0xd099:
case 0xd09a:
case 0xd09b:
case 0xd09c:
case 0xd09d:
case 0xd09e:
case 0xd09f:
case 0xd298:
case 0xd299:
case 0xd29a:
case 0xd29b:
case 0xd29c:
case 0xd29d:
case 0xd29e:
case 0xd29f:
case 0xd498:
case 0xd499:
case 0xd49a:
case 0xd49b:
case 0xd49c:
case 0xd49d:
case 0xd49e:
case 0xd49f:
case 0xd698:
case 0xd699:
case 0xd69a:
case 0xd69b:
case 0xd69c:
case 0xd69d:
case 0xd69e:
case 0xd69f:
case 0xd898:
case 0xd899:
case 0xd89a:
case 0xd89b:
case 0xd89c:
case 0xd89d:
case 0xd89e:
case 0xd89f:
case 0xda98:
case 0xda99:
case 0xda9a:
case 0xda9b:
case 0xda9c:
case 0xda9d:
case 0xda9e:
case 0xda9f:
case 0xdc98:
case 0xdc99:
case 0xdc9a:
case 0xdc9b:
case 0xdc9c:
case 0xdc9d:
case 0xdc9e:
case 0xdc9f:
case 0xde98:
case 0xde99:
case 0xde9a:
case 0xde9b:
case 0xde9c:
case 0xde9d:
case 0xde9e:
case 0xde9f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc098:
case 0xc099:
case 0xc09a:
case 0xc09b:
case 0xc09c:
case 0xc09d:
case 0xc09e:
case 0xc09f:
case 0xc298:
case 0xc299:
case 0xc29a:
case 0xc29b:
case 0xc29c:
case 0xc29d:
case 0xc29e:
case 0xc29f:
case 0xc498:
case 0xc499:
case 0xc49a:
case 0xc49b:
case 0xc49c:
case 0xc49d:
case 0xc49e:
case 0xc49f:
case 0xc698:
case 0xc699:
case 0xc69a:
case 0xc69b:
case 0xc69c:
case 0xc69d:
case 0xc69e:
case 0xc69f:
case 0xc898:
case 0xc899:
case 0xc89a:
case 0xc89b:
case 0xc89c:
case 0xc89d:
case 0xc89e:
case 0xc89f:
case 0xca98:
case 0xca99:
case 0xca9a:
case 0xca9b:
case 0xca9c:
case 0xca9d:
case 0xca9e:
case 0xca9f:
case 0xcc98:
case 0xcc99:
case 0xcc9a:
case 0xcc9b:
case 0xcc9c:
case 0xcc9d:
case 0xcc9e:
case 0xcc9f:
case 0xce98:
case 0xce99:
case 0xce9a:
case 0xce9b:
case 0xce9c:
case 0xce9d:
case 0xce9e:
case 0xce9f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb098:
case 0xb099:
case 0xb09a:
case 0xb09b:
case 0xb09c:
case 0xb09d:
case 0xb09e:
case 0xb09f:
case 0xb298:
case 0xb299:
case 0xb29a:
case 0xb29b:
case 0xb29c:
case 0xb29d:
case 0xb29e:
case 0xb29f:
case 0xb498:
case 0xb499:
case 0xb49a:
case 0xb49b:
case 0xb49c:
case 0xb49d:
case 0xb49e:
case 0xb49f:
case 0xb698:
case 0xb699:
case 0xb69a:
case 0xb69b:
case 0xb69c:
case 0xb69d:
case 0xb69e:
case 0xb69f:
case 0xb898:
case 0xb899:
case 0xb89a:
case 0xb89b:
case 0xb89c:
case 0xb89d:
case 0xb89e:
case 0xb89f:
case 0xba98:
case 0xba99:
case 0xba9a:
case 0xba9b:
case 0xba9c:
case 0xba9d:
case 0xba9e:
case 0xba9f:
case 0xbc98:
case 0xbc99:
case 0xbc9a:
case 0xbc9b:
case 0xbc9c:
case 0xbc9d:
case 0xbc9e:
case 0xbc9f:
case 0xbe98:
case 0xbe99:
case 0xbe9a:
case 0xbe9b:
case 0xbe9c:
case 0xbe9d:
case 0xbe9e:
case 0xbe9f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x2018:
case 0x2019:
case 0x201a:
case 0x201b:
case 0x201c:
case 0x201d:
case 0x201e:
case 0x201f:
case 0x2218:
case 0x2219:
case 0x221a:
case 0x221b:
case 0x221c:
case 0x221d:
case 0x221e:
case 0x221f:
case 0x2418:
case 0x2419:
case 0x241a:
case 0x241b:
case 0x241c:
case 0x241d:
case 0x241e:
case 0x241f:
case 0x2618:
case 0x2619:
case 0x261a:
case 0x261b:
case 0x261c:
case 0x261d:
case 0x261e:
case 0x261f:
case 0x2818:
case 0x2819:
case 0x281a:
case 0x281b:
case 0x281c:
case 0x281d:
case 0x281e:
case 0x281f:
case 0x2a18:
case 0x2a19:
case 0x2a1a:
case 0x2a1b:
case 0x2a1c:
case 0x2a1d:
case 0x2a1e:
case 0x2a1f:
case 0x2c18:
case 0x2c19:
case 0x2c1a:
case 0x2c1b:
case 0x2c1c:
case 0x2c1d:
case 0x2c1e:
case 0x2c1f:
case 0x2e18:
case 0x2e19:
case 0x2e1a:
case 0x2e1b:
case 0x2e1c:
case 0x2e1d:
case 0x2e1e:
case 0x2e1f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8098:
case 0x8099:
case 0x809a:
case 0x809b:
case 0x809c:
case 0x809d:
case 0x809e:
case 0x809f:
case 0x8298:
case 0x8299:
case 0x829a:
case 0x829b:
case 0x829c:
case 0x829d:
case 0x829e:
case 0x829f:
case 0x8498:
case 0x8499:
case 0x849a:
case 0x849b:
case 0x849c:
case 0x849d:
case 0x849e:
case 0x849f:
case 0x8698:
case 0x8699:
case 0x869a:
case 0x869b:
case 0x869c:
case 0x869d:
case 0x869e:
case 0x869f:
case 0x8898:
case 0x8899:
case 0x889a:
case 0x889b:
case 0x889c:
case 0x889d:
case 0x889e:
case 0x889f:
case 0x8a98:
case 0x8a99:
case 0x8a9a:
case 0x8a9b:
case 0x8a9c:
case 0x8a9d:
case 0x8a9e:
case 0x8a9f:
case 0x8c98:
case 0x8c99:
case 0x8c9a:
case 0x8c9b:
case 0x8c9c:
case 0x8c9d:
case 0x8c9e:
case 0x8c9f:
case 0x8e98:
case 0x8e99:
case 0x8e9a:
case 0x8e9b:
case 0x8e9c:
case 0x8e9d:
case 0x8e9e:
case 0x8e9f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9098:
case 0x9099:
case 0x909a:
case 0x909b:
case 0x909c:
case 0x909d:
case 0x909e:
case 0x909f:
case 0x9298:
case 0x9299:
case 0x929a:
case 0x929b:
case 0x929c:
case 0x929d:
case 0x929e:
case 0x929f:
case 0x9498:
case 0x9499:
case 0x949a:
case 0x949b:
case 0x949c:
case 0x949d:
case 0x949e:
case 0x949f:
case 0x9698:
case 0x9699:
case 0x969a:
case 0x969b:
case 0x969c:
case 0x969d:
case 0x969e:
case 0x969f:
case 0x9898:
case 0x9899:
case 0x989a:
case 0x989b:
case 0x989c:
case 0x989d:
case 0x989e:
case 0x989f:
case 0x9a98:
case 0x9a99:
case 0x9a9a:
case 0x9a9b:
case 0x9a9c:
case 0x9a9d:
case 0x9a9e:
case 0x9a9f:
case 0x9c98:
case 0x9c99:
case 0x9c9a:
case 0x9c9b:
case 0x9c9c:
case 0x9c9d:
case 0x9c9e:
case 0x9c9f:
case 0x9e98:
case 0x9e99:
case 0x9e9a:
case 0x9e9b:
case 0x9e9c:
case 0x9e9d:
case 0x9e9e:
case 0x9e9f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2058:
case 0x2059:
case 0x205a:
case 0x205b:
case 0x205c:
case 0x205d:
case 0x205e:
case 0x205f:
case 0x2258:
case 0x2259:
case 0x225a:
case 0x225b:
case 0x225c:
case 0x225d:
case 0x225e:
case 0x225f:
case 0x2458:
case 0x2459:
case 0x245a:
case 0x245b:
case 0x245c:
case 0x245d:
case 0x245e:
case 0x245f:
case 0x2658:
case 0x2659:
case 0x265a:
case 0x265b:
case 0x265c:
case 0x265d:
case 0x265e:
case 0x265f:
case 0x2858:
case 0x2859:
case 0x285a:
case 0x285b:
case 0x285c:
case 0x285d:
case 0x285e:
case 0x285f:
case 0x2a58:
case 0x2a59:
case 0x2a5a:
case 0x2a5b:
case 0x2a5c:
case 0x2a5d:
case 0x2a5e:
case 0x2a5f:
case 0x2c58:
case 0x2c59:
case 0x2c5a:
case 0x2c5b:
case 0x2c5c:
case 0x2c5d:
case 0x2c5e:
case 0x2c5f:
case 0x2e58:
case 0x2e59:
case 0x2e5a:
case 0x2e5b:
case 0x2e5c:
case 0x2e5d:
case 0x2e5e:
case 0x2e5f:
	{
	 HAM<uint32, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x42a0:
case 0x42a1:
case 0x42a2:
case 0x42a3:
case 0x42a4:
case 0x42a5:
case 0x42a6:
case 0x42a7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x44a0:
case 0x44a1:
case 0x44a2:
case 0x44a3:
case 0x44a4:
case 0x44a5:
case 0x44a6:
case 0x44a7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x40a0:
case 0x40a1:
case 0x40a2:
case 0x40a3:
case 0x40a4:
case 0x40a5:
case 0x40a6:
case 0x40a7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x46a0:
case 0x46a1:
case 0x46a2:
case 0x46a3:
case 0x46a4:
case 0x46a5:
case 0x46a6:
case 0x46a7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4aa0:
case 0x4aa1:
case 0x4aa2:
case 0x4aa3:
case 0x4aa4:
case 0x4aa5:
case 0x4aa6:
case 0x4aa7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x23e0:
case 0x23e1:
case 0x23e2:
case 0x23e3:
case 0x23e4:
case 0x23e5:
case 0x23e6:
case 0x23e7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21e0:
case 0x21e1:
case 0x21e2:
case 0x21e3:
case 0x21e4:
case 0x21e5:
case 0x21e6:
case 0x21e7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1e0:
case 0xd1e1:
case 0xd1e2:
case 0xd1e3:
case 0xd1e4:
case 0xd1e5:
case 0xd1e6:
case 0xd1e7:
case 0xd3e0:
case 0xd3e1:
case 0xd3e2:
case 0xd3e3:
case 0xd3e4:
case 0xd3e5:
case 0xd3e6:
case 0xd3e7:
case 0xd5e0:
case 0xd5e1:
case 0xd5e2:
case 0xd5e3:
case 0xd5e4:
case 0xd5e5:
case 0xd5e6:
case 0xd5e7:
case 0xd7e0:
case 0xd7e1:
case 0xd7e2:
case 0xd7e3:
case 0xd7e4:
case 0xd7e5:
case 0xd7e6:
case 0xd7e7:
case 0xd9e0:
case 0xd9e1:
case 0xd9e2:
case 0xd9e3:
case 0xd9e4:
case 0xd9e5:
case 0xd9e6:
case 0xd9e7:
case 0xdbe0:
case 0xdbe1:
case 0xdbe2:
case 0xdbe3:
case 0xdbe4:
case 0xdbe5:
case 0xdbe6:
case 0xdbe7:
case 0xdde0:
case 0xdde1:
case 0xdde2:
case 0xdde3:
case 0xdde4:
case 0xdde5:
case 0xdde6:
case 0xdde7:
case 0xdfe0:
case 0xdfe1:
case 0xdfe2:
case 0xdfe3:
case 0xdfe4:
case 0xdfe5:
case 0xdfe6:
case 0xdfe7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1e0:
case 0xb1e1:
case 0xb1e2:
case 0xb1e3:
case 0xb1e4:
case 0xb1e5:
case 0xb1e6:
case 0xb1e7:
case 0xb3e0:
case 0xb3e1:
case 0xb3e2:
case 0xb3e3:
case 0xb3e4:
case 0xb3e5:
case 0xb3e6:
case 0xb3e7:
case 0xb5e0:
case 0xb5e1:
case 0xb5e2:
case 0xb5e3:
case 0xb5e4:
case 0xb5e5:
case 0xb5e6:
case 0xb5e7:
case 0xb7e0:
case 0xb7e1:
case 0xb7e2:
case 0xb7e3:
case 0xb7e4:
case 0xb7e5:
case 0xb7e6:
case 0xb7e7:
case 0xb9e0:
case 0xb9e1:
case 0xb9e2:
case 0xb9e3:
case 0xb9e4:
case 0xb9e5:
case 0xb9e6:
case 0xb9e7:
case 0xbbe0:
case 0xbbe1:
case 0xbbe2:
case 0xbbe3:
case 0xbbe4:
case 0xbbe5:
case 0xbbe6:
case 0xbbe7:
case 0xbde0:
case 0xbde1:
case 0xbde2:
case 0xbde3:
case 0xbde4:
case 0xbde5:
case 0xbde6:
case 0xbde7:
case 0xbfe0:
case 0xbfe1:
case 0xbfe2:
case 0xbfe3:
case 0xbfe4:
case 0xbfe5:
case 0xbfe6:
case 0xbfe7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91e0:
case 0x91e1:
case 0x91e2:
case 0x91e3:
case 0x91e4:
case 0x91e5:
case 0x91e6:
case 0x91e7:
case 0x93e0:
case 0x93e1:
case 0x93e2:
case 0x93e3:
case 0x93e4:
case 0x93e5:
case 0x93e6:
case 0x93e7:
case 0x95e0:
case 0x95e1:
case 0x95e2:
case 0x95e3:
case 0x95e4:
case 0x95e5:
case 0x95e6:
case 0x95e7:
case 0x97e0:
case 0x97e1:
case 0x97e2:
case 0x97e3:
case 0x97e4:
case 0x97e5:
case 0x97e6:
case 0x97e7:
case 0x99e0:
case 0x99e1:
case 0x99e2:
case 0x99e3:
case 0x99e4:
case 0x99e5:
case 0x99e6:
case 0x99e7:
case 0x9be0:
case 0x9be1:
case 0x9be2:
case 0x9be3:
case 0x9be4:
case 0x9be5:
case 0x9be6:
case 0x9be7:
case 0x9de0:
case 0x9de1:
case 0x9de2:
case 0x9de3:
case 0x9de4:
case 0x9de5:
case 0x9de6:
case 0x9de7:
case 0x9fe0:
case 0x9fe1:
case 0x9fe2:
case 0x9fe3:
case 0x9fe4:
case 0x9fe5:
case 0x9fe6:
case 0x9fe7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x20a0:
case 0x20a1:
case 0x20a2:
case 0x20a3:
case 0x20a4:
case 0x20a5:
case 0x20a6:
case 0x20a7:
case 0x22a0:
case 0x22a1:
case 0x22a2:
case 0x22a3:
case 0x22a4:
case 0x22a5:
case 0x22a6:
case 0x22a7:
case 0x24a0:
case 0x24a1:
case 0x24a2:
case 0x24a3:
case 0x24a4:
case 0x24a5:
case 0x24a6:
case 0x24a7:
case 0x26a0:
case 0x26a1:
case 0x26a2:
case 0x26a3:
case 0x26a4:
case 0x26a5:
case 0x26a6:
case 0x26a7:
case 0x28a0:
case 0x28a1:
case 0x28a2:
case 0x28a3:
case 0x28a4:
case 0x28a5:
case 0x28a6:
case 0x28a7:
case 0x2aa0:
case 0x2aa1:
case 0x2aa2:
case 0x2aa3:
case 0x2aa4:
case 0x2aa5:
case 0x2aa6:
case 0x2aa7:
case 0x2ca0:
case 0x2ca1:
case 0x2ca2:
case 0x2ca3:
case 0x2ca4:
case 0x2ca5:
case 0x2ca6:
case 0x2ca7:
case 0x2ea0:
case 0x2ea1:
case 0x2ea2:
case 0x2ea3:
case 0x2ea4:
case 0x2ea5:
case 0x2ea6:
case 0x2ea7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2160:
case 0x2161:
case 0x2162:
case 0x2163:
case 0x2164:
case 0x2165:
case 0x2166:
case 0x2167:
case 0x2360:
case 0x2361:
case 0x2362:
case 0x2363:
case 0x2364:
case 0x2365:
case 0x2366:
case 0x2367:
case 0x2560:
case 0x2561:
case 0x2562:
case 0x2563:
case 0x2564:
case 0x2565:
case 0x2566:
case 0x2567:
case 0x2760:
case 0x2761:
case 0x2762:
case 0x2763:
case 0x2764:
case 0x2765:
case 0x2766:
case 0x2767:
case 0x2960:
case 0x2961:
case 0x2962:
case 0x2963:
case 0x2964:
case 0x2965:
case 0x2966:
case 0x2967:
case 0x2b60:
case 0x2b61:
case 0x2b62:
case 0x2b63:
case 0x2b64:
case 0x2b65:
case 0x2b66:
case 0x2b67:
case 0x2d60:
case 0x2d61:
case 0x2d62:
case 0x2d63:
case 0x2d64:
case 0x2d65:
case 0x2d66:
case 0x2d67:
case 0x2f60:
case 0x2f61:
case 0x2f62:
case 0x2f63:
case 0x2f64:
case 0x2f65:
case 0x2f66:
case 0x2f67:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x21a0:
case 0x21a1:
case 0x21a2:
case 0x21a3:
case 0x21a4:
case 0x21a5:
case 0x21a6:
case 0x21a7:
case 0x23a0:
case 0x23a1:
case 0x23a2:
case 0x23a3:
case 0x23a4:
case 0x23a5:
case 0x23a6:
case 0x23a7:
case 0x25a0:
case 0x25a1:
case 0x25a2:
case 0x25a3:
case 0x25a4:
case 0x25a5:
case 0x25a6:
case 0x25a7:
case 0x27a0:
case 0x27a1:
case 0x27a2:
case 0x27a3:
case 0x27a4:
case 0x27a5:
case 0x27a6:
case 0x27a7:
case 0x29a0:
case 0x29a1:
case 0x29a2:
case 0x29a3:
case 0x29a4:
case 0x29a5:
case 0x29a6:
case 0x29a7:
case 0x2ba0:
case 0x2ba1:
case 0x2ba2:
case 0x2ba3:
case 0x2ba4:
case 0x2ba5:
case 0x2ba6:
case 0x2ba7:
case 0x2da0:
case 0x2da1:
case 0x2da2:
case 0x2da3:
case 0x2da4:
case 0x2da5:
case 0x2da6:
case 0x2da7:
case 0x2fa0:
case 0x2fa1:
case 0x2fa2:
case 0x2fa3:
case 0x2fa4:
case 0x2fa5:
case 0x2fa6:
case 0x2fa7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20e0:
case 0x20e1:
case 0x20e2:
case 0x20e3:
case 0x20e4:
case 0x20e5:
case 0x20e6:
case 0x20e7:
case 0x22e0:
case 0x22e1:
case 0x22e2:
case 0x22e3:
case 0x22e4:
case 0x22e5:
case 0x22e6:
case 0x22e7:
case 0x24e0:
case 0x24e1:
case 0x24e2:
case 0x24e3:
case 0x24e4:
case 0x24e5:
case 0x24e6:
case 0x24e7:
case 0x26e0:
case 0x26e1:
case 0x26e2:
case 0x26e3:
case 0x26e4:
case 0x26e5:
case 0x26e6:
case 0x26e7:
case 0x28e0:
case 0x28e1:
case 0x28e2:
case 0x28e3:
case 0x28e4:
case 0x28e5:
case 0x28e6:
case 0x28e7:
case 0x2ae0:
case 0x2ae1:
case 0x2ae2:
case 0x2ae3:
case 0x2ae4:
case 0x2ae5:
case 0x2ae6:
case 0x2ae7:
case 0x2ce0:
case 0x2ce1:
case 0x2ce2:
case 0x2ce3:
case 0x2ce4:
case 0x2ce5:
case 0x2ce6:
case 0x2ce7:
case 0x2ee0:
case 0x2ee1:
case 0x2ee2:
case 0x2ee3:
case 0x2ee4:
case 0x2ee5:
case 0x2ee6:
case 0x2ee7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd188:
case 0xd189:
case 0xd18a:
case 0xd18b:
case 0xd18c:
case 0xd18d:
case 0xd18e:
case 0xd18f:
case 0xd388:
case 0xd389:
case 0xd38a:
case 0xd38b:
case 0xd38c:
case 0xd38d:
case 0xd38e:
case 0xd38f:
case 0xd588:
case 0xd589:
case 0xd58a:
case 0xd58b:
case 0xd58c:
case 0xd58d:
case 0xd58e:
case 0xd58f:
case 0xd788:
case 0xd789:
case 0xd78a:
case 0xd78b:
case 0xd78c:
case 0xd78d:
case 0xd78e:
case 0xd78f:
case 0xd988:
case 0xd989:
case 0xd98a:
case 0xd98b:
case 0xd98c:
case 0xd98d:
case 0xd98e:
case 0xd98f:
case 0xdb88:
case 0xdb89:
case 0xdb8a:
case 0xdb8b:
case 0xdb8c:
case 0xdb8d:
case 0xdb8e:
case 0xdb8f:
case 0xdd88:
case 0xdd89:
case 0xdd8a:
case 0xdd8b:
case 0xdd8c:
case 0xdd8d:
case 0xdd8e:
case 0xdd8f:
case 0xdf88:
case 0xdf89:
case 0xdf8a:
case 0xdf8b:
case 0xdf8c:
case 0xdf8d:
case 0xdf8e:
case 0xdf8f:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); ADDX(src, dst);
	}
	break;

case 0x2120:
case 0x2121:
case 0x2122:
case 0x2123:
case 0x2124:
case 0x2125:
case 0x2126:
case 0x2127:
case 0x2320:
case 0x2321:
case 0x2322:
case 0x2323:
case 0x2324:
case 0x2325:
case 0x2326:
case 0x2327:
case 0x2520:
case 0x2521:
case 0x2522:
case 0x2523:
case 0x2524:
case 0x2525:
case 0x2526:
case 0x2527:
case 0x2720:
case 0x2721:
case 0x2722:
case 0x2723:
case 0x2724:
case 0x2725:
case 0x2726:
case 0x2727:
case 0x2920:
case 0x2921:
case 0x2922:
case 0x2923:
case 0x2924:
case 0x2925:
case 0x2926:
case 0x2927:
case 0x2b20:
case 0x2b21:
case 0x2b22:
case 0x2b23:
case 0x2b24:
case 0x2b25:
case 0x2b26:
case 0x2b27:
case 0x2d20:
case 0x2d21:
case 0x2d22:
case 0x2d23:
case 0x2d24:
case 0x2d25:
case 0x2d26:
case 0x2d27:
case 0x2f20:
case 0x2f21:
case 0x2f22:
case 0x2f23:
case 0x2f24:
case 0x2f25:
case 0x2f26:
case 0x2f27:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x9188:
case 0x9189:
case 0x918a:
case 0x918b:
case 0x918c:
case 0x918d:
case 0x918e:
case 0x918f:
case 0x9388:
case 0x9389:
case 0x938a:
case 0x938b:
case 0x938c:
case 0x938d:
case 0x938e:
case 0x938f:
case 0x9588:
case 0x9589:
case 0x958a:
case 0x958b:
case 0x958c:
case 0x958d:
case 0x958e:
case 0x958f:
case 0x9788:
case 0x9789:
case 0x978a:
case 0x978b:
case 0x978c:
case 0x978d:
case 0x978e:
case 0x978f:
case 0x9988:
case 0x9989:
case 0x998a:
case 0x998b:
case 0x998c:
case 0x998d:
case 0x998e:
case 0x998f:
case 0x9b88:
case 0x9b89:
case 0x9b8a:
case 0x9b8b:
case 0x9b8c:
case 0x9b8d:
case 0x9b8e:
case 0x9b8f:
case 0x9d88:
case 0x9d89:
case 0x9d8a:
case 0x9d8b:
case 0x9d8c:
case 0x9d8d:
case 0x9d8e:
case 0x9d8f:
case 0x9f88:
case 0x9f89:
case 0x9f8a:
case 0x9f8b:
case 0x9f8c:
case 0x9f8d:
case 0x9f8e:
case 0x9f8f:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); SUBX(src, dst);
	}
	break;

case 0xd0a0:
case 0xd0a1:
case 0xd0a2:
case 0xd0a3:
case 0xd0a4:
case 0xd0a5:
case 0xd0a6:
case 0xd0a7:
case 0xd2a0:
case 0xd2a1:
case 0xd2a2:
case 0xd2a3:
case 0xd2a4:
case 0xd2a5:
case 0xd2a6:
case 0xd2a7:
case 0xd4a0:
case 0xd4a1:
case 0xd4a2:
case 0xd4a3:
case 0xd4a4:
case 0xd4a5:
case 0xd4a6:
case 0xd4a7:
case 0xd6a0:
case 0xd6a1:
case 0xd6a2:
case 0xd6a3:
case 0xd6a4:
case 0xd6a5:
case 0xd6a6:
case 0xd6a7:
case 0xd8a0:
case 0xd8a1:
case 0xd8a2:
case 0xd8a3:
case 0xd8a4:
case 0xd8a5:
case 0xd8a6:
case 0xd8a7:
case 0xdaa0:
case 0xdaa1:
case 0xdaa2:
case 0xdaa3:
case 0xdaa4:
case 0xdaa5:
case 0xdaa6:
case 0xdaa7:
case 0xdca0:
case 0xdca1:
case 0xdca2:
case 0xdca3:
case 0xdca4:
case 0xdca5:
case 0xdca6:
case 0xdca7:
case 0xdea0:
case 0xdea1:
case 0xdea2:
case 0xdea3:
case 0xdea4:
case 0xdea5:
case 0xdea6:
case 0xdea7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc0a0:
case 0xc0a1:
case 0xc0a2:
case 0xc0a3:
case 0xc0a4:
case 0xc0a5:
case 0xc0a6:
case 0xc0a7:
case 0xc2a0:
case 0xc2a1:
case 0xc2a2:
case 0xc2a3:
case 0xc2a4:
case 0xc2a5:
case 0xc2a6:
case 0xc2a7:
case 0xc4a0:
case 0xc4a1:
case 0xc4a2:
case 0xc4a3:
case 0xc4a4:
case 0xc4a5:
case 0xc4a6:
case 0xc4a7:
case 0xc6a0:
case 0xc6a1:
case 0xc6a2:
case 0xc6a3:
case 0xc6a4:
case 0xc6a5:
case 0xc6a6:
case 0xc6a7:
case 0xc8a0:
case 0xc8a1:
case 0xc8a2:
case 0xc8a3:
case 0xc8a4:
case 0xc8a5:
case 0xc8a6:
case 0xc8a7:
case 0xcaa0:
case 0xcaa1:
case 0xcaa2:
case 0xcaa3:
case 0xcaa4:
case 0xcaa5:
case 0xcaa6:
case 0xcaa7:
case 0xcca0:
case 0xcca1:
case 0xcca2:
case 0xcca3:
case 0xcca4:
case 0xcca5:
case 0xcca6:
case 0xcca7:
case 0xcea0:
case 0xcea1:
case 0xcea2:
case 0xcea3:
case 0xcea4:
case 0xcea5:
case 0xcea6:
case 0xcea7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb0a0:
case 0xb0a1:
case 0xb0a2:
case 0xb0a3:
case 0xb0a4:
case 0xb0a5:
case 0xb0a6:
case 0xb0a7:
case 0xb2a0:
case 0xb2a1:
case 0xb2a2:
case 0xb2a3:
case 0xb2a4:
case 0xb2a5:
case 0xb2a6:
case 0xb2a7:
case 0xb4a0:
case 0xb4a1:
case 0xb4a2:
case 0xb4a3:
case 0xb4a4:
case 0xb4a5:
case 0xb4a6:
case 0xb4a7:
case 0xb6a0:
case 0xb6a1:
case 0xb6a2:
case 0xb6a3:
case 0xb6a4:
case 0xb6a5:
case 0xb6a6:
case 0xb6a7:
case 0xb8a0:
case 0xb8a1:
case 0xb8a2:
case 0xb8a3:
case 0xb8a4:
case 0xb8a5:
case 0xb8a6:
case 0xb8a7:
case 0xbaa0:
case 0xbaa1:
case 0xbaa2:
case 0xbaa3:
case 0xbaa4:
case 0xbaa5:
case 0xbaa6:
case 0xbaa7:
case 0xbca0:
case 0xbca1:
case 0xbca2:
case 0xbca3:
case 0xbca4:
case 0xbca5:
case 0xbca6:
case 0xbca7:
case 0xbea0:
case 0xbea1:
case 0xbea2:
case 0xbea3:
case 0xbea4:
case 0xbea5:
case 0xbea6:
case 0xbea7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x2020:
case 0x2021:
case 0x2022:
case 0x2023:
case 0x2024:
case 0x2025:
case 0x2026:
case 0x2027:
case 0x2220:
case 0x2221:
case 0x2222:
case 0x2223:
case 0x2224:
case 0x2225:
case 0x2226:
case 0x2227:
case 0x2420:
case 0x2421:
case 0x2422:
case 0x2423:
case 0x2424:
case 0x2425:
case 0x2426:
case 0x2427:
case 0x2620:
case 0x2621:
case 0x2622:
case 0x2623:
case 0x2624:
case 0x2625:
case 0x2626:
case 0x2627:
case 0x2820:
case 0x2821:
case 0x2822:
case 0x2823:
case 0x2824:
case 0x2825:
case 0x2826:
case 0x2827:
case 0x2a20:
case 0x2a21:
case 0x2a22:
case 0x2a23:
case 0x2a24:
case 0x2a25:
case 0x2a26:
case 0x2a27:
case 0x2c20:
case 0x2c21:
case 0x2c22:
case 0x2c23:
case 0x2c24:
case 0x2c25:
case 0x2c26:
case 0x2c27:
case 0x2e20:
case 0x2e21:
case 0x2e22:
case 0x2e23:
case 0x2e24:
case 0x2e25:
case 0x2e26:
case 0x2e27:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x80a0:
case 0x80a1:
case 0x80a2:
case 0x80a3:
case 0x80a4:
case 0x80a5:
case 0x80a6:
case 0x80a7:
case 0x82a0:
case 0x82a1:
case 0x82a2:
case 0x82a3:
case 0x82a4:
case 0x82a5:
case 0x82a6:
case 0x82a7:
case 0x84a0:
case 0x84a1:
case 0x84a2:
case 0x84a3:
case 0x84a4:
case 0x84a5:
case 0x84a6:
case 0x84a7:
case 0x86a0:
case 0x86a1:
case 0x86a2:
case 0x86a3:
case 0x86a4:
case 0x86a5:
case 0x86a6:
case 0x86a7:
case 0x88a0:
case 0x88a1:
case 0x88a2:
case 0x88a3:
case 0x88a4:
case 0x88a5:
case 0x88a6:
case 0x88a7:
case 0x8aa0:
case 0x8aa1:
case 0x8aa2:
case 0x8aa3:
case 0x8aa4:
case 0x8aa5:
case 0x8aa6:
case 0x8aa7:
case 0x8ca0:
case 0x8ca1:
case 0x8ca2:
case 0x8ca3:
case 0x8ca4:
case 0x8ca5:
case 0x8ca6:
case 0x8ca7:
case 0x8ea0:
case 0x8ea1:
case 0x8ea2:
case 0x8ea3:
case 0x8ea4:
case 0x8ea5:
case 0x8ea6:
case 0x8ea7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x90a0:
case 0x90a1:
case 0x90a2:
case 0x90a3:
case 0x90a4:
case 0x90a5:
case 0x90a6:
case 0x90a7:
case 0x92a0:
case 0x92a1:
case 0x92a2:
case 0x92a3:
case 0x92a4:
case 0x92a5:
case 0x92a6:
case 0x92a7:
case 0x94a0:
case 0x94a1:
case 0x94a2:
case 0x94a3:
case 0x94a4:
case 0x94a5:
case 0x94a6:
case 0x94a7:
case 0x96a0:
case 0x96a1:
case 0x96a2:
case 0x96a3:
case 0x96a4:
case 0x96a5:
case 0x96a6:
case 0x96a7:
case 0x98a0:
case 0x98a1:
case 0x98a2:
case 0x98a3:
case 0x98a4:
case 0x98a5:
case 0x98a6:
case 0x98a7:
case 0x9aa0:
case 0x9aa1:
case 0x9aa2:
case 0x9aa3:
case 0x9aa4:
case 0x9aa5:
case 0x9aa6:
case 0x9aa7:
case 0x9ca0:
case 0x9ca1:
case 0x9ca2:
case 0x9ca3:
case 0x9ca4:
case 0x9ca5:
case 0x9ca6:
case 0x9ca7:
case 0x9ea0:
case 0x9ea1:
case 0x9ea2:
case 0x9ea3:
case 0x9ea4:
case 0x9ea5:
case 0x9ea6:
case 0x9ea7:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2060:
case 0x2061:
case 0x2062:
case 0x2063:
case 0x2064:
case 0x2065:
case 0x2066:
case 0x2067:
case 0x2260:
case 0x2261:
case 0x2262:
case 0x2263:
case 0x2264:
case 0x2265:
case 0x2266:
case 0x2267:
case 0x2460:
case 0x2461:
case 0x2462:
case 0x2463:
case 0x2464:
case 0x2465:
case 0x2466:
case 0x2467:
case 0x2660:
case 0x2661:
case 0x2662:
case 0x2663:
case 0x2664:
case 0x2665:
case 0x2666:
case 0x2667:
case 0x2860:
case 0x2861:
case 0x2862:
case 0x2863:
case 0x2864:
case 0x2865:
case 0x2866:
case 0x2867:
case 0x2a60:
case 0x2a61:
case 0x2a62:
case 0x2a63:
case 0x2a64:
case 0x2a65:
case 0x2a66:
case 0x2a67:
case 0x2c60:
case 0x2c61:
case 0x2c62:
case 0x2c63:
case 0x2c64:
case 0x2c65:
case 0x2c66:
case 0x2c67:
case 0x2e60:
case 0x2e61:
case 0x2e62:
case 0x2e63:
case 0x2e64:
case 0x2e65:
case 0x2e66:
case 0x2e67:
	{
	 HAM<uint32, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x4280:
case 0x4281:
case 0x4282:
case 0x4283:
case 0x4284:
case 0x4285:
case 0x4286:
case 0x4287:
	{
	 HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x48c0:
case 0x48c1:
case 0x48c2:
case 0x48c3:
case 0x48c4:
case 0x48c5:
case 0x48c6:
case 0x48c7:
	{
	 HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); EXT(dst);
	}
	break;

case 0x4480:
case 0x4481:
case 0x4482:
case 0x4483:
case 0x4484:
case 0x4485:
case 0x4486:
case 0x4487:
	{
	 HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4080:
case 0x4081:
case 0x4082:
case 0x4083:
case 0x4084:
case 0x4085:
case 0x4086:
case 0x4087:
	{
	 HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4680:
case 0x4681:
case 0x4682:
case 0x4683:
case 0x4684:
case 0x4685:
case 0x4686:
case 0x4687:
	{
	 HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x4a80:
case 0x4a81:
case 0x4a82:
case 0x4a83:
case 0x4a84:
case 0x4a85:
case 0x4a86:
case 0x4a87:
	{
	 HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0xd1b9:
case 0xd3b9:
case 0xd5b9:
case 0xd7b9:
case 0xd9b9:
case 0xdbb9:
case 0xddb9:
case 0xdfb9:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_LONG> dst(this); ADD(src, dst);
	}
	break;

case 0xc1b9:
case 0xc3b9:
case 0xc5b9:
case 0xc7b9:
case 0xc9b9:
case 0xcbb9:
case 0xcdb9:
case 0xcfb9:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_LONG> dst(this); AND(src, dst);
	}
	break;

case 0xb1b9:
case 0xb3b9:
case 0xb5b9:
case 0xb7b9:
case 0xb9b9:
case 0xbbb9:
case 0xbdb9:
case 0xbfb9:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_LONG> dst(this); EOR(src, dst);
	}
	break;

case 0x81b9:
case 0x83b9:
case 0x85b9:
case 0x87b9:
case 0x89b9:
case 0x8bb9:
case 0x8db9:
case 0x8fb9:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_LONG> dst(this); OR(src, dst);
	}
	break;

case 0x91b9:
case 0x93b9:
case 0x95b9:
case 0x97b9:
case 0x99b9:
case 0x9bb9:
case 0x9db9:
case 0x9fb9:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_LONG> dst(this); SUB(src, dst);
	}
	break;

case 0xd1b8:
case 0xd3b8:
case 0xd5b8:
case 0xd7b8:
case 0xd9b8:
case 0xdbb8:
case 0xddb8:
case 0xdfb8:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_SHORT> dst(this); ADD(src, dst);
	}
	break;

case 0xc1b8:
case 0xc3b8:
case 0xc5b8:
case 0xc7b8:
case 0xc9b8:
case 0xcbb8:
case 0xcdb8:
case 0xcfb8:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_SHORT> dst(this); AND(src, dst);
	}
	break;

case 0xb1b8:
case 0xb3b8:
case 0xb5b8:
case 0xb7b8:
case 0xb9b8:
case 0xbbb8:
case 0xbdb8:
case 0xbfb8:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_SHORT> dst(this); EOR(src, dst);
	}
	break;

case 0x81b8:
case 0x83b8:
case 0x85b8:
case 0x87b8:
case 0x89b8:
case 0x8bb8:
case 0x8db8:
case 0x8fb8:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_SHORT> dst(this); OR(src, dst);
	}
	break;

case 0x91b8:
case 0x93b8:
case 0x95b8:
case 0x97b8:
case 0x99b8:
case 0x9bb8:
case 0x9db8:
case 0x9fb8:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ABS_SHORT> dst(this); SUB(src, dst);
	}
	break;

case 0xd190:
case 0xd191:
case 0xd192:
case 0xd193:
case 0xd194:
case 0xd195:
case 0xd196:
case 0xd197:
case 0xd390:
case 0xd391:
case 0xd392:
case 0xd393:
case 0xd394:
case 0xd395:
case 0xd396:
case 0xd397:
case 0xd590:
case 0xd591:
case 0xd592:
case 0xd593:
case 0xd594:
case 0xd595:
case 0xd596:
case 0xd597:
case 0xd790:
case 0xd791:
case 0xd792:
case 0xd793:
case 0xd794:
case 0xd795:
case 0xd796:
case 0xd797:
case 0xd990:
case 0xd991:
case 0xd992:
case 0xd993:
case 0xd994:
case 0xd995:
case 0xd996:
case 0xd997:
case 0xdb90:
case 0xdb91:
case 0xdb92:
case 0xdb93:
case 0xdb94:
case 0xdb95:
case 0xdb96:
case 0xdb97:
case 0xdd90:
case 0xdd91:
case 0xdd92:
case 0xdd93:
case 0xdd94:
case 0xdd95:
case 0xdd96:
case 0xdd97:
case 0xdf90:
case 0xdf91:
case 0xdf92:
case 0xdf93:
case 0xdf94:
case 0xdf95:
case 0xdf96:
case 0xdf97:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc190:
case 0xc191:
case 0xc192:
case 0xc193:
case 0xc194:
case 0xc195:
case 0xc196:
case 0xc197:
case 0xc390:
case 0xc391:
case 0xc392:
case 0xc393:
case 0xc394:
case 0xc395:
case 0xc396:
case 0xc397:
case 0xc590:
case 0xc591:
case 0xc592:
case 0xc593:
case 0xc594:
case 0xc595:
case 0xc596:
case 0xc597:
case 0xc790:
case 0xc791:
case 0xc792:
case 0xc793:
case 0xc794:
case 0xc795:
case 0xc796:
case 0xc797:
case 0xc990:
case 0xc991:
case 0xc992:
case 0xc993:
case 0xc994:
case 0xc995:
case 0xc996:
case 0xc997:
case 0xcb90:
case 0xcb91:
case 0xcb92:
case 0xcb93:
case 0xcb94:
case 0xcb95:
case 0xcb96:
case 0xcb97:
case 0xcd90:
case 0xcd91:
case 0xcd92:
case 0xcd93:
case 0xcd94:
case 0xcd95:
case 0xcd96:
case 0xcd97:
case 0xcf90:
case 0xcf91:
case 0xcf92:
case 0xcf93:
case 0xcf94:
case 0xcf95:
case 0xcf96:
case 0xcf97:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb190:
case 0xb191:
case 0xb192:
case 0xb193:
case 0xb194:
case 0xb195:
case 0xb196:
case 0xb197:
case 0xb390:
case 0xb391:
case 0xb392:
case 0xb393:
case 0xb394:
case 0xb395:
case 0xb396:
case 0xb397:
case 0xb590:
case 0xb591:
case 0xb592:
case 0xb593:
case 0xb594:
case 0xb595:
case 0xb596:
case 0xb597:
case 0xb790:
case 0xb791:
case 0xb792:
case 0xb793:
case 0xb794:
case 0xb795:
case 0xb796:
case 0xb797:
case 0xb990:
case 0xb991:
case 0xb992:
case 0xb993:
case 0xb994:
case 0xb995:
case 0xb996:
case 0xb997:
case 0xbb90:
case 0xbb91:
case 0xbb92:
case 0xbb93:
case 0xbb94:
case 0xbb95:
case 0xbb96:
case 0xbb97:
case 0xbd90:
case 0xbd91:
case 0xbd92:
case 0xbd93:
case 0xbd94:
case 0xbd95:
case 0xbd96:
case 0xbd97:
case 0xbf90:
case 0xbf91:
case 0xbf92:
case 0xbf93:
case 0xbf94:
case 0xbf95:
case 0xbf96:
case 0xbf97:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8190:
case 0x8191:
case 0x8192:
case 0x8193:
case 0x8194:
case 0x8195:
case 0x8196:
case 0x8197:
case 0x8390:
case 0x8391:
case 0x8392:
case 0x8393:
case 0x8394:
case 0x8395:
case 0x8396:
case 0x8397:
case 0x8590:
case 0x8591:
case 0x8592:
case 0x8593:
case 0x8594:
case 0x8595:
case 0x8596:
case 0x8597:
case 0x8790:
case 0x8791:
case 0x8792:
case 0x8793:
case 0x8794:
case 0x8795:
case 0x8796:
case 0x8797:
case 0x8990:
case 0x8991:
case 0x8992:
case 0x8993:
case 0x8994:
case 0x8995:
case 0x8996:
case 0x8997:
case 0x8b90:
case 0x8b91:
case 0x8b92:
case 0x8b93:
case 0x8b94:
case 0x8b95:
case 0x8b96:
case 0x8b97:
case 0x8d90:
case 0x8d91:
case 0x8d92:
case 0x8d93:
case 0x8d94:
case 0x8d95:
case 0x8d96:
case 0x8d97:
case 0x8f90:
case 0x8f91:
case 0x8f92:
case 0x8f93:
case 0x8f94:
case 0x8f95:
case 0x8f96:
case 0x8f97:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9190:
case 0x9191:
case 0x9192:
case 0x9193:
case 0x9194:
case 0x9195:
case 0x9196:
case 0x9197:
case 0x9390:
case 0x9391:
case 0x9392:
case 0x9393:
case 0x9394:
case 0x9395:
case 0x9396:
case 0x9397:
case 0x9590:
case 0x9591:
case 0x9592:
case 0x9593:
case 0x9594:
case 0x9595:
case 0x9596:
case 0x9597:
case 0x9790:
case 0x9791:
case 0x9792:
case 0x9793:
case 0x9794:
case 0x9795:
case 0x9796:
case 0x9797:
case 0x9990:
case 0x9991:
case 0x9992:
case 0x9993:
case 0x9994:
case 0x9995:
case 0x9996:
case 0x9997:
case 0x9b90:
case 0x9b91:
case 0x9b92:
case 0x9b93:
case 0x9b94:
case 0x9b95:
case 0x9b96:
case 0x9b97:
case 0x9d90:
case 0x9d91:
case 0x9d92:
case 0x9d93:
case 0x9d94:
case 0x9d95:
case 0x9d96:
case 0x9d97:
case 0x9f90:
case 0x9f91:
case 0x9f92:
case 0x9f93:
case 0x9f94:
case 0x9f95:
case 0x9f96:
case 0x9f97:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd1a8:
case 0xd1a9:
case 0xd1aa:
case 0xd1ab:
case 0xd1ac:
case 0xd1ad:
case 0xd1ae:
case 0xd1af:
case 0xd3a8:
case 0xd3a9:
case 0xd3aa:
case 0xd3ab:
case 0xd3ac:
case 0xd3ad:
case 0xd3ae:
case 0xd3af:
case 0xd5a8:
case 0xd5a9:
case 0xd5aa:
case 0xd5ab:
case 0xd5ac:
case 0xd5ad:
case 0xd5ae:
case 0xd5af:
case 0xd7a8:
case 0xd7a9:
case 0xd7aa:
case 0xd7ab:
case 0xd7ac:
case 0xd7ad:
case 0xd7ae:
case 0xd7af:
case 0xd9a8:
case 0xd9a9:
case 0xd9aa:
case 0xd9ab:
case 0xd9ac:
case 0xd9ad:
case 0xd9ae:
case 0xd9af:
case 0xdba8:
case 0xdba9:
case 0xdbaa:
case 0xdbab:
case 0xdbac:
case 0xdbad:
case 0xdbae:
case 0xdbaf:
case 0xdda8:
case 0xdda9:
case 0xddaa:
case 0xddab:
case 0xddac:
case 0xddad:
case 0xddae:
case 0xddaf:
case 0xdfa8:
case 0xdfa9:
case 0xdfaa:
case 0xdfab:
case 0xdfac:
case 0xdfad:
case 0xdfae:
case 0xdfaf:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc1a8:
case 0xc1a9:
case 0xc1aa:
case 0xc1ab:
case 0xc1ac:
case 0xc1ad:
case 0xc1ae:
case 0xc1af:
case 0xc3a8:
case 0xc3a9:
case 0xc3aa:
case 0xc3ab:
case 0xc3ac:
case 0xc3ad:
case 0xc3ae:
case 0xc3af:
case 0xc5a8:
case 0xc5a9:
case 0xc5aa:
case 0xc5ab:
case 0xc5ac:
case 0xc5ad:
case 0xc5ae:
case 0xc5af:
case 0xc7a8:
case 0xc7a9:
case 0xc7aa:
case 0xc7ab:
case 0xc7ac:
case 0xc7ad:
case 0xc7ae:
case 0xc7af:
case 0xc9a8:
case 0xc9a9:
case 0xc9aa:
case 0xc9ab:
case 0xc9ac:
case 0xc9ad:
case 0xc9ae:
case 0xc9af:
case 0xcba8:
case 0xcba9:
case 0xcbaa:
case 0xcbab:
case 0xcbac:
case 0xcbad:
case 0xcbae:
case 0xcbaf:
case 0xcda8:
case 0xcda9:
case 0xcdaa:
case 0xcdab:
case 0xcdac:
case 0xcdad:
case 0xcdae:
case 0xcdaf:
case 0xcfa8:
case 0xcfa9:
case 0xcfaa:
case 0xcfab:
case 0xcfac:
case 0xcfad:
case 0xcfae:
case 0xcfaf:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb1a8:
case 0xb1a9:
case 0xb1aa:
case 0xb1ab:
case 0xb1ac:
case 0xb1ad:
case 0xb1ae:
case 0xb1af:
case 0xb3a8:
case 0xb3a9:
case 0xb3aa:
case 0xb3ab:
case 0xb3ac:
case 0xb3ad:
case 0xb3ae:
case 0xb3af:
case 0xb5a8:
case 0xb5a9:
case 0xb5aa:
case 0xb5ab:
case 0xb5ac:
case 0xb5ad:
case 0xb5ae:
case 0xb5af:
case 0xb7a8:
case 0xb7a9:
case 0xb7aa:
case 0xb7ab:
case 0xb7ac:
case 0xb7ad:
case 0xb7ae:
case 0xb7af:
case 0xb9a8:
case 0xb9a9:
case 0xb9aa:
case 0xb9ab:
case 0xb9ac:
case 0xb9ad:
case 0xb9ae:
case 0xb9af:
case 0xbba8:
case 0xbba9:
case 0xbbaa:
case 0xbbab:
case 0xbbac:
case 0xbbad:
case 0xbbae:
case 0xbbaf:
case 0xbda8:
case 0xbda9:
case 0xbdaa:
case 0xbdab:
case 0xbdac:
case 0xbdad:
case 0xbdae:
case 0xbdaf:
case 0xbfa8:
case 0xbfa9:
case 0xbfaa:
case 0xbfab:
case 0xbfac:
case 0xbfad:
case 0xbfae:
case 0xbfaf:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x81a8:
case 0x81a9:
case 0x81aa:
case 0x81ab:
case 0x81ac:
case 0x81ad:
case 0x81ae:
case 0x81af:
case 0x83a8:
case 0x83a9:
case 0x83aa:
case 0x83ab:
case 0x83ac:
case 0x83ad:
case 0x83ae:
case 0x83af:
case 0x85a8:
case 0x85a9:
case 0x85aa:
case 0x85ab:
case 0x85ac:
case 0x85ad:
case 0x85ae:
case 0x85af:
case 0x87a8:
case 0x87a9:
case 0x87aa:
case 0x87ab:
case 0x87ac:
case 0x87ad:
case 0x87ae:
case 0x87af:
case 0x89a8:
case 0x89a9:
case 0x89aa:
case 0x89ab:
case 0x89ac:
case 0x89ad:
case 0x89ae:
case 0x89af:
case 0x8ba8:
case 0x8ba9:
case 0x8baa:
case 0x8bab:
case 0x8bac:
case 0x8bad:
case 0x8bae:
case 0x8baf:
case 0x8da8:
case 0x8da9:
case 0x8daa:
case 0x8dab:
case 0x8dac:
case 0x8dad:
case 0x8dae:
case 0x8daf:
case 0x8fa8:
case 0x8fa9:
case 0x8faa:
case 0x8fab:
case 0x8fac:
case 0x8fad:
case 0x8fae:
case 0x8faf:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x91a8:
case 0x91a9:
case 0x91aa:
case 0x91ab:
case 0x91ac:
case 0x91ad:
case 0x91ae:
case 0x91af:
case 0x93a8:
case 0x93a9:
case 0x93aa:
case 0x93ab:
case 0x93ac:
case 0x93ad:
case 0x93ae:
case 0x93af:
case 0x95a8:
case 0x95a9:
case 0x95aa:
case 0x95ab:
case 0x95ac:
case 0x95ad:
case 0x95ae:
case 0x95af:
case 0x97a8:
case 0x97a9:
case 0x97aa:
case 0x97ab:
case 0x97ac:
case 0x97ad:
case 0x97ae:
case 0x97af:
case 0x99a8:
case 0x99a9:
case 0x99aa:
case 0x99ab:
case 0x99ac:
case 0x99ad:
case 0x99ae:
case 0x99af:
case 0x9ba8:
case 0x9ba9:
case 0x9baa:
case 0x9bab:
case 0x9bac:
case 0x9bad:
case 0x9bae:
case 0x9baf:
case 0x9da8:
case 0x9da9:
case 0x9daa:
case 0x9dab:
case 0x9dac:
case 0x9dad:
case 0x9dae:
case 0x9daf:
case 0x9fa8:
case 0x9fa9:
case 0x9faa:
case 0x9fab:
case 0x9fac:
case 0x9fad:
case 0x9fae:
case 0x9faf:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd1b0:
case 0xd1b1:
case 0xd1b2:
case 0xd1b3:
case 0xd1b4:
case 0xd1b5:
case 0xd1b6:
case 0xd1b7:
case 0xd3b0:
case 0xd3b1:
case 0xd3b2:
case 0xd3b3:
case 0xd3b4:
case 0xd3b5:
case 0xd3b6:
case 0xd3b7:
case 0xd5b0:
case 0xd5b1:
case 0xd5b2:
case 0xd5b3:
case 0xd5b4:
case 0xd5b5:
case 0xd5b6:
case 0xd5b7:
case 0xd7b0:
case 0xd7b1:
case 0xd7b2:
case 0xd7b3:
case 0xd7b4:
case 0xd7b5:
case 0xd7b6:
case 0xd7b7:
case 0xd9b0:
case 0xd9b1:
case 0xd9b2:
case 0xd9b3:
case 0xd9b4:
case 0xd9b5:
case 0xd9b6:
case 0xd9b7:
case 0xdbb0:
case 0xdbb1:
case 0xdbb2:
case 0xdbb3:
case 0xdbb4:
case 0xdbb5:
case 0xdbb6:
case 0xdbb7:
case 0xddb0:
case 0xddb1:
case 0xddb2:
case 0xddb3:
case 0xddb4:
case 0xddb5:
case 0xddb6:
case 0xddb7:
case 0xdfb0:
case 0xdfb1:
case 0xdfb2:
case 0xdfb3:
case 0xdfb4:
case 0xdfb5:
case 0xdfb6:
case 0xdfb7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc1b0:
case 0xc1b1:
case 0xc1b2:
case 0xc1b3:
case 0xc1b4:
case 0xc1b5:
case 0xc1b6:
case 0xc1b7:
case 0xc3b0:
case 0xc3b1:
case 0xc3b2:
case 0xc3b3:
case 0xc3b4:
case 0xc3b5:
case 0xc3b6:
case 0xc3b7:
case 0xc5b0:
case 0xc5b1:
case 0xc5b2:
case 0xc5b3:
case 0xc5b4:
case 0xc5b5:
case 0xc5b6:
case 0xc5b7:
case 0xc7b0:
case 0xc7b1:
case 0xc7b2:
case 0xc7b3:
case 0xc7b4:
case 0xc7b5:
case 0xc7b6:
case 0xc7b7:
case 0xc9b0:
case 0xc9b1:
case 0xc9b2:
case 0xc9b3:
case 0xc9b4:
case 0xc9b5:
case 0xc9b6:
case 0xc9b7:
case 0xcbb0:
case 0xcbb1:
case 0xcbb2:
case 0xcbb3:
case 0xcbb4:
case 0xcbb5:
case 0xcbb6:
case 0xcbb7:
case 0xcdb0:
case 0xcdb1:
case 0xcdb2:
case 0xcdb3:
case 0xcdb4:
case 0xcdb5:
case 0xcdb6:
case 0xcdb7:
case 0xcfb0:
case 0xcfb1:
case 0xcfb2:
case 0xcfb3:
case 0xcfb4:
case 0xcfb5:
case 0xcfb6:
case 0xcfb7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb1b0:
case 0xb1b1:
case 0xb1b2:
case 0xb1b3:
case 0xb1b4:
case 0xb1b5:
case 0xb1b6:
case 0xb1b7:
case 0xb3b0:
case 0xb3b1:
case 0xb3b2:
case 0xb3b3:
case 0xb3b4:
case 0xb3b5:
case 0xb3b6:
case 0xb3b7:
case 0xb5b0:
case 0xb5b1:
case 0xb5b2:
case 0xb5b3:
case 0xb5b4:
case 0xb5b5:
case 0xb5b6:
case 0xb5b7:
case 0xb7b0:
case 0xb7b1:
case 0xb7b2:
case 0xb7b3:
case 0xb7b4:
case 0xb7b5:
case 0xb7b6:
case 0xb7b7:
case 0xb9b0:
case 0xb9b1:
case 0xb9b2:
case 0xb9b3:
case 0xb9b4:
case 0xb9b5:
case 0xb9b6:
case 0xb9b7:
case 0xbbb0:
case 0xbbb1:
case 0xbbb2:
case 0xbbb3:
case 0xbbb4:
case 0xbbb5:
case 0xbbb6:
case 0xbbb7:
case 0xbdb0:
case 0xbdb1:
case 0xbdb2:
case 0xbdb3:
case 0xbdb4:
case 0xbdb5:
case 0xbdb6:
case 0xbdb7:
case 0xbfb0:
case 0xbfb1:
case 0xbfb2:
case 0xbfb3:
case 0xbfb4:
case 0xbfb5:
case 0xbfb6:
case 0xbfb7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x81b0:
case 0x81b1:
case 0x81b2:
case 0x81b3:
case 0x81b4:
case 0x81b5:
case 0x81b6:
case 0x81b7:
case 0x83b0:
case 0x83b1:
case 0x83b2:
case 0x83b3:
case 0x83b4:
case 0x83b5:
case 0x83b6:
case 0x83b7:
case 0x85b0:
case 0x85b1:
case 0x85b2:
case 0x85b3:
case 0x85b4:
case 0x85b5:
case 0x85b6:
case 0x85b7:
case 0x87b0:
case 0x87b1:
case 0x87b2:
case 0x87b3:
case 0x87b4:
case 0x87b5:
case 0x87b6:
case 0x87b7:
case 0x89b0:
case 0x89b1:
case 0x89b2:
case 0x89b3:
case 0x89b4:
case 0x89b5:
case 0x89b6:
case 0x89b7:
case 0x8bb0:
case 0x8bb1:
case 0x8bb2:
case 0x8bb3:
case 0x8bb4:
case 0x8bb5:
case 0x8bb6:
case 0x8bb7:
case 0x8db0:
case 0x8db1:
case 0x8db2:
case 0x8db3:
case 0x8db4:
case 0x8db5:
case 0x8db6:
case 0x8db7:
case 0x8fb0:
case 0x8fb1:
case 0x8fb2:
case 0x8fb3:
case 0x8fb4:
case 0x8fb5:
case 0x8fb6:
case 0x8fb7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x91b0:
case 0x91b1:
case 0x91b2:
case 0x91b3:
case 0x91b4:
case 0x91b5:
case 0x91b6:
case 0x91b7:
case 0x93b0:
case 0x93b1:
case 0x93b2:
case 0x93b3:
case 0x93b4:
case 0x93b5:
case 0x93b6:
case 0x93b7:
case 0x95b0:
case 0x95b1:
case 0x95b2:
case 0x95b3:
case 0x95b4:
case 0x95b5:
case 0x95b6:
case 0x95b7:
case 0x97b0:
case 0x97b1:
case 0x97b2:
case 0x97b3:
case 0x97b4:
case 0x97b5:
case 0x97b6:
case 0x97b7:
case 0x99b0:
case 0x99b1:
case 0x99b2:
case 0x99b3:
case 0x99b4:
case 0x99b5:
case 0x99b6:
case 0x99b7:
case 0x9bb0:
case 0x9bb1:
case 0x9bb2:
case 0x9bb3:
case 0x9bb4:
case 0x9bb5:
case 0x9bb6:
case 0x9bb7:
case 0x9db0:
case 0x9db1:
case 0x9db2:
case 0x9db3:
case 0x9db4:
case 0x9db5:
case 0x9db6:
case 0x9db7:
case 0x9fb0:
case 0x9fb1:
case 0x9fb2:
case 0x9fb3:
case 0x9fb4:
case 0x9fb5:
case 0x9fb6:
case 0x9fb7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd198:
case 0xd199:
case 0xd19a:
case 0xd19b:
case 0xd19c:
case 0xd19d:
case 0xd19e:
case 0xd19f:
case 0xd398:
case 0xd399:
case 0xd39a:
case 0xd39b:
case 0xd39c:
case 0xd39d:
case 0xd39e:
case 0xd39f:
case 0xd598:
case 0xd599:
case 0xd59a:
case 0xd59b:
case 0xd59c:
case 0xd59d:
case 0xd59e:
case 0xd59f:
case 0xd798:
case 0xd799:
case 0xd79a:
case 0xd79b:
case 0xd79c:
case 0xd79d:
case 0xd79e:
case 0xd79f:
case 0xd998:
case 0xd999:
case 0xd99a:
case 0xd99b:
case 0xd99c:
case 0xd99d:
case 0xd99e:
case 0xd99f:
case 0xdb98:
case 0xdb99:
case 0xdb9a:
case 0xdb9b:
case 0xdb9c:
case 0xdb9d:
case 0xdb9e:
case 0xdb9f:
case 0xdd98:
case 0xdd99:
case 0xdd9a:
case 0xdd9b:
case 0xdd9c:
case 0xdd9d:
case 0xdd9e:
case 0xdd9f:
case 0xdf98:
case 0xdf99:
case 0xdf9a:
case 0xdf9b:
case 0xdf9c:
case 0xdf9d:
case 0xdf9e:
case 0xdf9f:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc198:
case 0xc199:
case 0xc19a:
case 0xc19b:
case 0xc19c:
case 0xc19d:
case 0xc19e:
case 0xc19f:
case 0xc398:
case 0xc399:
case 0xc39a:
case 0xc39b:
case 0xc39c:
case 0xc39d:
case 0xc39e:
case 0xc39f:
case 0xc598:
case 0xc599:
case 0xc59a:
case 0xc59b:
case 0xc59c:
case 0xc59d:
case 0xc59e:
case 0xc59f:
case 0xc798:
case 0xc799:
case 0xc79a:
case 0xc79b:
case 0xc79c:
case 0xc79d:
case 0xc79e:
case 0xc79f:
case 0xc998:
case 0xc999:
case 0xc99a:
case 0xc99b:
case 0xc99c:
case 0xc99d:
case 0xc99e:
case 0xc99f:
case 0xcb98:
case 0xcb99:
case 0xcb9a:
case 0xcb9b:
case 0xcb9c:
case 0xcb9d:
case 0xcb9e:
case 0xcb9f:
case 0xcd98:
case 0xcd99:
case 0xcd9a:
case 0xcd9b:
case 0xcd9c:
case 0xcd9d:
case 0xcd9e:
case 0xcd9f:
case 0xcf98:
case 0xcf99:
case 0xcf9a:
case 0xcf9b:
case 0xcf9c:
case 0xcf9d:
case 0xcf9e:
case 0xcf9f:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb198:
case 0xb199:
case 0xb19a:
case 0xb19b:
case 0xb19c:
case 0xb19d:
case 0xb19e:
case 0xb19f:
case 0xb398:
case 0xb399:
case 0xb39a:
case 0xb39b:
case 0xb39c:
case 0xb39d:
case 0xb39e:
case 0xb39f:
case 0xb598:
case 0xb599:
case 0xb59a:
case 0xb59b:
case 0xb59c:
case 0xb59d:
case 0xb59e:
case 0xb59f:
case 0xb798:
case 0xb799:
case 0xb79a:
case 0xb79b:
case 0xb79c:
case 0xb79d:
case 0xb79e:
case 0xb79f:
case 0xb998:
case 0xb999:
case 0xb99a:
case 0xb99b:
case 0xb99c:
case 0xb99d:
case 0xb99e:
case 0xb99f:
case 0xbb98:
case 0xbb99:
case 0xbb9a:
case 0xbb9b:
case 0xbb9c:
case 0xbb9d:
case 0xbb9e:
case 0xbb9f:
case 0xbd98:
case 0xbd99:
case 0xbd9a:
case 0xbd9b:
case 0xbd9c:
case 0xbd9d:
case 0xbd9e:
case 0xbd9f:
case 0xbf98:
case 0xbf99:
case 0xbf9a:
case 0xbf9b:
case 0xbf9c:
case 0xbf9d:
case 0xbf9e:
case 0xbf9f:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8198:
case 0x8199:
case 0x819a:
case 0x819b:
case 0x819c:
case 0x819d:
case 0x819e:
case 0x819f:
case 0x8398:
case 0x8399:
case 0x839a:
case 0x839b:
case 0x839c:
case 0x839d:
case 0x839e:
case 0x839f:
case 0x8598:
case 0x8599:
case 0x859a:
case 0x859b:
case 0x859c:
case 0x859d:
case 0x859e:
case 0x859f:
case 0x8798:
case 0x8799:
case 0x879a:
case 0x879b:
case 0x879c:
case 0x879d:
case 0x879e:
case 0x879f:
case 0x8998:
case 0x8999:
case 0x899a:
case 0x899b:
case 0x899c:
case 0x899d:
case 0x899e:
case 0x899f:
case 0x8b98:
case 0x8b99:
case 0x8b9a:
case 0x8b9b:
case 0x8b9c:
case 0x8b9d:
case 0x8b9e:
case 0x8b9f:
case 0x8d98:
case 0x8d99:
case 0x8d9a:
case 0x8d9b:
case 0x8d9c:
case 0x8d9d:
case 0x8d9e:
case 0x8d9f:
case 0x8f98:
case 0x8f99:
case 0x8f9a:
case 0x8f9b:
case 0x8f9c:
case 0x8f9d:
case 0x8f9e:
case 0x8f9f:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9198:
case 0x9199:
case 0x919a:
case 0x919b:
case 0x919c:
case 0x919d:
case 0x919e:
case 0x919f:
case 0x9398:
case 0x9399:
case 0x939a:
case 0x939b:
case 0x939c:
case 0x939d:
case 0x939e:
case 0x939f:
case 0x9598:
case 0x9599:
case 0x959a:
case 0x959b:
case 0x959c:
case 0x959d:
case 0x959e:
case 0x959f:
case 0x9798:
case 0x9799:
case 0x979a:
case 0x979b:
case 0x979c:
case 0x979d:
case 0x979e:
case 0x979f:
case 0x9998:
case 0x9999:
case 0x999a:
case 0x999b:
case 0x999c:
case 0x999d:
case 0x999e:
case 0x999f:
case 0x9b98:
case 0x9b99:
case 0x9b9a:
case 0x9b9b:
case 0x9b9c:
case 0x9b9d:
case 0x9b9e:
case 0x9b9f:
case 0x9d98:
case 0x9d99:
case 0x9d9a:
case 0x9d9b:
case 0x9d9c:
case 0x9d9d:
case 0x9d9e:
case 0x9d9f:
case 0x9f98:
case 0x9f99:
case 0x9f9a:
case 0x9f9b:
case 0x9f9c:
case 0x9f9d:
case 0x9f9e:
case 0x9f9f:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd1a0:
case 0xd1a1:
case 0xd1a2:
case 0xd1a3:
case 0xd1a4:
case 0xd1a5:
case 0xd1a6:
case 0xd1a7:
case 0xd3a0:
case 0xd3a1:
case 0xd3a2:
case 0xd3a3:
case 0xd3a4:
case 0xd3a5:
case 0xd3a6:
case 0xd3a7:
case 0xd5a0:
case 0xd5a1:
case 0xd5a2:
case 0xd5a3:
case 0xd5a4:
case 0xd5a5:
case 0xd5a6:
case 0xd5a7:
case 0xd7a0:
case 0xd7a1:
case 0xd7a2:
case 0xd7a3:
case 0xd7a4:
case 0xd7a5:
case 0xd7a6:
case 0xd7a7:
case 0xd9a0:
case 0xd9a1:
case 0xd9a2:
case 0xd9a3:
case 0xd9a4:
case 0xd9a5:
case 0xd9a6:
case 0xd9a7:
case 0xdba0:
case 0xdba1:
case 0xdba2:
case 0xdba3:
case 0xdba4:
case 0xdba5:
case 0xdba6:
case 0xdba7:
case 0xdda0:
case 0xdda1:
case 0xdda2:
case 0xdda3:
case 0xdda4:
case 0xdda5:
case 0xdda6:
case 0xdda7:
case 0xdfa0:
case 0xdfa1:
case 0xdfa2:
case 0xdfa3:
case 0xdfa4:
case 0xdfa5:
case 0xdfa6:
case 0xdfa7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc1a0:
case 0xc1a1:
case 0xc1a2:
case 0xc1a3:
case 0xc1a4:
case 0xc1a5:
case 0xc1a6:
case 0xc1a7:
case 0xc3a0:
case 0xc3a1:
case 0xc3a2:
case 0xc3a3:
case 0xc3a4:
case 0xc3a5:
case 0xc3a6:
case 0xc3a7:
case 0xc5a0:
case 0xc5a1:
case 0xc5a2:
case 0xc5a3:
case 0xc5a4:
case 0xc5a5:
case 0xc5a6:
case 0xc5a7:
case 0xc7a0:
case 0xc7a1:
case 0xc7a2:
case 0xc7a3:
case 0xc7a4:
case 0xc7a5:
case 0xc7a6:
case 0xc7a7:
case 0xc9a0:
case 0xc9a1:
case 0xc9a2:
case 0xc9a3:
case 0xc9a4:
case 0xc9a5:
case 0xc9a6:
case 0xc9a7:
case 0xcba0:
case 0xcba1:
case 0xcba2:
case 0xcba3:
case 0xcba4:
case 0xcba5:
case 0xcba6:
case 0xcba7:
case 0xcda0:
case 0xcda1:
case 0xcda2:
case 0xcda3:
case 0xcda4:
case 0xcda5:
case 0xcda6:
case 0xcda7:
case 0xcfa0:
case 0xcfa1:
case 0xcfa2:
case 0xcfa3:
case 0xcfa4:
case 0xcfa5:
case 0xcfa6:
case 0xcfa7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb1a0:
case 0xb1a1:
case 0xb1a2:
case 0xb1a3:
case 0xb1a4:
case 0xb1a5:
case 0xb1a6:
case 0xb1a7:
case 0xb3a0:
case 0xb3a1:
case 0xb3a2:
case 0xb3a3:
case 0xb3a4:
case 0xb3a5:
case 0xb3a6:
case 0xb3a7:
case 0xb5a0:
case 0xb5a1:
case 0xb5a2:
case 0xb5a3:
case 0xb5a4:
case 0xb5a5:
case 0xb5a6:
case 0xb5a7:
case 0xb7a0:
case 0xb7a1:
case 0xb7a2:
case 0xb7a3:
case 0xb7a4:
case 0xb7a5:
case 0xb7a6:
case 0xb7a7:
case 0xb9a0:
case 0xb9a1:
case 0xb9a2:
case 0xb9a3:
case 0xb9a4:
case 0xb9a5:
case 0xb9a6:
case 0xb9a7:
case 0xbba0:
case 0xbba1:
case 0xbba2:
case 0xbba3:
case 0xbba4:
case 0xbba5:
case 0xbba6:
case 0xbba7:
case 0xbda0:
case 0xbda1:
case 0xbda2:
case 0xbda3:
case 0xbda4:
case 0xbda5:
case 0xbda6:
case 0xbda7:
case 0xbfa0:
case 0xbfa1:
case 0xbfa2:
case 0xbfa3:
case 0xbfa4:
case 0xbfa5:
case 0xbfa6:
case 0xbfa7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x81a0:
case 0x81a1:
case 0x81a2:
case 0x81a3:
case 0x81a4:
case 0x81a5:
case 0x81a6:
case 0x81a7:
case 0x83a0:
case 0x83a1:
case 0x83a2:
case 0x83a3:
case 0x83a4:
case 0x83a5:
case 0x83a6:
case 0x83a7:
case 0x85a0:
case 0x85a1:
case 0x85a2:
case 0x85a3:
case 0x85a4:
case 0x85a5:
case 0x85a6:
case 0x85a7:
case 0x87a0:
case 0x87a1:
case 0x87a2:
case 0x87a3:
case 0x87a4:
case 0x87a5:
case 0x87a6:
case 0x87a7:
case 0x89a0:
case 0x89a1:
case 0x89a2:
case 0x89a3:
case 0x89a4:
case 0x89a5:
case 0x89a6:
case 0x89a7:
case 0x8ba0:
case 0x8ba1:
case 0x8ba2:
case 0x8ba3:
case 0x8ba4:
case 0x8ba5:
case 0x8ba6:
case 0x8ba7:
case 0x8da0:
case 0x8da1:
case 0x8da2:
case 0x8da3:
case 0x8da4:
case 0x8da5:
case 0x8da6:
case 0x8da7:
case 0x8fa0:
case 0x8fa1:
case 0x8fa2:
case 0x8fa3:
case 0x8fa4:
case 0x8fa5:
case 0x8fa6:
case 0x8fa7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x91a0:
case 0x91a1:
case 0x91a2:
case 0x91a3:
case 0x91a4:
case 0x91a5:
case 0x91a6:
case 0x91a7:
case 0x93a0:
case 0x93a1:
case 0x93a2:
case 0x93a3:
case 0x93a4:
case 0x93a5:
case 0x93a6:
case 0x93a7:
case 0x95a0:
case 0x95a1:
case 0x95a2:
case 0x95a3:
case 0x95a4:
case 0x95a5:
case 0x95a6:
case 0x95a7:
case 0x97a0:
case 0x97a1:
case 0x97a2:
case 0x97a3:
case 0x97a4:
case 0x97a5:
case 0x97a6:
case 0x97a7:
case 0x99a0:
case 0x99a1:
case 0x99a2:
case 0x99a3:
case 0x99a4:
case 0x99a5:
case 0x99a6:
case 0x99a7:
case 0x9ba0:
case 0x9ba1:
case 0x9ba2:
case 0x9ba3:
case 0x9ba4:
case 0x9ba5:
case 0x9ba6:
case 0x9ba7:
case 0x9da0:
case 0x9da1:
case 0x9da2:
case 0x9da3:
case 0x9da4:
case 0x9da5:
case 0x9da6:
case 0x9da7:
case 0x9fa0:
case 0x9fa1:
case 0x9fa2:
case 0x9fa3:
case 0x9fa4:
case 0x9fa5:
case 0x9fa6:
case 0x9fa7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xb180:
case 0xb181:
case 0xb182:
case 0xb183:
case 0xb184:
case 0xb185:
case 0xb186:
case 0xb187:
case 0xb380:
case 0xb381:
case 0xb382:
case 0xb383:
case 0xb384:
case 0xb385:
case 0xb386:
case 0xb387:
case 0xb580:
case 0xb581:
case 0xb582:
case 0xb583:
case 0xb584:
case 0xb585:
case 0xb586:
case 0xb587:
case 0xb780:
case 0xb781:
case 0xb782:
case 0xb783:
case 0xb784:
case 0xb785:
case 0xb786:
case 0xb787:
case 0xb980:
case 0xb981:
case 0xb982:
case 0xb983:
case 0xb984:
case 0xb985:
case 0xb986:
case 0xb987:
case 0xbb80:
case 0xbb81:
case 0xbb82:
case 0xbb83:
case 0xbb84:
case 0xbb85:
case 0xbb86:
case 0xbb87:
case 0xbd80:
case 0xbd81:
case 0xbd82:
case 0xbd83:
case 0xbd84:
case 0xbd85:
case 0xbd86:
case 0xbd87:
case 0xbf80:
case 0xbf81:
case 0xbf82:
case 0xbf83:
case 0xbf84:
case 0xbf85:
case 0xbf86:
case 0xbf87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x23c0:
case 0x23c1:
case 0x23c2:
case 0x23c3:
case 0x23c4:
case 0x23c5:
case 0x23c6:
case 0x23c7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21c0:
case 0x21c1:
case 0x21c2:
case 0x21c3:
case 0x21c4:
case 0x21c5:
case 0x21c6:
case 0x21c7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1c0:
case 0xd1c1:
case 0xd1c2:
case 0xd1c3:
case 0xd1c4:
case 0xd1c5:
case 0xd1c6:
case 0xd1c7:
case 0xd3c0:
case 0xd3c1:
case 0xd3c2:
case 0xd3c3:
case 0xd3c4:
case 0xd3c5:
case 0xd3c6:
case 0xd3c7:
case 0xd5c0:
case 0xd5c1:
case 0xd5c2:
case 0xd5c3:
case 0xd5c4:
case 0xd5c5:
case 0xd5c6:
case 0xd5c7:
case 0xd7c0:
case 0xd7c1:
case 0xd7c2:
case 0xd7c3:
case 0xd7c4:
case 0xd7c5:
case 0xd7c6:
case 0xd7c7:
case 0xd9c0:
case 0xd9c1:
case 0xd9c2:
case 0xd9c3:
case 0xd9c4:
case 0xd9c5:
case 0xd9c6:
case 0xd9c7:
case 0xdbc0:
case 0xdbc1:
case 0xdbc2:
case 0xdbc3:
case 0xdbc4:
case 0xdbc5:
case 0xdbc6:
case 0xdbc7:
case 0xddc0:
case 0xddc1:
case 0xddc2:
case 0xddc3:
case 0xddc4:
case 0xddc5:
case 0xddc6:
case 0xddc7:
case 0xdfc0:
case 0xdfc1:
case 0xdfc2:
case 0xdfc3:
case 0xdfc4:
case 0xdfc5:
case 0xdfc6:
case 0xdfc7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1c0:
case 0xb1c1:
case 0xb1c2:
case 0xb1c3:
case 0xb1c4:
case 0xb1c5:
case 0xb1c6:
case 0xb1c7:
case 0xb3c0:
case 0xb3c1:
case 0xb3c2:
case 0xb3c3:
case 0xb3c4:
case 0xb3c5:
case 0xb3c6:
case 0xb3c7:
case 0xb5c0:
case 0xb5c1:
case 0xb5c2:
case 0xb5c3:
case 0xb5c4:
case 0xb5c5:
case 0xb5c6:
case 0xb5c7:
case 0xb7c0:
case 0xb7c1:
case 0xb7c2:
case 0xb7c3:
case 0xb7c4:
case 0xb7c5:
case 0xb7c6:
case 0xb7c7:
case 0xb9c0:
case 0xb9c1:
case 0xb9c2:
case 0xb9c3:
case 0xb9c4:
case 0xb9c5:
case 0xb9c6:
case 0xb9c7:
case 0xbbc0:
case 0xbbc1:
case 0xbbc2:
case 0xbbc3:
case 0xbbc4:
case 0xbbc5:
case 0xbbc6:
case 0xbbc7:
case 0xbdc0:
case 0xbdc1:
case 0xbdc2:
case 0xbdc3:
case 0xbdc4:
case 0xbdc5:
case 0xbdc6:
case 0xbdc7:
case 0xbfc0:
case 0xbfc1:
case 0xbfc2:
case 0xbfc3:
case 0xbfc4:
case 0xbfc5:
case 0xbfc6:
case 0xbfc7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91c0:
case 0x91c1:
case 0x91c2:
case 0x91c3:
case 0x91c4:
case 0x91c5:
case 0x91c6:
case 0x91c7:
case 0x93c0:
case 0x93c1:
case 0x93c2:
case 0x93c3:
case 0x93c4:
case 0x93c5:
case 0x93c6:
case 0x93c7:
case 0x95c0:
case 0x95c1:
case 0x95c2:
case 0x95c3:
case 0x95c4:
case 0x95c5:
case 0x95c6:
case 0x95c7:
case 0x97c0:
case 0x97c1:
case 0x97c2:
case 0x97c3:
case 0x97c4:
case 0x97c5:
case 0x97c6:
case 0x97c7:
case 0x99c0:
case 0x99c1:
case 0x99c2:
case 0x99c3:
case 0x99c4:
case 0x99c5:
case 0x99c6:
case 0x99c7:
case 0x9bc0:
case 0x9bc1:
case 0x9bc2:
case 0x9bc3:
case 0x9bc4:
case 0x9bc5:
case 0x9bc6:
case 0x9bc7:
case 0x9dc0:
case 0x9dc1:
case 0x9dc2:
case 0x9dc3:
case 0x9dc4:
case 0x9dc5:
case 0x9dc6:
case 0x9dc7:
case 0x9fc0:
case 0x9fc1:
case 0x9fc2:
case 0x9fc3:
case 0x9fc4:
case 0x9fc5:
case 0x9fc6:
case 0x9fc7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x2080:
case 0x2081:
case 0x2082:
case 0x2083:
case 0x2084:
case 0x2085:
case 0x2086:
case 0x2087:
case 0x2280:
case 0x2281:
case 0x2282:
case 0x2283:
case 0x2284:
case 0x2285:
case 0x2286:
case 0x2287:
case 0x2480:
case 0x2481:
case 0x2482:
case 0x2483:
case 0x2484:
case 0x2485:
case 0x2486:
case 0x2487:
case 0x2680:
case 0x2681:
case 0x2682:
case 0x2683:
case 0x2684:
case 0x2685:
case 0x2686:
case 0x2687:
case 0x2880:
case 0x2881:
case 0x2882:
case 0x2883:
case 0x2884:
case 0x2885:
case 0x2886:
case 0x2887:
case 0x2a80:
case 0x2a81:
case 0x2a82:
case 0x2a83:
case 0x2a84:
case 0x2a85:
case 0x2a86:
case 0x2a87:
case 0x2c80:
case 0x2c81:
case 0x2c82:
case 0x2c83:
case 0x2c84:
case 0x2c85:
case 0x2c86:
case 0x2c87:
case 0x2e80:
case 0x2e81:
case 0x2e82:
case 0x2e83:
case 0x2e84:
case 0x2e85:
case 0x2e86:
case 0x2e87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2140:
case 0x2141:
case 0x2142:
case 0x2143:
case 0x2144:
case 0x2145:
case 0x2146:
case 0x2147:
case 0x2340:
case 0x2341:
case 0x2342:
case 0x2343:
case 0x2344:
case 0x2345:
case 0x2346:
case 0x2347:
case 0x2540:
case 0x2541:
case 0x2542:
case 0x2543:
case 0x2544:
case 0x2545:
case 0x2546:
case 0x2547:
case 0x2740:
case 0x2741:
case 0x2742:
case 0x2743:
case 0x2744:
case 0x2745:
case 0x2746:
case 0x2747:
case 0x2940:
case 0x2941:
case 0x2942:
case 0x2943:
case 0x2944:
case 0x2945:
case 0x2946:
case 0x2947:
case 0x2b40:
case 0x2b41:
case 0x2b42:
case 0x2b43:
case 0x2b44:
case 0x2b45:
case 0x2b46:
case 0x2b47:
case 0x2d40:
case 0x2d41:
case 0x2d42:
case 0x2d43:
case 0x2d44:
case 0x2d45:
case 0x2d46:
case 0x2d47:
case 0x2f40:
case 0x2f41:
case 0x2f42:
case 0x2f43:
case 0x2f44:
case 0x2f45:
case 0x2f46:
case 0x2f47:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2180:
case 0x2181:
case 0x2182:
case 0x2183:
case 0x2184:
case 0x2185:
case 0x2186:
case 0x2187:
case 0x2380:
case 0x2381:
case 0x2382:
case 0x2383:
case 0x2384:
case 0x2385:
case 0x2386:
case 0x2387:
case 0x2580:
case 0x2581:
case 0x2582:
case 0x2583:
case 0x2584:
case 0x2585:
case 0x2586:
case 0x2587:
case 0x2780:
case 0x2781:
case 0x2782:
case 0x2783:
case 0x2784:
case 0x2785:
case 0x2786:
case 0x2787:
case 0x2980:
case 0x2981:
case 0x2982:
case 0x2983:
case 0x2984:
case 0x2985:
case 0x2986:
case 0x2987:
case 0x2b80:
case 0x2b81:
case 0x2b82:
case 0x2b83:
case 0x2b84:
case 0x2b85:
case 0x2b86:
case 0x2b87:
case 0x2d80:
case 0x2d81:
case 0x2d82:
case 0x2d83:
case 0x2d84:
case 0x2d85:
case 0x2d86:
case 0x2d87:
case 0x2f80:
case 0x2f81:
case 0x2f82:
case 0x2f83:
case 0x2f84:
case 0x2f85:
case 0x2f86:
case 0x2f87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20c0:
case 0x20c1:
case 0x20c2:
case 0x20c3:
case 0x20c4:
case 0x20c5:
case 0x20c6:
case 0x20c7:
case 0x22c0:
case 0x22c1:
case 0x22c2:
case 0x22c3:
case 0x22c4:
case 0x22c5:
case 0x22c6:
case 0x22c7:
case 0x24c0:
case 0x24c1:
case 0x24c2:
case 0x24c3:
case 0x24c4:
case 0x24c5:
case 0x24c6:
case 0x24c7:
case 0x26c0:
case 0x26c1:
case 0x26c2:
case 0x26c3:
case 0x26c4:
case 0x26c5:
case 0x26c6:
case 0x26c7:
case 0x28c0:
case 0x28c1:
case 0x28c2:
case 0x28c3:
case 0x28c4:
case 0x28c5:
case 0x28c6:
case 0x28c7:
case 0x2ac0:
case 0x2ac1:
case 0x2ac2:
case 0x2ac3:
case 0x2ac4:
case 0x2ac5:
case 0x2ac6:
case 0x2ac7:
case 0x2cc0:
case 0x2cc1:
case 0x2cc2:
case 0x2cc3:
case 0x2cc4:
case 0x2cc5:
case 0x2cc6:
case 0x2cc7:
case 0x2ec0:
case 0x2ec1:
case 0x2ec2:
case 0x2ec3:
case 0x2ec4:
case 0x2ec5:
case 0x2ec6:
case 0x2ec7:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x2100:
case 0x2101:
case 0x2102:
case 0x2103:
case 0x2104:
case 0x2105:
case 0x2106:
case 0x2107:
case 0x2300:
case 0x2301:
case 0x2302:
case 0x2303:
case 0x2304:
case 0x2305:
case 0x2306:
case 0x2307:
case 0x2500:
case 0x2501:
case 0x2502:
case 0x2503:
case 0x2504:
case 0x2505:
case 0x2506:
case 0x2507:
case 0x2700:
case 0x2701:
case 0x2702:
case 0x2703:
case 0x2704:
case 0x2705:
case 0x2706:
case 0x2707:
case 0x2900:
case 0x2901:
case 0x2902:
case 0x2903:
case 0x2904:
case 0x2905:
case 0x2906:
case 0x2907:
case 0x2b00:
case 0x2b01:
case 0x2b02:
case 0x2b03:
case 0x2b04:
case 0x2b05:
case 0x2b06:
case 0x2b07:
case 0x2d00:
case 0x2d01:
case 0x2d02:
case 0x2d03:
case 0x2d04:
case 0x2d05:
case 0x2d06:
case 0x2d07:
case 0x2f00:
case 0x2f01:
case 0x2f02:
case 0x2f03:
case 0x2f04:
case 0x2f05:
case 0x2f06:
case 0x2f07:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd080:
case 0xd081:
case 0xd082:
case 0xd083:
case 0xd084:
case 0xd085:
case 0xd086:
case 0xd087:
case 0xd280:
case 0xd281:
case 0xd282:
case 0xd283:
case 0xd284:
case 0xd285:
case 0xd286:
case 0xd287:
case 0xd480:
case 0xd481:
case 0xd482:
case 0xd483:
case 0xd484:
case 0xd485:
case 0xd486:
case 0xd487:
case 0xd680:
case 0xd681:
case 0xd682:
case 0xd683:
case 0xd684:
case 0xd685:
case 0xd686:
case 0xd687:
case 0xd880:
case 0xd881:
case 0xd882:
case 0xd883:
case 0xd884:
case 0xd885:
case 0xd886:
case 0xd887:
case 0xda80:
case 0xda81:
case 0xda82:
case 0xda83:
case 0xda84:
case 0xda85:
case 0xda86:
case 0xda87:
case 0xdc80:
case 0xdc81:
case 0xdc82:
case 0xdc83:
case 0xdc84:
case 0xdc85:
case 0xdc86:
case 0xdc87:
case 0xde80:
case 0xde81:
case 0xde82:
case 0xde83:
case 0xde84:
case 0xde85:
case 0xde86:
case 0xde87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xd180:
case 0xd181:
case 0xd182:
case 0xd183:
case 0xd184:
case 0xd185:
case 0xd186:
case 0xd187:
case 0xd380:
case 0xd381:
case 0xd382:
case 0xd383:
case 0xd384:
case 0xd385:
case 0xd386:
case 0xd387:
case 0xd580:
case 0xd581:
case 0xd582:
case 0xd583:
case 0xd584:
case 0xd585:
case 0xd586:
case 0xd587:
case 0xd780:
case 0xd781:
case 0xd782:
case 0xd783:
case 0xd784:
case 0xd785:
case 0xd786:
case 0xd787:
case 0xd980:
case 0xd981:
case 0xd982:
case 0xd983:
case 0xd984:
case 0xd985:
case 0xd986:
case 0xd987:
case 0xdb80:
case 0xdb81:
case 0xdb82:
case 0xdb83:
case 0xdb84:
case 0xdb85:
case 0xdb86:
case 0xdb87:
case 0xdd80:
case 0xdd81:
case 0xdd82:
case 0xdd83:
case 0xdd84:
case 0xdd85:
case 0xdd86:
case 0xdd87:
case 0xdf80:
case 0xdf81:
case 0xdf82:
case 0xdf83:
case 0xdf84:
case 0xdf85:
case 0xdf86:
case 0xdf87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADDX(src, dst);
	}
	break;

case 0xc080:
case 0xc081:
case 0xc082:
case 0xc083:
case 0xc084:
case 0xc085:
case 0xc086:
case 0xc087:
case 0xc280:
case 0xc281:
case 0xc282:
case 0xc283:
case 0xc284:
case 0xc285:
case 0xc286:
case 0xc287:
case 0xc480:
case 0xc481:
case 0xc482:
case 0xc483:
case 0xc484:
case 0xc485:
case 0xc486:
case 0xc487:
case 0xc680:
case 0xc681:
case 0xc682:
case 0xc683:
case 0xc684:
case 0xc685:
case 0xc686:
case 0xc687:
case 0xc880:
case 0xc881:
case 0xc882:
case 0xc883:
case 0xc884:
case 0xc885:
case 0xc886:
case 0xc887:
case 0xca80:
case 0xca81:
case 0xca82:
case 0xca83:
case 0xca84:
case 0xca85:
case 0xca86:
case 0xca87:
case 0xcc80:
case 0xcc81:
case 0xcc82:
case 0xcc83:
case 0xcc84:
case 0xcc85:
case 0xcc86:
case 0xcc87:
case 0xce80:
case 0xce81:
case 0xce82:
case 0xce83:
case 0xce84:
case 0xce85:
case 0xce86:
case 0xce87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb080:
case 0xb081:
case 0xb082:
case 0xb083:
case 0xb084:
case 0xb085:
case 0xb086:
case 0xb087:
case 0xb280:
case 0xb281:
case 0xb282:
case 0xb283:
case 0xb284:
case 0xb285:
case 0xb286:
case 0xb287:
case 0xb480:
case 0xb481:
case 0xb482:
case 0xb483:
case 0xb484:
case 0xb485:
case 0xb486:
case 0xb487:
case 0xb680:
case 0xb681:
case 0xb682:
case 0xb683:
case 0xb684:
case 0xb685:
case 0xb686:
case 0xb687:
case 0xb880:
case 0xb881:
case 0xb882:
case 0xb883:
case 0xb884:
case 0xb885:
case 0xb886:
case 0xb887:
case 0xba80:
case 0xba81:
case 0xba82:
case 0xba83:
case 0xba84:
case 0xba85:
case 0xba86:
case 0xba87:
case 0xbc80:
case 0xbc81:
case 0xbc82:
case 0xbc83:
case 0xbc84:
case 0xbc85:
case 0xbc86:
case 0xbc87:
case 0xbe80:
case 0xbe81:
case 0xbe82:
case 0xbe83:
case 0xbe84:
case 0xbe85:
case 0xbe86:
case 0xbe87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x2000:
case 0x2001:
case 0x2002:
case 0x2003:
case 0x2004:
case 0x2005:
case 0x2006:
case 0x2007:
case 0x2200:
case 0x2201:
case 0x2202:
case 0x2203:
case 0x2204:
case 0x2205:
case 0x2206:
case 0x2207:
case 0x2400:
case 0x2401:
case 0x2402:
case 0x2403:
case 0x2404:
case 0x2405:
case 0x2406:
case 0x2407:
case 0x2600:
case 0x2601:
case 0x2602:
case 0x2603:
case 0x2604:
case 0x2605:
case 0x2606:
case 0x2607:
case 0x2800:
case 0x2801:
case 0x2802:
case 0x2803:
case 0x2804:
case 0x2805:
case 0x2806:
case 0x2807:
case 0x2a00:
case 0x2a01:
case 0x2a02:
case 0x2a03:
case 0x2a04:
case 0x2a05:
case 0x2a06:
case 0x2a07:
case 0x2c00:
case 0x2c01:
case 0x2c02:
case 0x2c03:
case 0x2c04:
case 0x2c05:
case 0x2c06:
case 0x2c07:
case 0x2e00:
case 0x2e01:
case 0x2e02:
case 0x2e03:
case 0x2e04:
case 0x2e05:
case 0x2e06:
case 0x2e07:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8080:
case 0x8081:
case 0x8082:
case 0x8083:
case 0x8084:
case 0x8085:
case 0x8086:
case 0x8087:
case 0x8280:
case 0x8281:
case 0x8282:
case 0x8283:
case 0x8284:
case 0x8285:
case 0x8286:
case 0x8287:
case 0x8480:
case 0x8481:
case 0x8482:
case 0x8483:
case 0x8484:
case 0x8485:
case 0x8486:
case 0x8487:
case 0x8680:
case 0x8681:
case 0x8682:
case 0x8683:
case 0x8684:
case 0x8685:
case 0x8686:
case 0x8687:
case 0x8880:
case 0x8881:
case 0x8882:
case 0x8883:
case 0x8884:
case 0x8885:
case 0x8886:
case 0x8887:
case 0x8a80:
case 0x8a81:
case 0x8a82:
case 0x8a83:
case 0x8a84:
case 0x8a85:
case 0x8a86:
case 0x8a87:
case 0x8c80:
case 0x8c81:
case 0x8c82:
case 0x8c83:
case 0x8c84:
case 0x8c85:
case 0x8c86:
case 0x8c87:
case 0x8e80:
case 0x8e81:
case 0x8e82:
case 0x8e83:
case 0x8e84:
case 0x8e85:
case 0x8e86:
case 0x8e87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9080:
case 0x9081:
case 0x9082:
case 0x9083:
case 0x9084:
case 0x9085:
case 0x9086:
case 0x9087:
case 0x9280:
case 0x9281:
case 0x9282:
case 0x9283:
case 0x9284:
case 0x9285:
case 0x9286:
case 0x9287:
case 0x9480:
case 0x9481:
case 0x9482:
case 0x9483:
case 0x9484:
case 0x9485:
case 0x9486:
case 0x9487:
case 0x9680:
case 0x9681:
case 0x9682:
case 0x9683:
case 0x9684:
case 0x9685:
case 0x9686:
case 0x9687:
case 0x9880:
case 0x9881:
case 0x9882:
case 0x9883:
case 0x9884:
case 0x9885:
case 0x9886:
case 0x9887:
case 0x9a80:
case 0x9a81:
case 0x9a82:
case 0x9a83:
case 0x9a84:
case 0x9a85:
case 0x9a86:
case 0x9a87:
case 0x9c80:
case 0x9c81:
case 0x9c82:
case 0x9c83:
case 0x9c84:
case 0x9c85:
case 0x9c86:
case 0x9c87:
case 0x9e80:
case 0x9e81:
case 0x9e82:
case 0x9e83:
case 0x9e84:
case 0x9e85:
case 0x9e86:
case 0x9e87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x9180:
case 0x9181:
case 0x9182:
case 0x9183:
case 0x9184:
case 0x9185:
case 0x9186:
case 0x9187:
case 0x9380:
case 0x9381:
case 0x9382:
case 0x9383:
case 0x9384:
case 0x9385:
case 0x9386:
case 0x9387:
case 0x9580:
case 0x9581:
case 0x9582:
case 0x9583:
case 0x9584:
case 0x9585:
case 0x9586:
case 0x9587:
case 0x9780:
case 0x9781:
case 0x9782:
case 0x9783:
case 0x9784:
case 0x9785:
case 0x9786:
case 0x9787:
case 0x9980:
case 0x9981:
case 0x9982:
case 0x9983:
case 0x9984:
case 0x9985:
case 0x9986:
case 0x9987:
case 0x9b80:
case 0x9b81:
case 0x9b82:
case 0x9b83:
case 0x9b84:
case 0x9b85:
case 0x9b86:
case 0x9b87:
case 0x9d80:
case 0x9d81:
case 0x9d82:
case 0x9d83:
case 0x9d84:
case 0x9d85:
case 0x9d86:
case 0x9d87:
case 0x9f80:
case 0x9f81:
case 0x9f82:
case 0x9f83:
case 0x9f84:
case 0x9f85:
case 0x9f86:
case 0x9f87:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUBX(src, dst);
	}
	break;

case 0x2040:
case 0x2041:
case 0x2042:
case 0x2043:
case 0x2044:
case 0x2045:
case 0x2046:
case 0x2047:
case 0x2240:
case 0x2241:
case 0x2242:
case 0x2243:
case 0x2244:
case 0x2245:
case 0x2246:
case 0x2247:
case 0x2440:
case 0x2441:
case 0x2442:
case 0x2443:
case 0x2444:
case 0x2445:
case 0x2446:
case 0x2447:
case 0x2640:
case 0x2641:
case 0x2642:
case 0x2643:
case 0x2644:
case 0x2645:
case 0x2646:
case 0x2647:
case 0x2840:
case 0x2841:
case 0x2842:
case 0x2843:
case 0x2844:
case 0x2845:
case 0x2846:
case 0x2847:
case 0x2a40:
case 0x2a41:
case 0x2a42:
case 0x2a43:
case 0x2a44:
case 0x2a45:
case 0x2a46:
case 0x2a47:
case 0x2c40:
case 0x2c41:
case 0x2c42:
case 0x2c43:
case 0x2c44:
case 0x2c45:
case 0x2c46:
case 0x2c47:
case 0x2e40:
case 0x2e41:
case 0x2e42:
case 0x2e43:
case 0x2e44:
case 0x2e45:
case 0x2e46:
case 0x2e47:
	{
	 HAM<uint32, DATA_REG_DIR> src(this, instr_b2_b0); MOVEA(src, instr_b11_b9);
	}
	break;

case 0xe1a0:
case 0xe1a1:
case 0xe1a2:
case 0xe1a3:
case 0xe1a4:
case 0xe1a5:
case 0xe1a6:
case 0xe1a7:
case 0xe3a0:
case 0xe3a1:
case 0xe3a2:
case 0xe3a3:
case 0xe3a4:
case 0xe3a5:
case 0xe3a6:
case 0xe3a7:
case 0xe5a0:
case 0xe5a1:
case 0xe5a2:
case 0xe5a3:
case 0xe5a4:
case 0xe5a5:
case 0xe5a6:
case 0xe5a7:
case 0xe7a0:
case 0xe7a1:
case 0xe7a2:
case 0xe7a3:
case 0xe7a4:
case 0xe7a5:
case 0xe7a6:
case 0xe7a7:
case 0xe9a0:
case 0xe9a1:
case 0xe9a2:
case 0xe9a3:
case 0xe9a4:
case 0xe9a5:
case 0xe9a6:
case 0xe9a7:
case 0xeba0:
case 0xeba1:
case 0xeba2:
case 0xeba3:
case 0xeba4:
case 0xeba5:
case 0xeba6:
case 0xeba7:
case 0xeda0:
case 0xeda1:
case 0xeda2:
case 0xeda3:
case 0xeda4:
case 0xeda5:
case 0xeda6:
case 0xeda7:
case 0xefa0:
case 0xefa1:
case 0xefa2:
case 0xefa3:
case 0xefa4:
case 0xefa5:
case 0xefa6:
case 0xefa7:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ASL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe180:
case 0xe181:
case 0xe182:
case 0xe183:
case 0xe184:
case 0xe185:
case 0xe186:
case 0xe187:
case 0xe380:
case 0xe381:
case 0xe382:
case 0xe383:
case 0xe384:
case 0xe385:
case 0xe386:
case 0xe387:
case 0xe580:
case 0xe581:
case 0xe582:
case 0xe583:
case 0xe584:
case 0xe585:
case 0xe586:
case 0xe587:
case 0xe780:
case 0xe781:
case 0xe782:
case 0xe783:
case 0xe784:
case 0xe785:
case 0xe786:
case 0xe787:
case 0xe980:
case 0xe981:
case 0xe982:
case 0xe983:
case 0xe984:
case 0xe985:
case 0xe986:
case 0xe987:
case 0xeb80:
case 0xeb81:
case 0xeb82:
case 0xeb83:
case 0xeb84:
case 0xeb85:
case 0xeb86:
case 0xeb87:
case 0xed80:
case 0xed81:
case 0xed82:
case 0xed83:
case 0xed84:
case 0xed85:
case 0xed86:
case 0xed87:
case 0xef80:
case 0xef81:
case 0xef82:
case 0xef83:
case 0xef84:
case 0xef85:
case 0xef86:
case 0xef87:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ASL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe0a0:
case 0xe0a1:
case 0xe0a2:
case 0xe0a3:
case 0xe0a4:
case 0xe0a5:
case 0xe0a6:
case 0xe0a7:
case 0xe2a0:
case 0xe2a1:
case 0xe2a2:
case 0xe2a3:
case 0xe2a4:
case 0xe2a5:
case 0xe2a6:
case 0xe2a7:
case 0xe4a0:
case 0xe4a1:
case 0xe4a2:
case 0xe4a3:
case 0xe4a4:
case 0xe4a5:
case 0xe4a6:
case 0xe4a7:
case 0xe6a0:
case 0xe6a1:
case 0xe6a2:
case 0xe6a3:
case 0xe6a4:
case 0xe6a5:
case 0xe6a6:
case 0xe6a7:
case 0xe8a0:
case 0xe8a1:
case 0xe8a2:
case 0xe8a3:
case 0xe8a4:
case 0xe8a5:
case 0xe8a6:
case 0xe8a7:
case 0xeaa0:
case 0xeaa1:
case 0xeaa2:
case 0xeaa3:
case 0xeaa4:
case 0xeaa5:
case 0xeaa6:
case 0xeaa7:
case 0xeca0:
case 0xeca1:
case 0xeca2:
case 0xeca3:
case 0xeca4:
case 0xeca5:
case 0xeca6:
case 0xeca7:
case 0xeea0:
case 0xeea1:
case 0xeea2:
case 0xeea3:
case 0xeea4:
case 0xeea5:
case 0xeea6:
case 0xeea7:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ASR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe080:
case 0xe081:
case 0xe082:
case 0xe083:
case 0xe084:
case 0xe085:
case 0xe086:
case 0xe087:
case 0xe280:
case 0xe281:
case 0xe282:
case 0xe283:
case 0xe284:
case 0xe285:
case 0xe286:
case 0xe287:
case 0xe480:
case 0xe481:
case 0xe482:
case 0xe483:
case 0xe484:
case 0xe485:
case 0xe486:
case 0xe487:
case 0xe680:
case 0xe681:
case 0xe682:
case 0xe683:
case 0xe684:
case 0xe685:
case 0xe686:
case 0xe687:
case 0xe880:
case 0xe881:
case 0xe882:
case 0xe883:
case 0xe884:
case 0xe885:
case 0xe886:
case 0xe887:
case 0xea80:
case 0xea81:
case 0xea82:
case 0xea83:
case 0xea84:
case 0xea85:
case 0xea86:
case 0xea87:
case 0xec80:
case 0xec81:
case 0xec82:
case 0xec83:
case 0xec84:
case 0xec85:
case 0xec86:
case 0xec87:
case 0xee80:
case 0xee81:
case 0xee82:
case 0xee83:
case 0xee84:
case 0xee85:
case 0xee86:
case 0xee87:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ASR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0x0140:
case 0x0141:
case 0x0142:
case 0x0143:
case 0x0144:
case 0x0145:
case 0x0146:
case 0x0147:
case 0x0340:
case 0x0341:
case 0x0342:
case 0x0343:
case 0x0344:
case 0x0345:
case 0x0346:
case 0x0347:
case 0x0540:
case 0x0541:
case 0x0542:
case 0x0543:
case 0x0544:
case 0x0545:
case 0x0546:
case 0x0547:
case 0x0740:
case 0x0741:
case 0x0742:
case 0x0743:
case 0x0744:
case 0x0745:
case 0x0746:
case 0x0747:
case 0x0940:
case 0x0941:
case 0x0942:
case 0x0943:
case 0x0944:
case 0x0945:
case 0x0946:
case 0x0947:
case 0x0b40:
case 0x0b41:
case 0x0b42:
case 0x0b43:
case 0x0b44:
case 0x0b45:
case 0x0b46:
case 0x0b47:
case 0x0d40:
case 0x0d41:
case 0x0d42:
case 0x0d43:
case 0x0d44:
case 0x0d45:
case 0x0d46:
case 0x0d47:
case 0x0f40:
case 0x0f41:
case 0x0f42:
case 0x0f43:
case 0x0f44:
case 0x0f45:
case 0x0f46:
case 0x0f47:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); BCHG(targ, D[instr_b11_b9]);
	}
	break;

case 0x0180:
case 0x0181:
case 0x0182:
case 0x0183:
case 0x0184:
case 0x0185:
case 0x0186:
case 0x0187:
case 0x0380:
case 0x0381:
case 0x0382:
case 0x0383:
case 0x0384:
case 0x0385:
case 0x0386:
case 0x0387:
case 0x0580:
case 0x0581:
case 0x0582:
case 0x0583:
case 0x0584:
case 0x0585:
case 0x0586:
case 0x0587:
case 0x0780:
case 0x0781:
case 0x0782:
case 0x0783:
case 0x0784:
case 0x0785:
case 0x0786:
case 0x0787:
case 0x0980:
case 0x0981:
case 0x0982:
case 0x0983:
case 0x0984:
case 0x0985:
case 0x0986:
case 0x0987:
case 0x0b80:
case 0x0b81:
case 0x0b82:
case 0x0b83:
case 0x0b84:
case 0x0b85:
case 0x0b86:
case 0x0b87:
case 0x0d80:
case 0x0d81:
case 0x0d82:
case 0x0d83:
case 0x0d84:
case 0x0d85:
case 0x0d86:
case 0x0d87:
case 0x0f80:
case 0x0f81:
case 0x0f82:
case 0x0f83:
case 0x0f84:
case 0x0f85:
case 0x0f86:
case 0x0f87:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); BCLR(targ, D[instr_b11_b9]);
	}
	break;

case 0x01c0:
case 0x01c1:
case 0x01c2:
case 0x01c3:
case 0x01c4:
case 0x01c5:
case 0x01c6:
case 0x01c7:
case 0x03c0:
case 0x03c1:
case 0x03c2:
case 0x03c3:
case 0x03c4:
case 0x03c5:
case 0x03c6:
case 0x03c7:
case 0x05c0:
case 0x05c1:
case 0x05c2:
case 0x05c3:
case 0x05c4:
case 0x05c5:
case 0x05c6:
case 0x05c7:
case 0x07c0:
case 0x07c1:
case 0x07c2:
case 0x07c3:
case 0x07c4:
case 0x07c5:
case 0x07c6:
case 0x07c7:
case 0x09c0:
case 0x09c1:
case 0x09c2:
case 0x09c3:
case 0x09c4:
case 0x09c5:
case 0x09c6:
case 0x09c7:
case 0x0bc0:
case 0x0bc1:
case 0x0bc2:
case 0x0bc3:
case 0x0bc4:
case 0x0bc5:
case 0x0bc6:
case 0x0bc7:
case 0x0dc0:
case 0x0dc1:
case 0x0dc2:
case 0x0dc3:
case 0x0dc4:
case 0x0dc5:
case 0x0dc6:
case 0x0dc7:
case 0x0fc0:
case 0x0fc1:
case 0x0fc2:
case 0x0fc3:
case 0x0fc4:
case 0x0fc5:
case 0x0fc6:
case 0x0fc7:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); BSET(targ, D[instr_b11_b9]);
	}
	break;

case 0x0100:
case 0x0101:
case 0x0102:
case 0x0103:
case 0x0104:
case 0x0105:
case 0x0106:
case 0x0107:
case 0x0300:
case 0x0301:
case 0x0302:
case 0x0303:
case 0x0304:
case 0x0305:
case 0x0306:
case 0x0307:
case 0x0500:
case 0x0501:
case 0x0502:
case 0x0503:
case 0x0504:
case 0x0505:
case 0x0506:
case 0x0507:
case 0x0700:
case 0x0701:
case 0x0702:
case 0x0703:
case 0x0704:
case 0x0705:
case 0x0706:
case 0x0707:
case 0x0900:
case 0x0901:
case 0x0902:
case 0x0903:
case 0x0904:
case 0x0905:
case 0x0906:
case 0x0907:
case 0x0b00:
case 0x0b01:
case 0x0b02:
case 0x0b03:
case 0x0b04:
case 0x0b05:
case 0x0b06:
case 0x0b07:
case 0x0d00:
case 0x0d01:
case 0x0d02:
case 0x0d03:
case 0x0d04:
case 0x0d05:
case 0x0d06:
case 0x0d07:
case 0x0f00:
case 0x0f01:
case 0x0f02:
case 0x0f03:
case 0x0f04:
case 0x0f05:
case 0x0f06:
case 0x0f07:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0xe1a8:
case 0xe1a9:
case 0xe1aa:
case 0xe1ab:
case 0xe1ac:
case 0xe1ad:
case 0xe1ae:
case 0xe1af:
case 0xe3a8:
case 0xe3a9:
case 0xe3aa:
case 0xe3ab:
case 0xe3ac:
case 0xe3ad:
case 0xe3ae:
case 0xe3af:
case 0xe5a8:
case 0xe5a9:
case 0xe5aa:
case 0xe5ab:
case 0xe5ac:
case 0xe5ad:
case 0xe5ae:
case 0xe5af:
case 0xe7a8:
case 0xe7a9:
case 0xe7aa:
case 0xe7ab:
case 0xe7ac:
case 0xe7ad:
case 0xe7ae:
case 0xe7af:
case 0xe9a8:
case 0xe9a9:
case 0xe9aa:
case 0xe9ab:
case 0xe9ac:
case 0xe9ad:
case 0xe9ae:
case 0xe9af:
case 0xeba8:
case 0xeba9:
case 0xebaa:
case 0xebab:
case 0xebac:
case 0xebad:
case 0xebae:
case 0xebaf:
case 0xeda8:
case 0xeda9:
case 0xedaa:
case 0xedab:
case 0xedac:
case 0xedad:
case 0xedae:
case 0xedaf:
case 0xefa8:
case 0xefa9:
case 0xefaa:
case 0xefab:
case 0xefac:
case 0xefad:
case 0xefae:
case 0xefaf:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); LSL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe188:
case 0xe189:
case 0xe18a:
case 0xe18b:
case 0xe18c:
case 0xe18d:
case 0xe18e:
case 0xe18f:
case 0xe388:
case 0xe389:
case 0xe38a:
case 0xe38b:
case 0xe38c:
case 0xe38d:
case 0xe38e:
case 0xe38f:
case 0xe588:
case 0xe589:
case 0xe58a:
case 0xe58b:
case 0xe58c:
case 0xe58d:
case 0xe58e:
case 0xe58f:
case 0xe788:
case 0xe789:
case 0xe78a:
case 0xe78b:
case 0xe78c:
case 0xe78d:
case 0xe78e:
case 0xe78f:
case 0xe988:
case 0xe989:
case 0xe98a:
case 0xe98b:
case 0xe98c:
case 0xe98d:
case 0xe98e:
case 0xe98f:
case 0xeb88:
case 0xeb89:
case 0xeb8a:
case 0xeb8b:
case 0xeb8c:
case 0xeb8d:
case 0xeb8e:
case 0xeb8f:
case 0xed88:
case 0xed89:
case 0xed8a:
case 0xed8b:
case 0xed8c:
case 0xed8d:
case 0xed8e:
case 0xed8f:
case 0xef88:
case 0xef89:
case 0xef8a:
case 0xef8b:
case 0xef8c:
case 0xef8d:
case 0xef8e:
case 0xef8f:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); LSL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe0a8:
case 0xe0a9:
case 0xe0aa:
case 0xe0ab:
case 0xe0ac:
case 0xe0ad:
case 0xe0ae:
case 0xe0af:
case 0xe2a8:
case 0xe2a9:
case 0xe2aa:
case 0xe2ab:
case 0xe2ac:
case 0xe2ad:
case 0xe2ae:
case 0xe2af:
case 0xe4a8:
case 0xe4a9:
case 0xe4aa:
case 0xe4ab:
case 0xe4ac:
case 0xe4ad:
case 0xe4ae:
case 0xe4af:
case 0xe6a8:
case 0xe6a9:
case 0xe6aa:
case 0xe6ab:
case 0xe6ac:
case 0xe6ad:
case 0xe6ae:
case 0xe6af:
case 0xe8a8:
case 0xe8a9:
case 0xe8aa:
case 0xe8ab:
case 0xe8ac:
case 0xe8ad:
case 0xe8ae:
case 0xe8af:
case 0xeaa8:
case 0xeaa9:
case 0xeaaa:
case 0xeaab:
case 0xeaac:
case 0xeaad:
case 0xeaae:
case 0xeaaf:
case 0xeca8:
case 0xeca9:
case 0xecaa:
case 0xecab:
case 0xecac:
case 0xecad:
case 0xecae:
case 0xecaf:
case 0xeea8:
case 0xeea9:
case 0xeeaa:
case 0xeeab:
case 0xeeac:
case 0xeead:
case 0xeeae:
case 0xeeaf:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); LSR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe088:
case 0xe089:
case 0xe08a:
case 0xe08b:
case 0xe08c:
case 0xe08d:
case 0xe08e:
case 0xe08f:
case 0xe288:
case 0xe289:
case 0xe28a:
case 0xe28b:
case 0xe28c:
case 0xe28d:
case 0xe28e:
case 0xe28f:
case 0xe488:
case 0xe489:
case 0xe48a:
case 0xe48b:
case 0xe48c:
case 0xe48d:
case 0xe48e:
case 0xe48f:
case 0xe688:
case 0xe689:
case 0xe68a:
case 0xe68b:
case 0xe68c:
case 0xe68d:
case 0xe68e:
case 0xe68f:
case 0xe888:
case 0xe889:
case 0xe88a:
case 0xe88b:
case 0xe88c:
case 0xe88d:
case 0xe88e:
case 0xe88f:
case 0xea88:
case 0xea89:
case 0xea8a:
case 0xea8b:
case 0xea8c:
case 0xea8d:
case 0xea8e:
case 0xea8f:
case 0xec88:
case 0xec89:
case 0xec8a:
case 0xec8b:
case 0xec8c:
case 0xec8d:
case 0xec8e:
case 0xec8f:
case 0xee88:
case 0xee89:
case 0xee8a:
case 0xee8b:
case 0xee8c:
case 0xee8d:
case 0xee8e:
case 0xee8f:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); LSR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe1b8:
case 0xe1b9:
case 0xe1ba:
case 0xe1bb:
case 0xe1bc:
case 0xe1bd:
case 0xe1be:
case 0xe1bf:
case 0xe3b8:
case 0xe3b9:
case 0xe3ba:
case 0xe3bb:
case 0xe3bc:
case 0xe3bd:
case 0xe3be:
case 0xe3bf:
case 0xe5b8:
case 0xe5b9:
case 0xe5ba:
case 0xe5bb:
case 0xe5bc:
case 0xe5bd:
case 0xe5be:
case 0xe5bf:
case 0xe7b8:
case 0xe7b9:
case 0xe7ba:
case 0xe7bb:
case 0xe7bc:
case 0xe7bd:
case 0xe7be:
case 0xe7bf:
case 0xe9b8:
case 0xe9b9:
case 0xe9ba:
case 0xe9bb:
case 0xe9bc:
case 0xe9bd:
case 0xe9be:
case 0xe9bf:
case 0xebb8:
case 0xebb9:
case 0xebba:
case 0xebbb:
case 0xebbc:
case 0xebbd:
case 0xebbe:
case 0xebbf:
case 0xedb8:
case 0xedb9:
case 0xedba:
case 0xedbb:
case 0xedbc:
case 0xedbd:
case 0xedbe:
case 0xedbf:
case 0xefb8:
case 0xefb9:
case 0xefba:
case 0xefbb:
case 0xefbc:
case 0xefbd:
case 0xefbe:
case 0xefbf:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ROL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe198:
case 0xe199:
case 0xe19a:
case 0xe19b:
case 0xe19c:
case 0xe19d:
case 0xe19e:
case 0xe19f:
case 0xe398:
case 0xe399:
case 0xe39a:
case 0xe39b:
case 0xe39c:
case 0xe39d:
case 0xe39e:
case 0xe39f:
case 0xe598:
case 0xe599:
case 0xe59a:
case 0xe59b:
case 0xe59c:
case 0xe59d:
case 0xe59e:
case 0xe59f:
case 0xe798:
case 0xe799:
case 0xe79a:
case 0xe79b:
case 0xe79c:
case 0xe79d:
case 0xe79e:
case 0xe79f:
case 0xe998:
case 0xe999:
case 0xe99a:
case 0xe99b:
case 0xe99c:
case 0xe99d:
case 0xe99e:
case 0xe99f:
case 0xeb98:
case 0xeb99:
case 0xeb9a:
case 0xeb9b:
case 0xeb9c:
case 0xeb9d:
case 0xeb9e:
case 0xeb9f:
case 0xed98:
case 0xed99:
case 0xed9a:
case 0xed9b:
case 0xed9c:
case 0xed9d:
case 0xed9e:
case 0xed9f:
case 0xef98:
case 0xef99:
case 0xef9a:
case 0xef9b:
case 0xef9c:
case 0xef9d:
case 0xef9e:
case 0xef9f:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ROL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe0b8:
case 0xe0b9:
case 0xe0ba:
case 0xe0bb:
case 0xe0bc:
case 0xe0bd:
case 0xe0be:
case 0xe0bf:
case 0xe2b8:
case 0xe2b9:
case 0xe2ba:
case 0xe2bb:
case 0xe2bc:
case 0xe2bd:
case 0xe2be:
case 0xe2bf:
case 0xe4b8:
case 0xe4b9:
case 0xe4ba:
case 0xe4bb:
case 0xe4bc:
case 0xe4bd:
case 0xe4be:
case 0xe4bf:
case 0xe6b8:
case 0xe6b9:
case 0xe6ba:
case 0xe6bb:
case 0xe6bc:
case 0xe6bd:
case 0xe6be:
case 0xe6bf:
case 0xe8b8:
case 0xe8b9:
case 0xe8ba:
case 0xe8bb:
case 0xe8bc:
case 0xe8bd:
case 0xe8be:
case 0xe8bf:
case 0xeab8:
case 0xeab9:
case 0xeaba:
case 0xeabb:
case 0xeabc:
case 0xeabd:
case 0xeabe:
case 0xeabf:
case 0xecb8:
case 0xecb9:
case 0xecba:
case 0xecbb:
case 0xecbc:
case 0xecbd:
case 0xecbe:
case 0xecbf:
case 0xeeb8:
case 0xeeb9:
case 0xeeba:
case 0xeebb:
case 0xeebc:
case 0xeebd:
case 0xeebe:
case 0xeebf:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ROR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe098:
case 0xe099:
case 0xe09a:
case 0xe09b:
case 0xe09c:
case 0xe09d:
case 0xe09e:
case 0xe09f:
case 0xe298:
case 0xe299:
case 0xe29a:
case 0xe29b:
case 0xe29c:
case 0xe29d:
case 0xe29e:
case 0xe29f:
case 0xe498:
case 0xe499:
case 0xe49a:
case 0xe49b:
case 0xe49c:
case 0xe49d:
case 0xe49e:
case 0xe49f:
case 0xe698:
case 0xe699:
case 0xe69a:
case 0xe69b:
case 0xe69c:
case 0xe69d:
case 0xe69e:
case 0xe69f:
case 0xe898:
case 0xe899:
case 0xe89a:
case 0xe89b:
case 0xe89c:
case 0xe89d:
case 0xe89e:
case 0xe89f:
case 0xea98:
case 0xea99:
case 0xea9a:
case 0xea9b:
case 0xea9c:
case 0xea9d:
case 0xea9e:
case 0xea9f:
case 0xec98:
case 0xec99:
case 0xec9a:
case 0xec9b:
case 0xec9c:
case 0xec9d:
case 0xec9e:
case 0xec9f:
case 0xee98:
case 0xee99:
case 0xee9a:
case 0xee9b:
case 0xee9c:
case 0xee9d:
case 0xee9e:
case 0xee9f:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ROR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe1b0:
case 0xe1b1:
case 0xe1b2:
case 0xe1b3:
case 0xe1b4:
case 0xe1b5:
case 0xe1b6:
case 0xe1b7:
case 0xe3b0:
case 0xe3b1:
case 0xe3b2:
case 0xe3b3:
case 0xe3b4:
case 0xe3b5:
case 0xe3b6:
case 0xe3b7:
case 0xe5b0:
case 0xe5b1:
case 0xe5b2:
case 0xe5b3:
case 0xe5b4:
case 0xe5b5:
case 0xe5b6:
case 0xe5b7:
case 0xe7b0:
case 0xe7b1:
case 0xe7b2:
case 0xe7b3:
case 0xe7b4:
case 0xe7b5:
case 0xe7b6:
case 0xe7b7:
case 0xe9b0:
case 0xe9b1:
case 0xe9b2:
case 0xe9b3:
case 0xe9b4:
case 0xe9b5:
case 0xe9b6:
case 0xe9b7:
case 0xebb0:
case 0xebb1:
case 0xebb2:
case 0xebb3:
case 0xebb4:
case 0xebb5:
case 0xebb6:
case 0xebb7:
case 0xedb0:
case 0xedb1:
case 0xedb2:
case 0xedb3:
case 0xedb4:
case 0xedb5:
case 0xedb6:
case 0xedb7:
case 0xefb0:
case 0xefb1:
case 0xefb2:
case 0xefb3:
case 0xefb4:
case 0xefb5:
case 0xefb6:
case 0xefb7:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ROXL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe190:
case 0xe191:
case 0xe192:
case 0xe193:
case 0xe194:
case 0xe195:
case 0xe196:
case 0xe197:
case 0xe390:
case 0xe391:
case 0xe392:
case 0xe393:
case 0xe394:
case 0xe395:
case 0xe396:
case 0xe397:
case 0xe590:
case 0xe591:
case 0xe592:
case 0xe593:
case 0xe594:
case 0xe595:
case 0xe596:
case 0xe597:
case 0xe790:
case 0xe791:
case 0xe792:
case 0xe793:
case 0xe794:
case 0xe795:
case 0xe796:
case 0xe797:
case 0xe990:
case 0xe991:
case 0xe992:
case 0xe993:
case 0xe994:
case 0xe995:
case 0xe996:
case 0xe997:
case 0xeb90:
case 0xeb91:
case 0xeb92:
case 0xeb93:
case 0xeb94:
case 0xeb95:
case 0xeb96:
case 0xeb97:
case 0xed90:
case 0xed91:
case 0xed92:
case 0xed93:
case 0xed94:
case 0xed95:
case 0xed96:
case 0xed97:
case 0xef90:
case 0xef91:
case 0xef92:
case 0xef93:
case 0xef94:
case 0xef95:
case 0xef96:
case 0xef97:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ROXL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe0b0:
case 0xe0b1:
case 0xe0b2:
case 0xe0b3:
case 0xe0b4:
case 0xe0b5:
case 0xe0b6:
case 0xe0b7:
case 0xe2b0:
case 0xe2b1:
case 0xe2b2:
case 0xe2b3:
case 0xe2b4:
case 0xe2b5:
case 0xe2b6:
case 0xe2b7:
case 0xe4b0:
case 0xe4b1:
case 0xe4b2:
case 0xe4b3:
case 0xe4b4:
case 0xe4b5:
case 0xe4b6:
case 0xe4b7:
case 0xe6b0:
case 0xe6b1:
case 0xe6b2:
case 0xe6b3:
case 0xe6b4:
case 0xe6b5:
case 0xe6b6:
case 0xe6b7:
case 0xe8b0:
case 0xe8b1:
case 0xe8b2:
case 0xe8b3:
case 0xe8b4:
case 0xe8b5:
case 0xe8b6:
case 0xe8b7:
case 0xeab0:
case 0xeab1:
case 0xeab2:
case 0xeab3:
case 0xeab4:
case 0xeab5:
case 0xeab6:
case 0xeab7:
case 0xecb0:
case 0xecb1:
case 0xecb2:
case 0xecb3:
case 0xecb4:
case 0xecb5:
case 0xecb6:
case 0xecb7:
case 0xeeb0:
case 0xeeb1:
case 0xeeb2:
case 0xeeb3:
case 0xeeb4:
case 0xeeb5:
case 0xeeb6:
case 0xeeb7:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ROXR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe090:
case 0xe091:
case 0xe092:
case 0xe093:
case 0xe094:
case 0xe095:
case 0xe096:
case 0xe097:
case 0xe290:
case 0xe291:
case 0xe292:
case 0xe293:
case 0xe294:
case 0xe295:
case 0xe296:
case 0xe297:
case 0xe490:
case 0xe491:
case 0xe492:
case 0xe493:
case 0xe494:
case 0xe495:
case 0xe496:
case 0xe497:
case 0xe690:
case 0xe691:
case 0xe692:
case 0xe693:
case 0xe694:
case 0xe695:
case 0xe696:
case 0xe697:
case 0xe890:
case 0xe891:
case 0xe892:
case 0xe893:
case 0xe894:
case 0xe895:
case 0xe896:
case 0xe897:
case 0xea90:
case 0xea91:
case 0xea92:
case 0xea93:
case 0xea94:
case 0xea95:
case 0xea96:
case 0xea97:
case 0xec90:
case 0xec91:
case 0xec92:
case 0xec93:
case 0xec94:
case 0xec95:
case 0xec96:
case 0xec97:
case 0xee90:
case 0xee91:
case 0xee92:
case 0xee93:
case 0xee94:
case 0xee95:
case 0xee96:
case 0xee97:
	{
	 HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); ROXR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0x06b9:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_LONG> dst(this); ADD(src, dst);
	}
	break;

case 0x02b9:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_LONG> dst(this); AND(src, dst);
	}
	break;

case 0x0cb9:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_LONG> dst(this); CMP(src, dst);
	}
	break;

case 0x0ab9:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_LONG> dst(this); EOR(src, dst);
	}
	break;

case 0x23fc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x00b9:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_LONG> dst(this); OR(src, dst);
	}
	break;

case 0x04b9:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_LONG> dst(this); SUB(src, dst);
	}
	break;

case 0x06b8:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_SHORT> dst(this); ADD(src, dst);
	}
	break;

case 0x02b8:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_SHORT> dst(this); AND(src, dst);
	}
	break;

case 0x0cb8:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_SHORT> dst(this); CMP(src, dst);
	}
	break;

case 0x0ab8:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_SHORT> dst(this); EOR(src, dst);
	}
	break;

case 0x21fc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x00b8:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_SHORT> dst(this); OR(src, dst);
	}
	break;

case 0x04b8:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ABS_SHORT> dst(this); SUB(src, dst);
	}
	break;

case 0xd1fc:
case 0xd3fc:
case 0xd5fc:
case 0xd7fc:
case 0xd9fc:
case 0xdbfc:
case 0xddfc:
case 0xdffc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1fc:
case 0xb3fc:
case 0xb5fc:
case 0xb7fc:
case 0xb9fc:
case 0xbbfc:
case 0xbdfc:
case 0xbffc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91fc:
case 0x93fc:
case 0x95fc:
case 0x97fc:
case 0x99fc:
case 0x9bfc:
case 0x9dfc:
case 0x9ffc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x20bc:
case 0x22bc:
case 0x24bc:
case 0x26bc:
case 0x28bc:
case 0x2abc:
case 0x2cbc:
case 0x2ebc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0690:
case 0x0691:
case 0x0692:
case 0x0693:
case 0x0694:
case 0x0695:
case 0x0696:
case 0x0697:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0290:
case 0x0291:
case 0x0292:
case 0x0293:
case 0x0294:
case 0x0295:
case 0x0296:
case 0x0297:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c90:
case 0x0c91:
case 0x0c92:
case 0x0c93:
case 0x0c94:
case 0x0c95:
case 0x0c96:
case 0x0c97:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a90:
case 0x0a91:
case 0x0a92:
case 0x0a93:
case 0x0a94:
case 0x0a95:
case 0x0a96:
case 0x0a97:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0090:
case 0x0091:
case 0x0092:
case 0x0093:
case 0x0094:
case 0x0095:
case 0x0096:
case 0x0097:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0490:
case 0x0491:
case 0x0492:
case 0x0493:
case 0x0494:
case 0x0495:
case 0x0496:
case 0x0497:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x217c:
case 0x237c:
case 0x257c:
case 0x277c:
case 0x297c:
case 0x2b7c:
case 0x2d7c:
case 0x2f7c:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x06a8:
case 0x06a9:
case 0x06aa:
case 0x06ab:
case 0x06ac:
case 0x06ad:
case 0x06ae:
case 0x06af:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x02a8:
case 0x02a9:
case 0x02aa:
case 0x02ab:
case 0x02ac:
case 0x02ad:
case 0x02ae:
case 0x02af:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0ca8:
case 0x0ca9:
case 0x0caa:
case 0x0cab:
case 0x0cac:
case 0x0cad:
case 0x0cae:
case 0x0caf:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0aa8:
case 0x0aa9:
case 0x0aaa:
case 0x0aab:
case 0x0aac:
case 0x0aad:
case 0x0aae:
case 0x0aaf:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x00a8:
case 0x00a9:
case 0x00aa:
case 0x00ab:
case 0x00ac:
case 0x00ad:
case 0x00ae:
case 0x00af:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x04a8:
case 0x04a9:
case 0x04aa:
case 0x04ab:
case 0x04ac:
case 0x04ad:
case 0x04ae:
case 0x04af:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x21bc:
case 0x23bc:
case 0x25bc:
case 0x27bc:
case 0x29bc:
case 0x2bbc:
case 0x2dbc:
case 0x2fbc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x06b0:
case 0x06b1:
case 0x06b2:
case 0x06b3:
case 0x06b4:
case 0x06b5:
case 0x06b6:
case 0x06b7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x02b0:
case 0x02b1:
case 0x02b2:
case 0x02b3:
case 0x02b4:
case 0x02b5:
case 0x02b6:
case 0x02b7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0cb0:
case 0x0cb1:
case 0x0cb2:
case 0x0cb3:
case 0x0cb4:
case 0x0cb5:
case 0x0cb6:
case 0x0cb7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0ab0:
case 0x0ab1:
case 0x0ab2:
case 0x0ab3:
case 0x0ab4:
case 0x0ab5:
case 0x0ab6:
case 0x0ab7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x00b0:
case 0x00b1:
case 0x00b2:
case 0x00b3:
case 0x00b4:
case 0x00b5:
case 0x00b6:
case 0x00b7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x04b0:
case 0x04b1:
case 0x04b2:
case 0x04b3:
case 0x04b4:
case 0x04b5:
case 0x04b6:
case 0x04b7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x20fc:
case 0x22fc:
case 0x24fc:
case 0x26fc:
case 0x28fc:
case 0x2afc:
case 0x2cfc:
case 0x2efc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0698:
case 0x0699:
case 0x069a:
case 0x069b:
case 0x069c:
case 0x069d:
case 0x069e:
case 0x069f:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0298:
case 0x0299:
case 0x029a:
case 0x029b:
case 0x029c:
case 0x029d:
case 0x029e:
case 0x029f:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c98:
case 0x0c99:
case 0x0c9a:
case 0x0c9b:
case 0x0c9c:
case 0x0c9d:
case 0x0c9e:
case 0x0c9f:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a98:
case 0x0a99:
case 0x0a9a:
case 0x0a9b:
case 0x0a9c:
case 0x0a9d:
case 0x0a9e:
case 0x0a9f:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0098:
case 0x0099:
case 0x009a:
case 0x009b:
case 0x009c:
case 0x009d:
case 0x009e:
case 0x009f:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0498:
case 0x0499:
case 0x049a:
case 0x049b:
case 0x049c:
case 0x049d:
case 0x049e:
case 0x049f:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x213c:
case 0x233c:
case 0x253c:
case 0x273c:
case 0x293c:
case 0x2b3c:
case 0x2d3c:
case 0x2f3c:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x06a0:
case 0x06a1:
case 0x06a2:
case 0x06a3:
case 0x06a4:
case 0x06a5:
case 0x06a6:
case 0x06a7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x02a0:
case 0x02a1:
case 0x02a2:
case 0x02a3:
case 0x02a4:
case 0x02a5:
case 0x02a6:
case 0x02a7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0ca0:
case 0x0ca1:
case 0x0ca2:
case 0x0ca3:
case 0x0ca4:
case 0x0ca5:
case 0x0ca6:
case 0x0ca7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0aa0:
case 0x0aa1:
case 0x0aa2:
case 0x0aa3:
case 0x0aa4:
case 0x0aa5:
case 0x0aa6:
case 0x0aa7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x00a0:
case 0x00a1:
case 0x00a2:
case 0x00a3:
case 0x00a4:
case 0x00a5:
case 0x00a6:
case 0x00a7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x04a0:
case 0x04a1:
case 0x04a2:
case 0x04a3:
case 0x04a4:
case 0x04a5:
case 0x04a6:
case 0x04a7:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd0bc:
case 0xd2bc:
case 0xd4bc:
case 0xd6bc:
case 0xd8bc:
case 0xdabc:
case 0xdcbc:
case 0xdebc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc0bc:
case 0xc2bc:
case 0xc4bc:
case 0xc6bc:
case 0xc8bc:
case 0xcabc:
case 0xccbc:
case 0xcebc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb0bc:
case 0xb2bc:
case 0xb4bc:
case 0xb6bc:
case 0xb8bc:
case 0xbabc:
case 0xbcbc:
case 0xbebc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x203c:
case 0x223c:
case 0x243c:
case 0x263c:
case 0x283c:
case 0x2a3c:
case 0x2c3c:
case 0x2e3c:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x80bc:
case 0x82bc:
case 0x84bc:
case 0x86bc:
case 0x88bc:
case 0x8abc:
case 0x8cbc:
case 0x8ebc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x90bc:
case 0x92bc:
case 0x94bc:
case 0x96bc:
case 0x98bc:
case 0x9abc:
case 0x9cbc:
case 0x9ebc:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0680:
case 0x0681:
case 0x0682:
case 0x0683:
case 0x0684:
case 0x0685:
case 0x0686:
case 0x0687:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0280:
case 0x0281:
case 0x0282:
case 0x0283:
case 0x0284:
case 0x0285:
case 0x0286:
case 0x0287:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c80:
case 0x0c81:
case 0x0c82:
case 0x0c83:
case 0x0c84:
case 0x0c85:
case 0x0c86:
case 0x0c87:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a80:
case 0x0a81:
case 0x0a82:
case 0x0a83:
case 0x0a84:
case 0x0a85:
case 0x0a86:
case 0x0a87:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0080:
case 0x0081:
case 0x0082:
case 0x0083:
case 0x0084:
case 0x0085:
case 0x0086:
case 0x0087:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0480:
case 0x0481:
case 0x0482:
case 0x0483:
case 0x0484:
case 0x0485:
case 0x0486:
case 0x0487:
	{
	 HAM<uint32, IMMEDIATE> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x207c:
case 0x227c:
case 0x247c:
case 0x267c:
case 0x287c:
case 0x2a7c:
case 0x2c7c:
case 0x2e7c:
	{
	 HAM<uint32, IMMEDIATE> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x7000:
case 0x7001:
case 0x7002:
case 0x7003:
case 0x7004:
case 0x7005:
case 0x7006:
case 0x7007:
case 0x7008:
case 0x7009:
case 0x700a:
case 0x700b:
case 0x700c:
case 0x700d:
case 0x700e:
case 0x700f:
case 0x7010:
case 0x7011:
case 0x7012:
case 0x7013:
case 0x7014:
case 0x7015:
case 0x7016:
case 0x7017:
case 0x7018:
case 0x7019:
case 0x701a:
case 0x701b:
case 0x701c:
case 0x701d:
case 0x701e:
case 0x701f:
case 0x7020:
case 0x7021:
case 0x7022:
case 0x7023:
case 0x7024:
case 0x7025:
case 0x7026:
case 0x7027:
case 0x7028:
case 0x7029:
case 0x702a:
case 0x702b:
case 0x702c:
case 0x702d:
case 0x702e:
case 0x702f:
case 0x7030:
case 0x7031:
case 0x7032:
case 0x7033:
case 0x7034:
case 0x7035:
case 0x7036:
case 0x7037:
case 0x7038:
case 0x7039:
case 0x703a:
case 0x703b:
case 0x703c:
case 0x703d:
case 0x703e:
case 0x703f:
case 0x7040:
case 0x7041:
case 0x7042:
case 0x7043:
case 0x7044:
case 0x7045:
case 0x7046:
case 0x7047:
case 0x7048:
case 0x7049:
case 0x704a:
case 0x704b:
case 0x704c:
case 0x704d:
case 0x704e:
case 0x704f:
case 0x7050:
case 0x7051:
case 0x7052:
case 0x7053:
case 0x7054:
case 0x7055:
case 0x7056:
case 0x7057:
case 0x7058:
case 0x7059:
case 0x705a:
case 0x705b:
case 0x705c:
case 0x705d:
case 0x705e:
case 0x705f:
case 0x7060:
case 0x7061:
case 0x7062:
case 0x7063:
case 0x7064:
case 0x7065:
case 0x7066:
case 0x7067:
case 0x7068:
case 0x7069:
case 0x706a:
case 0x706b:
case 0x706c:
case 0x706d:
case 0x706e:
case 0x706f:
case 0x7070:
case 0x7071:
case 0x7072:
case 0x7073:
case 0x7074:
case 0x7075:
case 0x7076:
case 0x7077:
case 0x7078:
case 0x7079:
case 0x707a:
case 0x707b:
case 0x707c:
case 0x707d:
case 0x707e:
case 0x707f:
case 0x7080:
case 0x7081:
case 0x7082:
case 0x7083:
case 0x7084:
case 0x7085:
case 0x7086:
case 0x7087:
case 0x7088:
case 0x7089:
case 0x708a:
case 0x708b:
case 0x708c:
case 0x708d:
case 0x708e:
case 0x708f:
case 0x7090:
case 0x7091:
case 0x7092:
case 0x7093:
case 0x7094:
case 0x7095:
case 0x7096:
case 0x7097:
case 0x7098:
case 0x7099:
case 0x709a:
case 0x709b:
case 0x709c:
case 0x709d:
case 0x709e:
case 0x709f:
case 0x70a0:
case 0x70a1:
case 0x70a2:
case 0x70a3:
case 0x70a4:
case 0x70a5:
case 0x70a6:
case 0x70a7:
case 0x70a8:
case 0x70a9:
case 0x70aa:
case 0x70ab:
case 0x70ac:
case 0x70ad:
case 0x70ae:
case 0x70af:
case 0x70b0:
case 0x70b1:
case 0x70b2:
case 0x70b3:
case 0x70b4:
case 0x70b5:
case 0x70b6:
case 0x70b7:
case 0x70b8:
case 0x70b9:
case 0x70ba:
case 0x70bb:
case 0x70bc:
case 0x70bd:
case 0x70be:
case 0x70bf:
case 0x70c0:
case 0x70c1:
case 0x70c2:
case 0x70c3:
case 0x70c4:
case 0x70c5:
case 0x70c6:
case 0x70c7:
case 0x70c8:
case 0x70c9:
case 0x70ca:
case 0x70cb:
case 0x70cc:
case 0x70cd:
case 0x70ce:
case 0x70cf:
case 0x70d0:
case 0x70d1:
case 0x70d2:
case 0x70d3:
case 0x70d4:
case 0x70d5:
case 0x70d6:
case 0x70d7:
case 0x70d8:
case 0x70d9:
case 0x70da:
case 0x70db:
case 0x70dc:
case 0x70dd:
case 0x70de:
case 0x70df:
case 0x70e0:
case 0x70e1:
case 0x70e2:
case 0x70e3:
case 0x70e4:
case 0x70e5:
case 0x70e6:
case 0x70e7:
case 0x70e8:
case 0x70e9:
case 0x70ea:
case 0x70eb:
case 0x70ec:
case 0x70ed:
case 0x70ee:
case 0x70ef:
case 0x70f0:
case 0x70f1:
case 0x70f2:
case 0x70f3:
case 0x70f4:
case 0x70f5:
case 0x70f6:
case 0x70f7:
case 0x70f8:
case 0x70f9:
case 0x70fa:
case 0x70fb:
case 0x70fc:
case 0x70fd:
case 0x70fe:
case 0x70ff:
case 0x7200:
case 0x7201:
case 0x7202:
case 0x7203:
case 0x7204:
case 0x7205:
case 0x7206:
case 0x7207:
case 0x7208:
case 0x7209:
case 0x720a:
case 0x720b:
case 0x720c:
case 0x720d:
case 0x720e:
case 0x720f:
case 0x7210:
case 0x7211:
case 0x7212:
case 0x7213:
case 0x7214:
case 0x7215:
case 0x7216:
case 0x7217:
case 0x7218:
case 0x7219:
case 0x721a:
case 0x721b:
case 0x721c:
case 0x721d:
case 0x721e:
case 0x721f:
case 0x7220:
case 0x7221:
case 0x7222:
case 0x7223:
case 0x7224:
case 0x7225:
case 0x7226:
case 0x7227:
case 0x7228:
case 0x7229:
case 0x722a:
case 0x722b:
case 0x722c:
case 0x722d:
case 0x722e:
case 0x722f:
case 0x7230:
case 0x7231:
case 0x7232:
case 0x7233:
case 0x7234:
case 0x7235:
case 0x7236:
case 0x7237:
case 0x7238:
case 0x7239:
case 0x723a:
case 0x723b:
case 0x723c:
case 0x723d:
case 0x723e:
case 0x723f:
case 0x7240:
case 0x7241:
case 0x7242:
case 0x7243:
case 0x7244:
case 0x7245:
case 0x7246:
case 0x7247:
case 0x7248:
case 0x7249:
case 0x724a:
case 0x724b:
case 0x724c:
case 0x724d:
case 0x724e:
case 0x724f:
case 0x7250:
case 0x7251:
case 0x7252:
case 0x7253:
case 0x7254:
case 0x7255:
case 0x7256:
case 0x7257:
case 0x7258:
case 0x7259:
case 0x725a:
case 0x725b:
case 0x725c:
case 0x725d:
case 0x725e:
case 0x725f:
case 0x7260:
case 0x7261:
case 0x7262:
case 0x7263:
case 0x7264:
case 0x7265:
case 0x7266:
case 0x7267:
case 0x7268:
case 0x7269:
case 0x726a:
case 0x726b:
case 0x726c:
case 0x726d:
case 0x726e:
case 0x726f:
case 0x7270:
case 0x7271:
case 0x7272:
case 0x7273:
case 0x7274:
case 0x7275:
case 0x7276:
case 0x7277:
case 0x7278:
case 0x7279:
case 0x727a:
case 0x727b:
case 0x727c:
case 0x727d:
case 0x727e:
case 0x727f:
case 0x7280:
case 0x7281:
case 0x7282:
case 0x7283:
case 0x7284:
case 0x7285:
case 0x7286:
case 0x7287:
case 0x7288:
case 0x7289:
case 0x728a:
case 0x728b:
case 0x728c:
case 0x728d:
case 0x728e:
case 0x728f:
case 0x7290:
case 0x7291:
case 0x7292:
case 0x7293:
case 0x7294:
case 0x7295:
case 0x7296:
case 0x7297:
case 0x7298:
case 0x7299:
case 0x729a:
case 0x729b:
case 0x729c:
case 0x729d:
case 0x729e:
case 0x729f:
case 0x72a0:
case 0x72a1:
case 0x72a2:
case 0x72a3:
case 0x72a4:
case 0x72a5:
case 0x72a6:
case 0x72a7:
case 0x72a8:
case 0x72a9:
case 0x72aa:
case 0x72ab:
case 0x72ac:
case 0x72ad:
case 0x72ae:
case 0x72af:
case 0x72b0:
case 0x72b1:
case 0x72b2:
case 0x72b3:
case 0x72b4:
case 0x72b5:
case 0x72b6:
case 0x72b7:
case 0x72b8:
case 0x72b9:
case 0x72ba:
case 0x72bb:
case 0x72bc:
case 0x72bd:
case 0x72be:
case 0x72bf:
case 0x72c0:
case 0x72c1:
case 0x72c2:
case 0x72c3:
case 0x72c4:
case 0x72c5:
case 0x72c6:
case 0x72c7:
case 0x72c8:
case 0x72c9:
case 0x72ca:
case 0x72cb:
case 0x72cc:
case 0x72cd:
case 0x72ce:
case 0x72cf:
case 0x72d0:
case 0x72d1:
case 0x72d2:
case 0x72d3:
case 0x72d4:
case 0x72d5:
case 0x72d6:
case 0x72d7:
case 0x72d8:
case 0x72d9:
case 0x72da:
case 0x72db:
case 0x72dc:
case 0x72dd:
case 0x72de:
case 0x72df:
case 0x72e0:
case 0x72e1:
case 0x72e2:
case 0x72e3:
case 0x72e4:
case 0x72e5:
case 0x72e6:
case 0x72e7:
case 0x72e8:
case 0x72e9:
case 0x72ea:
case 0x72eb:
case 0x72ec:
case 0x72ed:
case 0x72ee:
case 0x72ef:
case 0x72f0:
case 0x72f1:
case 0x72f2:
case 0x72f3:
case 0x72f4:
case 0x72f5:
case 0x72f6:
case 0x72f7:
case 0x72f8:
case 0x72f9:
case 0x72fa:
case 0x72fb:
case 0x72fc:
case 0x72fd:
case 0x72fe:
case 0x72ff:
case 0x7400:
case 0x7401:
case 0x7402:
case 0x7403:
case 0x7404:
case 0x7405:
case 0x7406:
case 0x7407:
case 0x7408:
case 0x7409:
case 0x740a:
case 0x740b:
case 0x740c:
case 0x740d:
case 0x740e:
case 0x740f:
case 0x7410:
case 0x7411:
case 0x7412:
case 0x7413:
case 0x7414:
case 0x7415:
case 0x7416:
case 0x7417:
case 0x7418:
case 0x7419:
case 0x741a:
case 0x741b:
case 0x741c:
case 0x741d:
case 0x741e:
case 0x741f:
case 0x7420:
case 0x7421:
case 0x7422:
case 0x7423:
case 0x7424:
case 0x7425:
case 0x7426:
case 0x7427:
case 0x7428:
case 0x7429:
case 0x742a:
case 0x742b:
case 0x742c:
case 0x742d:
case 0x742e:
case 0x742f:
case 0x7430:
case 0x7431:
case 0x7432:
case 0x7433:
case 0x7434:
case 0x7435:
case 0x7436:
case 0x7437:
case 0x7438:
case 0x7439:
case 0x743a:
case 0x743b:
case 0x743c:
case 0x743d:
case 0x743e:
case 0x743f:
case 0x7440:
case 0x7441:
case 0x7442:
case 0x7443:
case 0x7444:
case 0x7445:
case 0x7446:
case 0x7447:
case 0x7448:
case 0x7449:
case 0x744a:
case 0x744b:
case 0x744c:
case 0x744d:
case 0x744e:
case 0x744f:
case 0x7450:
case 0x7451:
case 0x7452:
case 0x7453:
case 0x7454:
case 0x7455:
case 0x7456:
case 0x7457:
case 0x7458:
case 0x7459:
case 0x745a:
case 0x745b:
case 0x745c:
case 0x745d:
case 0x745e:
case 0x745f:
case 0x7460:
case 0x7461:
case 0x7462:
case 0x7463:
case 0x7464:
case 0x7465:
case 0x7466:
case 0x7467:
case 0x7468:
case 0x7469:
case 0x746a:
case 0x746b:
case 0x746c:
case 0x746d:
case 0x746e:
case 0x746f:
case 0x7470:
case 0x7471:
case 0x7472:
case 0x7473:
case 0x7474:
case 0x7475:
case 0x7476:
case 0x7477:
case 0x7478:
case 0x7479:
case 0x747a:
case 0x747b:
case 0x747c:
case 0x747d:
case 0x747e:
case 0x747f:
case 0x7480:
case 0x7481:
case 0x7482:
case 0x7483:
case 0x7484:
case 0x7485:
case 0x7486:
case 0x7487:
case 0x7488:
case 0x7489:
case 0x748a:
case 0x748b:
case 0x748c:
case 0x748d:
case 0x748e:
case 0x748f:
case 0x7490:
case 0x7491:
case 0x7492:
case 0x7493:
case 0x7494:
case 0x7495:
case 0x7496:
case 0x7497:
case 0x7498:
case 0x7499:
case 0x749a:
case 0x749b:
case 0x749c:
case 0x749d:
case 0x749e:
case 0x749f:
case 0x74a0:
case 0x74a1:
case 0x74a2:
case 0x74a3:
case 0x74a4:
case 0x74a5:
case 0x74a6:
case 0x74a7:
case 0x74a8:
case 0x74a9:
case 0x74aa:
case 0x74ab:
case 0x74ac:
case 0x74ad:
case 0x74ae:
case 0x74af:
case 0x74b0:
case 0x74b1:
case 0x74b2:
case 0x74b3:
case 0x74b4:
case 0x74b5:
case 0x74b6:
case 0x74b7:
case 0x74b8:
case 0x74b9:
case 0x74ba:
case 0x74bb:
case 0x74bc:
case 0x74bd:
case 0x74be:
case 0x74bf:
case 0x74c0:
case 0x74c1:
case 0x74c2:
case 0x74c3:
case 0x74c4:
case 0x74c5:
case 0x74c6:
case 0x74c7:
case 0x74c8:
case 0x74c9:
case 0x74ca:
case 0x74cb:
case 0x74cc:
case 0x74cd:
case 0x74ce:
case 0x74cf:
case 0x74d0:
case 0x74d1:
case 0x74d2:
case 0x74d3:
case 0x74d4:
case 0x74d5:
case 0x74d6:
case 0x74d7:
case 0x74d8:
case 0x74d9:
case 0x74da:
case 0x74db:
case 0x74dc:
case 0x74dd:
case 0x74de:
case 0x74df:
case 0x74e0:
case 0x74e1:
case 0x74e2:
case 0x74e3:
case 0x74e4:
case 0x74e5:
case 0x74e6:
case 0x74e7:
case 0x74e8:
case 0x74e9:
case 0x74ea:
case 0x74eb:
case 0x74ec:
case 0x74ed:
case 0x74ee:
case 0x74ef:
case 0x74f0:
case 0x74f1:
case 0x74f2:
case 0x74f3:
case 0x74f4:
case 0x74f5:
case 0x74f6:
case 0x74f7:
case 0x74f8:
case 0x74f9:
case 0x74fa:
case 0x74fb:
case 0x74fc:
case 0x74fd:
case 0x74fe:
case 0x74ff:
case 0x7600:
case 0x7601:
case 0x7602:
case 0x7603:
case 0x7604:
case 0x7605:
case 0x7606:
case 0x7607:
case 0x7608:
case 0x7609:
case 0x760a:
case 0x760b:
case 0x760c:
case 0x760d:
case 0x760e:
case 0x760f:
case 0x7610:
case 0x7611:
case 0x7612:
case 0x7613:
case 0x7614:
case 0x7615:
case 0x7616:
case 0x7617:
case 0x7618:
case 0x7619:
case 0x761a:
case 0x761b:
case 0x761c:
case 0x761d:
case 0x761e:
case 0x761f:
case 0x7620:
case 0x7621:
case 0x7622:
case 0x7623:
case 0x7624:
case 0x7625:
case 0x7626:
case 0x7627:
case 0x7628:
case 0x7629:
case 0x762a:
case 0x762b:
case 0x762c:
case 0x762d:
case 0x762e:
case 0x762f:
case 0x7630:
case 0x7631:
case 0x7632:
case 0x7633:
case 0x7634:
case 0x7635:
case 0x7636:
case 0x7637:
case 0x7638:
case 0x7639:
case 0x763a:
case 0x763b:
case 0x763c:
case 0x763d:
case 0x763e:
case 0x763f:
case 0x7640:
case 0x7641:
case 0x7642:
case 0x7643:
case 0x7644:
case 0x7645:
case 0x7646:
case 0x7647:
case 0x7648:
case 0x7649:
case 0x764a:
case 0x764b:
case 0x764c:
case 0x764d:
case 0x764e:
case 0x764f:
case 0x7650:
case 0x7651:
case 0x7652:
case 0x7653:
case 0x7654:
case 0x7655:
case 0x7656:
case 0x7657:
case 0x7658:
case 0x7659:
case 0x765a:
case 0x765b:
case 0x765c:
case 0x765d:
case 0x765e:
case 0x765f:
case 0x7660:
case 0x7661:
case 0x7662:
case 0x7663:
case 0x7664:
case 0x7665:
case 0x7666:
case 0x7667:
case 0x7668:
case 0x7669:
case 0x766a:
case 0x766b:
case 0x766c:
case 0x766d:
case 0x766e:
case 0x766f:
case 0x7670:
case 0x7671:
case 0x7672:
case 0x7673:
case 0x7674:
case 0x7675:
case 0x7676:
case 0x7677:
case 0x7678:
case 0x7679:
case 0x767a:
case 0x767b:
case 0x767c:
case 0x767d:
case 0x767e:
case 0x767f:
case 0x7680:
case 0x7681:
case 0x7682:
case 0x7683:
case 0x7684:
case 0x7685:
case 0x7686:
case 0x7687:
case 0x7688:
case 0x7689:
case 0x768a:
case 0x768b:
case 0x768c:
case 0x768d:
case 0x768e:
case 0x768f:
case 0x7690:
case 0x7691:
case 0x7692:
case 0x7693:
case 0x7694:
case 0x7695:
case 0x7696:
case 0x7697:
case 0x7698:
case 0x7699:
case 0x769a:
case 0x769b:
case 0x769c:
case 0x769d:
case 0x769e:
case 0x769f:
case 0x76a0:
case 0x76a1:
case 0x76a2:
case 0x76a3:
case 0x76a4:
case 0x76a5:
case 0x76a6:
case 0x76a7:
case 0x76a8:
case 0x76a9:
case 0x76aa:
case 0x76ab:
case 0x76ac:
case 0x76ad:
case 0x76ae:
case 0x76af:
case 0x76b0:
case 0x76b1:
case 0x76b2:
case 0x76b3:
case 0x76b4:
case 0x76b5:
case 0x76b6:
case 0x76b7:
case 0x76b8:
case 0x76b9:
case 0x76ba:
case 0x76bb:
case 0x76bc:
case 0x76bd:
case 0x76be:
case 0x76bf:
case 0x76c0:
case 0x76c1:
case 0x76c2:
case 0x76c3:
case 0x76c4:
case 0x76c5:
case 0x76c6:
case 0x76c7:
case 0x76c8:
case 0x76c9:
case 0x76ca:
case 0x76cb:
case 0x76cc:
case 0x76cd:
case 0x76ce:
case 0x76cf:
case 0x76d0:
case 0x76d1:
case 0x76d2:
case 0x76d3:
case 0x76d4:
case 0x76d5:
case 0x76d6:
case 0x76d7:
case 0x76d8:
case 0x76d9:
case 0x76da:
case 0x76db:
case 0x76dc:
case 0x76dd:
case 0x76de:
case 0x76df:
case 0x76e0:
case 0x76e1:
case 0x76e2:
case 0x76e3:
case 0x76e4:
case 0x76e5:
case 0x76e6:
case 0x76e7:
case 0x76e8:
case 0x76e9:
case 0x76ea:
case 0x76eb:
case 0x76ec:
case 0x76ed:
case 0x76ee:
case 0x76ef:
case 0x76f0:
case 0x76f1:
case 0x76f2:
case 0x76f3:
case 0x76f4:
case 0x76f5:
case 0x76f6:
case 0x76f7:
case 0x76f8:
case 0x76f9:
case 0x76fa:
case 0x76fb:
case 0x76fc:
case 0x76fd:
case 0x76fe:
case 0x76ff:
case 0x7800:
case 0x7801:
case 0x7802:
case 0x7803:
case 0x7804:
case 0x7805:
case 0x7806:
case 0x7807:
case 0x7808:
case 0x7809:
case 0x780a:
case 0x780b:
case 0x780c:
case 0x780d:
case 0x780e:
case 0x780f:
case 0x7810:
case 0x7811:
case 0x7812:
case 0x7813:
case 0x7814:
case 0x7815:
case 0x7816:
case 0x7817:
case 0x7818:
case 0x7819:
case 0x781a:
case 0x781b:
case 0x781c:
case 0x781d:
case 0x781e:
case 0x781f:
case 0x7820:
case 0x7821:
case 0x7822:
case 0x7823:
case 0x7824:
case 0x7825:
case 0x7826:
case 0x7827:
case 0x7828:
case 0x7829:
case 0x782a:
case 0x782b:
case 0x782c:
case 0x782d:
case 0x782e:
case 0x782f:
case 0x7830:
case 0x7831:
case 0x7832:
case 0x7833:
case 0x7834:
case 0x7835:
case 0x7836:
case 0x7837:
case 0x7838:
case 0x7839:
case 0x783a:
case 0x783b:
case 0x783c:
case 0x783d:
case 0x783e:
case 0x783f:
case 0x7840:
case 0x7841:
case 0x7842:
case 0x7843:
case 0x7844:
case 0x7845:
case 0x7846:
case 0x7847:
case 0x7848:
case 0x7849:
case 0x784a:
case 0x784b:
case 0x784c:
case 0x784d:
case 0x784e:
case 0x784f:
case 0x7850:
case 0x7851:
case 0x7852:
case 0x7853:
case 0x7854:
case 0x7855:
case 0x7856:
case 0x7857:
case 0x7858:
case 0x7859:
case 0x785a:
case 0x785b:
case 0x785c:
case 0x785d:
case 0x785e:
case 0x785f:
case 0x7860:
case 0x7861:
case 0x7862:
case 0x7863:
case 0x7864:
case 0x7865:
case 0x7866:
case 0x7867:
case 0x7868:
case 0x7869:
case 0x786a:
case 0x786b:
case 0x786c:
case 0x786d:
case 0x786e:
case 0x786f:
case 0x7870:
case 0x7871:
case 0x7872:
case 0x7873:
case 0x7874:
case 0x7875:
case 0x7876:
case 0x7877:
case 0x7878:
case 0x7879:
case 0x787a:
case 0x787b:
case 0x787c:
case 0x787d:
case 0x787e:
case 0x787f:
case 0x7880:
case 0x7881:
case 0x7882:
case 0x7883:
case 0x7884:
case 0x7885:
case 0x7886:
case 0x7887:
case 0x7888:
case 0x7889:
case 0x788a:
case 0x788b:
case 0x788c:
case 0x788d:
case 0x788e:
case 0x788f:
case 0x7890:
case 0x7891:
case 0x7892:
case 0x7893:
case 0x7894:
case 0x7895:
case 0x7896:
case 0x7897:
case 0x7898:
case 0x7899:
case 0x789a:
case 0x789b:
case 0x789c:
case 0x789d:
case 0x789e:
case 0x789f:
case 0x78a0:
case 0x78a1:
case 0x78a2:
case 0x78a3:
case 0x78a4:
case 0x78a5:
case 0x78a6:
case 0x78a7:
case 0x78a8:
case 0x78a9:
case 0x78aa:
case 0x78ab:
case 0x78ac:
case 0x78ad:
case 0x78ae:
case 0x78af:
case 0x78b0:
case 0x78b1:
case 0x78b2:
case 0x78b3:
case 0x78b4:
case 0x78b5:
case 0x78b6:
case 0x78b7:
case 0x78b8:
case 0x78b9:
case 0x78ba:
case 0x78bb:
case 0x78bc:
case 0x78bd:
case 0x78be:
case 0x78bf:
case 0x78c0:
case 0x78c1:
case 0x78c2:
case 0x78c3:
case 0x78c4:
case 0x78c5:
case 0x78c6:
case 0x78c7:
case 0x78c8:
case 0x78c9:
case 0x78ca:
case 0x78cb:
case 0x78cc:
case 0x78cd:
case 0x78ce:
case 0x78cf:
case 0x78d0:
case 0x78d1:
case 0x78d2:
case 0x78d3:
case 0x78d4:
case 0x78d5:
case 0x78d6:
case 0x78d7:
case 0x78d8:
case 0x78d9:
case 0x78da:
case 0x78db:
case 0x78dc:
case 0x78dd:
case 0x78de:
case 0x78df:
case 0x78e0:
case 0x78e1:
case 0x78e2:
case 0x78e3:
case 0x78e4:
case 0x78e5:
case 0x78e6:
case 0x78e7:
case 0x78e8:
case 0x78e9:
case 0x78ea:
case 0x78eb:
case 0x78ec:
case 0x78ed:
case 0x78ee:
case 0x78ef:
case 0x78f0:
case 0x78f1:
case 0x78f2:
case 0x78f3:
case 0x78f4:
case 0x78f5:
case 0x78f6:
case 0x78f7:
case 0x78f8:
case 0x78f9:
case 0x78fa:
case 0x78fb:
case 0x78fc:
case 0x78fd:
case 0x78fe:
case 0x78ff:
case 0x7a00:
case 0x7a01:
case 0x7a02:
case 0x7a03:
case 0x7a04:
case 0x7a05:
case 0x7a06:
case 0x7a07:
case 0x7a08:
case 0x7a09:
case 0x7a0a:
case 0x7a0b:
case 0x7a0c:
case 0x7a0d:
case 0x7a0e:
case 0x7a0f:
case 0x7a10:
case 0x7a11:
case 0x7a12:
case 0x7a13:
case 0x7a14:
case 0x7a15:
case 0x7a16:
case 0x7a17:
case 0x7a18:
case 0x7a19:
case 0x7a1a:
case 0x7a1b:
case 0x7a1c:
case 0x7a1d:
case 0x7a1e:
case 0x7a1f:
case 0x7a20:
case 0x7a21:
case 0x7a22:
case 0x7a23:
case 0x7a24:
case 0x7a25:
case 0x7a26:
case 0x7a27:
case 0x7a28:
case 0x7a29:
case 0x7a2a:
case 0x7a2b:
case 0x7a2c:
case 0x7a2d:
case 0x7a2e:
case 0x7a2f:
case 0x7a30:
case 0x7a31:
case 0x7a32:
case 0x7a33:
case 0x7a34:
case 0x7a35:
case 0x7a36:
case 0x7a37:
case 0x7a38:
case 0x7a39:
case 0x7a3a:
case 0x7a3b:
case 0x7a3c:
case 0x7a3d:
case 0x7a3e:
case 0x7a3f:
case 0x7a40:
case 0x7a41:
case 0x7a42:
case 0x7a43:
case 0x7a44:
case 0x7a45:
case 0x7a46:
case 0x7a47:
case 0x7a48:
case 0x7a49:
case 0x7a4a:
case 0x7a4b:
case 0x7a4c:
case 0x7a4d:
case 0x7a4e:
case 0x7a4f:
case 0x7a50:
case 0x7a51:
case 0x7a52:
case 0x7a53:
case 0x7a54:
case 0x7a55:
case 0x7a56:
case 0x7a57:
case 0x7a58:
case 0x7a59:
case 0x7a5a:
case 0x7a5b:
case 0x7a5c:
case 0x7a5d:
case 0x7a5e:
case 0x7a5f:
case 0x7a60:
case 0x7a61:
case 0x7a62:
case 0x7a63:
case 0x7a64:
case 0x7a65:
case 0x7a66:
case 0x7a67:
case 0x7a68:
case 0x7a69:
case 0x7a6a:
case 0x7a6b:
case 0x7a6c:
case 0x7a6d:
case 0x7a6e:
case 0x7a6f:
case 0x7a70:
case 0x7a71:
case 0x7a72:
case 0x7a73:
case 0x7a74:
case 0x7a75:
case 0x7a76:
case 0x7a77:
case 0x7a78:
case 0x7a79:
case 0x7a7a:
case 0x7a7b:
case 0x7a7c:
case 0x7a7d:
case 0x7a7e:
case 0x7a7f:
case 0x7a80:
case 0x7a81:
case 0x7a82:
case 0x7a83:
case 0x7a84:
case 0x7a85:
case 0x7a86:
case 0x7a87:
case 0x7a88:
case 0x7a89:
case 0x7a8a:
case 0x7a8b:
case 0x7a8c:
case 0x7a8d:
case 0x7a8e:
case 0x7a8f:
case 0x7a90:
case 0x7a91:
case 0x7a92:
case 0x7a93:
case 0x7a94:
case 0x7a95:
case 0x7a96:
case 0x7a97:
case 0x7a98:
case 0x7a99:
case 0x7a9a:
case 0x7a9b:
case 0x7a9c:
case 0x7a9d:
case 0x7a9e:
case 0x7a9f:
case 0x7aa0:
case 0x7aa1:
case 0x7aa2:
case 0x7aa3:
case 0x7aa4:
case 0x7aa5:
case 0x7aa6:
case 0x7aa7:
case 0x7aa8:
case 0x7aa9:
case 0x7aaa:
case 0x7aab:
case 0x7aac:
case 0x7aad:
case 0x7aae:
case 0x7aaf:
case 0x7ab0:
case 0x7ab1:
case 0x7ab2:
case 0x7ab3:
case 0x7ab4:
case 0x7ab5:
case 0x7ab6:
case 0x7ab7:
case 0x7ab8:
case 0x7ab9:
case 0x7aba:
case 0x7abb:
case 0x7abc:
case 0x7abd:
case 0x7abe:
case 0x7abf:
case 0x7ac0:
case 0x7ac1:
case 0x7ac2:
case 0x7ac3:
case 0x7ac4:
case 0x7ac5:
case 0x7ac6:
case 0x7ac7:
case 0x7ac8:
case 0x7ac9:
case 0x7aca:
case 0x7acb:
case 0x7acc:
case 0x7acd:
case 0x7ace:
case 0x7acf:
case 0x7ad0:
case 0x7ad1:
case 0x7ad2:
case 0x7ad3:
case 0x7ad4:
case 0x7ad5:
case 0x7ad6:
case 0x7ad7:
case 0x7ad8:
case 0x7ad9:
case 0x7ada:
case 0x7adb:
case 0x7adc:
case 0x7add:
case 0x7ade:
case 0x7adf:
case 0x7ae0:
case 0x7ae1:
case 0x7ae2:
case 0x7ae3:
case 0x7ae4:
case 0x7ae5:
case 0x7ae6:
case 0x7ae7:
case 0x7ae8:
case 0x7ae9:
case 0x7aea:
case 0x7aeb:
case 0x7aec:
case 0x7aed:
case 0x7aee:
case 0x7aef:
case 0x7af0:
case 0x7af1:
case 0x7af2:
case 0x7af3:
case 0x7af4:
case 0x7af5:
case 0x7af6:
case 0x7af7:
case 0x7af8:
case 0x7af9:
case 0x7afa:
case 0x7afb:
case 0x7afc:
case 0x7afd:
case 0x7afe:
case 0x7aff:
case 0x7c00:
case 0x7c01:
case 0x7c02:
case 0x7c03:
case 0x7c04:
case 0x7c05:
case 0x7c06:
case 0x7c07:
case 0x7c08:
case 0x7c09:
case 0x7c0a:
case 0x7c0b:
case 0x7c0c:
case 0x7c0d:
case 0x7c0e:
case 0x7c0f:
case 0x7c10:
case 0x7c11:
case 0x7c12:
case 0x7c13:
case 0x7c14:
case 0x7c15:
case 0x7c16:
case 0x7c17:
case 0x7c18:
case 0x7c19:
case 0x7c1a:
case 0x7c1b:
case 0x7c1c:
case 0x7c1d:
case 0x7c1e:
case 0x7c1f:
case 0x7c20:
case 0x7c21:
case 0x7c22:
case 0x7c23:
case 0x7c24:
case 0x7c25:
case 0x7c26:
case 0x7c27:
case 0x7c28:
case 0x7c29:
case 0x7c2a:
case 0x7c2b:
case 0x7c2c:
case 0x7c2d:
case 0x7c2e:
case 0x7c2f:
case 0x7c30:
case 0x7c31:
case 0x7c32:
case 0x7c33:
case 0x7c34:
case 0x7c35:
case 0x7c36:
case 0x7c37:
case 0x7c38:
case 0x7c39:
case 0x7c3a:
case 0x7c3b:
case 0x7c3c:
case 0x7c3d:
case 0x7c3e:
case 0x7c3f:
case 0x7c40:
case 0x7c41:
case 0x7c42:
case 0x7c43:
case 0x7c44:
case 0x7c45:
case 0x7c46:
case 0x7c47:
case 0x7c48:
case 0x7c49:
case 0x7c4a:
case 0x7c4b:
case 0x7c4c:
case 0x7c4d:
case 0x7c4e:
case 0x7c4f:
case 0x7c50:
case 0x7c51:
case 0x7c52:
case 0x7c53:
case 0x7c54:
case 0x7c55:
case 0x7c56:
case 0x7c57:
case 0x7c58:
case 0x7c59:
case 0x7c5a:
case 0x7c5b:
case 0x7c5c:
case 0x7c5d:
case 0x7c5e:
case 0x7c5f:
case 0x7c60:
case 0x7c61:
case 0x7c62:
case 0x7c63:
case 0x7c64:
case 0x7c65:
case 0x7c66:
case 0x7c67:
case 0x7c68:
case 0x7c69:
case 0x7c6a:
case 0x7c6b:
case 0x7c6c:
case 0x7c6d:
case 0x7c6e:
case 0x7c6f:
case 0x7c70:
case 0x7c71:
case 0x7c72:
case 0x7c73:
case 0x7c74:
case 0x7c75:
case 0x7c76:
case 0x7c77:
case 0x7c78:
case 0x7c79:
case 0x7c7a:
case 0x7c7b:
case 0x7c7c:
case 0x7c7d:
case 0x7c7e:
case 0x7c7f:
case 0x7c80:
case 0x7c81:
case 0x7c82:
case 0x7c83:
case 0x7c84:
case 0x7c85:
case 0x7c86:
case 0x7c87:
case 0x7c88:
case 0x7c89:
case 0x7c8a:
case 0x7c8b:
case 0x7c8c:
case 0x7c8d:
case 0x7c8e:
case 0x7c8f:
case 0x7c90:
case 0x7c91:
case 0x7c92:
case 0x7c93:
case 0x7c94:
case 0x7c95:
case 0x7c96:
case 0x7c97:
case 0x7c98:
case 0x7c99:
case 0x7c9a:
case 0x7c9b:
case 0x7c9c:
case 0x7c9d:
case 0x7c9e:
case 0x7c9f:
case 0x7ca0:
case 0x7ca1:
case 0x7ca2:
case 0x7ca3:
case 0x7ca4:
case 0x7ca5:
case 0x7ca6:
case 0x7ca7:
case 0x7ca8:
case 0x7ca9:
case 0x7caa:
case 0x7cab:
case 0x7cac:
case 0x7cad:
case 0x7cae:
case 0x7caf:
case 0x7cb0:
case 0x7cb1:
case 0x7cb2:
case 0x7cb3:
case 0x7cb4:
case 0x7cb5:
case 0x7cb6:
case 0x7cb7:
case 0x7cb8:
case 0x7cb9:
case 0x7cba:
case 0x7cbb:
case 0x7cbc:
case 0x7cbd:
case 0x7cbe:
case 0x7cbf:
case 0x7cc0:
case 0x7cc1:
case 0x7cc2:
case 0x7cc3:
case 0x7cc4:
case 0x7cc5:
case 0x7cc6:
case 0x7cc7:
case 0x7cc8:
case 0x7cc9:
case 0x7cca:
case 0x7ccb:
case 0x7ccc:
case 0x7ccd:
case 0x7cce:
case 0x7ccf:
case 0x7cd0:
case 0x7cd1:
case 0x7cd2:
case 0x7cd3:
case 0x7cd4:
case 0x7cd5:
case 0x7cd6:
case 0x7cd7:
case 0x7cd8:
case 0x7cd9:
case 0x7cda:
case 0x7cdb:
case 0x7cdc:
case 0x7cdd:
case 0x7cde:
case 0x7cdf:
case 0x7ce0:
case 0x7ce1:
case 0x7ce2:
case 0x7ce3:
case 0x7ce4:
case 0x7ce5:
case 0x7ce6:
case 0x7ce7:
case 0x7ce8:
case 0x7ce9:
case 0x7cea:
case 0x7ceb:
case 0x7cec:
case 0x7ced:
case 0x7cee:
case 0x7cef:
case 0x7cf0:
case 0x7cf1:
case 0x7cf2:
case 0x7cf3:
case 0x7cf4:
case 0x7cf5:
case 0x7cf6:
case 0x7cf7:
case 0x7cf8:
case 0x7cf9:
case 0x7cfa:
case 0x7cfb:
case 0x7cfc:
case 0x7cfd:
case 0x7cfe:
case 0x7cff:
case 0x7e00:
case 0x7e01:
case 0x7e02:
case 0x7e03:
case 0x7e04:
case 0x7e05:
case 0x7e06:
case 0x7e07:
case 0x7e08:
case 0x7e09:
case 0x7e0a:
case 0x7e0b:
case 0x7e0c:
case 0x7e0d:
case 0x7e0e:
case 0x7e0f:
case 0x7e10:
case 0x7e11:
case 0x7e12:
case 0x7e13:
case 0x7e14:
case 0x7e15:
case 0x7e16:
case 0x7e17:
case 0x7e18:
case 0x7e19:
case 0x7e1a:
case 0x7e1b:
case 0x7e1c:
case 0x7e1d:
case 0x7e1e:
case 0x7e1f:
case 0x7e20:
case 0x7e21:
case 0x7e22:
case 0x7e23:
case 0x7e24:
case 0x7e25:
case 0x7e26:
case 0x7e27:
case 0x7e28:
case 0x7e29:
case 0x7e2a:
case 0x7e2b:
case 0x7e2c:
case 0x7e2d:
case 0x7e2e:
case 0x7e2f:
case 0x7e30:
case 0x7e31:
case 0x7e32:
case 0x7e33:
case 0x7e34:
case 0x7e35:
case 0x7e36:
case 0x7e37:
case 0x7e38:
case 0x7e39:
case 0x7e3a:
case 0x7e3b:
case 0x7e3c:
case 0x7e3d:
case 0x7e3e:
case 0x7e3f:
case 0x7e40:
case 0x7e41:
case 0x7e42:
case 0x7e43:
case 0x7e44:
case 0x7e45:
case 0x7e46:
case 0x7e47:
case 0x7e48:
case 0x7e49:
case 0x7e4a:
case 0x7e4b:
case 0x7e4c:
case 0x7e4d:
case 0x7e4e:
case 0x7e4f:
case 0x7e50:
case 0x7e51:
case 0x7e52:
case 0x7e53:
case 0x7e54:
case 0x7e55:
case 0x7e56:
case 0x7e57:
case 0x7e58:
case 0x7e59:
case 0x7e5a:
case 0x7e5b:
case 0x7e5c:
case 0x7e5d:
case 0x7e5e:
case 0x7e5f:
case 0x7e60:
case 0x7e61:
case 0x7e62:
case 0x7e63:
case 0x7e64:
case 0x7e65:
case 0x7e66:
case 0x7e67:
case 0x7e68:
case 0x7e69:
case 0x7e6a:
case 0x7e6b:
case 0x7e6c:
case 0x7e6d:
case 0x7e6e:
case 0x7e6f:
case 0x7e70:
case 0x7e71:
case 0x7e72:
case 0x7e73:
case 0x7e74:
case 0x7e75:
case 0x7e76:
case 0x7e77:
case 0x7e78:
case 0x7e79:
case 0x7e7a:
case 0x7e7b:
case 0x7e7c:
case 0x7e7d:
case 0x7e7e:
case 0x7e7f:
case 0x7e80:
case 0x7e81:
case 0x7e82:
case 0x7e83:
case 0x7e84:
case 0x7e85:
case 0x7e86:
case 0x7e87:
case 0x7e88:
case 0x7e89:
case 0x7e8a:
case 0x7e8b:
case 0x7e8c:
case 0x7e8d:
case 0x7e8e:
case 0x7e8f:
case 0x7e90:
case 0x7e91:
case 0x7e92:
case 0x7e93:
case 0x7e94:
case 0x7e95:
case 0x7e96:
case 0x7e97:
case 0x7e98:
case 0x7e99:
case 0x7e9a:
case 0x7e9b:
case 0x7e9c:
case 0x7e9d:
case 0x7e9e:
case 0x7e9f:
case 0x7ea0:
case 0x7ea1:
case 0x7ea2:
case 0x7ea3:
case 0x7ea4:
case 0x7ea5:
case 0x7ea6:
case 0x7ea7:
case 0x7ea8:
case 0x7ea9:
case 0x7eaa:
case 0x7eab:
case 0x7eac:
case 0x7ead:
case 0x7eae:
case 0x7eaf:
case 0x7eb0:
case 0x7eb1:
case 0x7eb2:
case 0x7eb3:
case 0x7eb4:
case 0x7eb5:
case 0x7eb6:
case 0x7eb7:
case 0x7eb8:
case 0x7eb9:
case 0x7eba:
case 0x7ebb:
case 0x7ebc:
case 0x7ebd:
case 0x7ebe:
case 0x7ebf:
case 0x7ec0:
case 0x7ec1:
case 0x7ec2:
case 0x7ec3:
case 0x7ec4:
case 0x7ec5:
case 0x7ec6:
case 0x7ec7:
case 0x7ec8:
case 0x7ec9:
case 0x7eca:
case 0x7ecb:
case 0x7ecc:
case 0x7ecd:
case 0x7ece:
case 0x7ecf:
case 0x7ed0:
case 0x7ed1:
case 0x7ed2:
case 0x7ed3:
case 0x7ed4:
case 0x7ed5:
case 0x7ed6:
case 0x7ed7:
case 0x7ed8:
case 0x7ed9:
case 0x7eda:
case 0x7edb:
case 0x7edc:
case 0x7edd:
case 0x7ede:
case 0x7edf:
case 0x7ee0:
case 0x7ee1:
case 0x7ee2:
case 0x7ee3:
case 0x7ee4:
case 0x7ee5:
case 0x7ee6:
case 0x7ee7:
case 0x7ee8:
case 0x7ee9:
case 0x7eea:
case 0x7eeb:
case 0x7eec:
case 0x7eed:
case 0x7eee:
case 0x7eef:
case 0x7ef0:
case 0x7ef1:
case 0x7ef2:
case 0x7ef3:
case 0x7ef4:
case 0x7ef5:
case 0x7ef6:
case 0x7ef7:
case 0x7ef8:
case 0x7ef9:
case 0x7efa:
case 0x7efb:
case 0x7efc:
case 0x7efd:
case 0x7efe:
case 0x7eff:
	{
	 HAM<uint32, IMMEDIATE> src(this, (int8)instr); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x50b9:
case 0x52b9:
case 0x54b9:
case 0x56b9:
case 0x58b9:
case 0x5ab9:
case 0x5cb9:
case 0x5eb9:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ABS_LONG> dst(this); ADD(src, dst);
	}
	break;

case 0x51b9:
case 0x53b9:
case 0x55b9:
case 0x57b9:
case 0x59b9:
case 0x5bb9:
case 0x5db9:
case 0x5fb9:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ABS_LONG> dst(this); SUB(src, dst);
	}
	break;

case 0x50b8:
case 0x52b8:
case 0x54b8:
case 0x56b8:
case 0x58b8:
case 0x5ab8:
case 0x5cb8:
case 0x5eb8:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ABS_SHORT> dst(this); ADD(src, dst);
	}
	break;

case 0x51b8:
case 0x53b8:
case 0x55b8:
case 0x57b8:
case 0x59b8:
case 0x5bb8:
case 0x5db8:
case 0x5fb8:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ABS_SHORT> dst(this); SUB(src, dst);
	}
	break;

case 0x5088:
case 0x5089:
case 0x508a:
case 0x508b:
case 0x508c:
case 0x508d:
case 0x508e:
case 0x508f:
case 0x5288:
case 0x5289:
case 0x528a:
case 0x528b:
case 0x528c:
case 0x528d:
case 0x528e:
case 0x528f:
case 0x5488:
case 0x5489:
case 0x548a:
case 0x548b:
case 0x548c:
case 0x548d:
case 0x548e:
case 0x548f:
case 0x5688:
case 0x5689:
case 0x568a:
case 0x568b:
case 0x568c:
case 0x568d:
case 0x568e:
case 0x568f:
case 0x5888:
case 0x5889:
case 0x588a:
case 0x588b:
case 0x588c:
case 0x588d:
case 0x588e:
case 0x588f:
case 0x5a88:
case 0x5a89:
case 0x5a8a:
case 0x5a8b:
case 0x5a8c:
case 0x5a8d:
case 0x5a8e:
case 0x5a8f:
case 0x5c88:
case 0x5c89:
case 0x5c8a:
case 0x5c8b:
case 0x5c8c:
case 0x5c8d:
case 0x5c8e:
case 0x5c8f:
case 0x5e88:
case 0x5e89:
case 0x5e8a:
case 0x5e8b:
case 0x5e8c:
case 0x5e8d:
case 0x5e8e:
case 0x5e8f:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5188:
case 0x5189:
case 0x518a:
case 0x518b:
case 0x518c:
case 0x518d:
case 0x518e:
case 0x518f:
case 0x5388:
case 0x5389:
case 0x538a:
case 0x538b:
case 0x538c:
case 0x538d:
case 0x538e:
case 0x538f:
case 0x5588:
case 0x5589:
case 0x558a:
case 0x558b:
case 0x558c:
case 0x558d:
case 0x558e:
case 0x558f:
case 0x5788:
case 0x5789:
case 0x578a:
case 0x578b:
case 0x578c:
case 0x578d:
case 0x578e:
case 0x578f:
case 0x5988:
case 0x5989:
case 0x598a:
case 0x598b:
case 0x598c:
case 0x598d:
case 0x598e:
case 0x598f:
case 0x5b88:
case 0x5b89:
case 0x5b8a:
case 0x5b8b:
case 0x5b8c:
case 0x5b8d:
case 0x5b8e:
case 0x5b8f:
case 0x5d88:
case 0x5d89:
case 0x5d8a:
case 0x5d8b:
case 0x5d8c:
case 0x5d8d:
case 0x5d8e:
case 0x5d8f:
case 0x5f88:
case 0x5f89:
case 0x5f8a:
case 0x5f8b:
case 0x5f8c:
case 0x5f8d:
case 0x5f8e:
case 0x5f8f:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5090:
case 0x5091:
case 0x5092:
case 0x5093:
case 0x5094:
case 0x5095:
case 0x5096:
case 0x5097:
case 0x5290:
case 0x5291:
case 0x5292:
case 0x5293:
case 0x5294:
case 0x5295:
case 0x5296:
case 0x5297:
case 0x5490:
case 0x5491:
case 0x5492:
case 0x5493:
case 0x5494:
case 0x5495:
case 0x5496:
case 0x5497:
case 0x5690:
case 0x5691:
case 0x5692:
case 0x5693:
case 0x5694:
case 0x5695:
case 0x5696:
case 0x5697:
case 0x5890:
case 0x5891:
case 0x5892:
case 0x5893:
case 0x5894:
case 0x5895:
case 0x5896:
case 0x5897:
case 0x5a90:
case 0x5a91:
case 0x5a92:
case 0x5a93:
case 0x5a94:
case 0x5a95:
case 0x5a96:
case 0x5a97:
case 0x5c90:
case 0x5c91:
case 0x5c92:
case 0x5c93:
case 0x5c94:
case 0x5c95:
case 0x5c96:
case 0x5c97:
case 0x5e90:
case 0x5e91:
case 0x5e92:
case 0x5e93:
case 0x5e94:
case 0x5e95:
case 0x5e96:
case 0x5e97:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5190:
case 0x5191:
case 0x5192:
case 0x5193:
case 0x5194:
case 0x5195:
case 0x5196:
case 0x5197:
case 0x5390:
case 0x5391:
case 0x5392:
case 0x5393:
case 0x5394:
case 0x5395:
case 0x5396:
case 0x5397:
case 0x5590:
case 0x5591:
case 0x5592:
case 0x5593:
case 0x5594:
case 0x5595:
case 0x5596:
case 0x5597:
case 0x5790:
case 0x5791:
case 0x5792:
case 0x5793:
case 0x5794:
case 0x5795:
case 0x5796:
case 0x5797:
case 0x5990:
case 0x5991:
case 0x5992:
case 0x5993:
case 0x5994:
case 0x5995:
case 0x5996:
case 0x5997:
case 0x5b90:
case 0x5b91:
case 0x5b92:
case 0x5b93:
case 0x5b94:
case 0x5b95:
case 0x5b96:
case 0x5b97:
case 0x5d90:
case 0x5d91:
case 0x5d92:
case 0x5d93:
case 0x5d94:
case 0x5d95:
case 0x5d96:
case 0x5d97:
case 0x5f90:
case 0x5f91:
case 0x5f92:
case 0x5f93:
case 0x5f94:
case 0x5f95:
case 0x5f96:
case 0x5f97:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x50a8:
case 0x50a9:
case 0x50aa:
case 0x50ab:
case 0x50ac:
case 0x50ad:
case 0x50ae:
case 0x50af:
case 0x52a8:
case 0x52a9:
case 0x52aa:
case 0x52ab:
case 0x52ac:
case 0x52ad:
case 0x52ae:
case 0x52af:
case 0x54a8:
case 0x54a9:
case 0x54aa:
case 0x54ab:
case 0x54ac:
case 0x54ad:
case 0x54ae:
case 0x54af:
case 0x56a8:
case 0x56a9:
case 0x56aa:
case 0x56ab:
case 0x56ac:
case 0x56ad:
case 0x56ae:
case 0x56af:
case 0x58a8:
case 0x58a9:
case 0x58aa:
case 0x58ab:
case 0x58ac:
case 0x58ad:
case 0x58ae:
case 0x58af:
case 0x5aa8:
case 0x5aa9:
case 0x5aaa:
case 0x5aab:
case 0x5aac:
case 0x5aad:
case 0x5aae:
case 0x5aaf:
case 0x5ca8:
case 0x5ca9:
case 0x5caa:
case 0x5cab:
case 0x5cac:
case 0x5cad:
case 0x5cae:
case 0x5caf:
case 0x5ea8:
case 0x5ea9:
case 0x5eaa:
case 0x5eab:
case 0x5eac:
case 0x5ead:
case 0x5eae:
case 0x5eaf:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x51a8:
case 0x51a9:
case 0x51aa:
case 0x51ab:
case 0x51ac:
case 0x51ad:
case 0x51ae:
case 0x51af:
case 0x53a8:
case 0x53a9:
case 0x53aa:
case 0x53ab:
case 0x53ac:
case 0x53ad:
case 0x53ae:
case 0x53af:
case 0x55a8:
case 0x55a9:
case 0x55aa:
case 0x55ab:
case 0x55ac:
case 0x55ad:
case 0x55ae:
case 0x55af:
case 0x57a8:
case 0x57a9:
case 0x57aa:
case 0x57ab:
case 0x57ac:
case 0x57ad:
case 0x57ae:
case 0x57af:
case 0x59a8:
case 0x59a9:
case 0x59aa:
case 0x59ab:
case 0x59ac:
case 0x59ad:
case 0x59ae:
case 0x59af:
case 0x5ba8:
case 0x5ba9:
case 0x5baa:
case 0x5bab:
case 0x5bac:
case 0x5bad:
case 0x5bae:
case 0x5baf:
case 0x5da8:
case 0x5da9:
case 0x5daa:
case 0x5dab:
case 0x5dac:
case 0x5dad:
case 0x5dae:
case 0x5daf:
case 0x5fa8:
case 0x5fa9:
case 0x5faa:
case 0x5fab:
case 0x5fac:
case 0x5fad:
case 0x5fae:
case 0x5faf:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x50b0:
case 0x50b1:
case 0x50b2:
case 0x50b3:
case 0x50b4:
case 0x50b5:
case 0x50b6:
case 0x50b7:
case 0x52b0:
case 0x52b1:
case 0x52b2:
case 0x52b3:
case 0x52b4:
case 0x52b5:
case 0x52b6:
case 0x52b7:
case 0x54b0:
case 0x54b1:
case 0x54b2:
case 0x54b3:
case 0x54b4:
case 0x54b5:
case 0x54b6:
case 0x54b7:
case 0x56b0:
case 0x56b1:
case 0x56b2:
case 0x56b3:
case 0x56b4:
case 0x56b5:
case 0x56b6:
case 0x56b7:
case 0x58b0:
case 0x58b1:
case 0x58b2:
case 0x58b3:
case 0x58b4:
case 0x58b5:
case 0x58b6:
case 0x58b7:
case 0x5ab0:
case 0x5ab1:
case 0x5ab2:
case 0x5ab3:
case 0x5ab4:
case 0x5ab5:
case 0x5ab6:
case 0x5ab7:
case 0x5cb0:
case 0x5cb1:
case 0x5cb2:
case 0x5cb3:
case 0x5cb4:
case 0x5cb5:
case 0x5cb6:
case 0x5cb7:
case 0x5eb0:
case 0x5eb1:
case 0x5eb2:
case 0x5eb3:
case 0x5eb4:
case 0x5eb5:
case 0x5eb6:
case 0x5eb7:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x51b0:
case 0x51b1:
case 0x51b2:
case 0x51b3:
case 0x51b4:
case 0x51b5:
case 0x51b6:
case 0x51b7:
case 0x53b0:
case 0x53b1:
case 0x53b2:
case 0x53b3:
case 0x53b4:
case 0x53b5:
case 0x53b6:
case 0x53b7:
case 0x55b0:
case 0x55b1:
case 0x55b2:
case 0x55b3:
case 0x55b4:
case 0x55b5:
case 0x55b6:
case 0x55b7:
case 0x57b0:
case 0x57b1:
case 0x57b2:
case 0x57b3:
case 0x57b4:
case 0x57b5:
case 0x57b6:
case 0x57b7:
case 0x59b0:
case 0x59b1:
case 0x59b2:
case 0x59b3:
case 0x59b4:
case 0x59b5:
case 0x59b6:
case 0x59b7:
case 0x5bb0:
case 0x5bb1:
case 0x5bb2:
case 0x5bb3:
case 0x5bb4:
case 0x5bb5:
case 0x5bb6:
case 0x5bb7:
case 0x5db0:
case 0x5db1:
case 0x5db2:
case 0x5db3:
case 0x5db4:
case 0x5db5:
case 0x5db6:
case 0x5db7:
case 0x5fb0:
case 0x5fb1:
case 0x5fb2:
case 0x5fb3:
case 0x5fb4:
case 0x5fb5:
case 0x5fb6:
case 0x5fb7:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5098:
case 0x5099:
case 0x509a:
case 0x509b:
case 0x509c:
case 0x509d:
case 0x509e:
case 0x509f:
case 0x5298:
case 0x5299:
case 0x529a:
case 0x529b:
case 0x529c:
case 0x529d:
case 0x529e:
case 0x529f:
case 0x5498:
case 0x5499:
case 0x549a:
case 0x549b:
case 0x549c:
case 0x549d:
case 0x549e:
case 0x549f:
case 0x5698:
case 0x5699:
case 0x569a:
case 0x569b:
case 0x569c:
case 0x569d:
case 0x569e:
case 0x569f:
case 0x5898:
case 0x5899:
case 0x589a:
case 0x589b:
case 0x589c:
case 0x589d:
case 0x589e:
case 0x589f:
case 0x5a98:
case 0x5a99:
case 0x5a9a:
case 0x5a9b:
case 0x5a9c:
case 0x5a9d:
case 0x5a9e:
case 0x5a9f:
case 0x5c98:
case 0x5c99:
case 0x5c9a:
case 0x5c9b:
case 0x5c9c:
case 0x5c9d:
case 0x5c9e:
case 0x5c9f:
case 0x5e98:
case 0x5e99:
case 0x5e9a:
case 0x5e9b:
case 0x5e9c:
case 0x5e9d:
case 0x5e9e:
case 0x5e9f:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5198:
case 0x5199:
case 0x519a:
case 0x519b:
case 0x519c:
case 0x519d:
case 0x519e:
case 0x519f:
case 0x5398:
case 0x5399:
case 0x539a:
case 0x539b:
case 0x539c:
case 0x539d:
case 0x539e:
case 0x539f:
case 0x5598:
case 0x5599:
case 0x559a:
case 0x559b:
case 0x559c:
case 0x559d:
case 0x559e:
case 0x559f:
case 0x5798:
case 0x5799:
case 0x579a:
case 0x579b:
case 0x579c:
case 0x579d:
case 0x579e:
case 0x579f:
case 0x5998:
case 0x5999:
case 0x599a:
case 0x599b:
case 0x599c:
case 0x599d:
case 0x599e:
case 0x599f:
case 0x5b98:
case 0x5b99:
case 0x5b9a:
case 0x5b9b:
case 0x5b9c:
case 0x5b9d:
case 0x5b9e:
case 0x5b9f:
case 0x5d98:
case 0x5d99:
case 0x5d9a:
case 0x5d9b:
case 0x5d9c:
case 0x5d9d:
case 0x5d9e:
case 0x5d9f:
case 0x5f98:
case 0x5f99:
case 0x5f9a:
case 0x5f9b:
case 0x5f9c:
case 0x5f9d:
case 0x5f9e:
case 0x5f9f:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x50a0:
case 0x50a1:
case 0x50a2:
case 0x50a3:
case 0x50a4:
case 0x50a5:
case 0x50a6:
case 0x50a7:
case 0x52a0:
case 0x52a1:
case 0x52a2:
case 0x52a3:
case 0x52a4:
case 0x52a5:
case 0x52a6:
case 0x52a7:
case 0x54a0:
case 0x54a1:
case 0x54a2:
case 0x54a3:
case 0x54a4:
case 0x54a5:
case 0x54a6:
case 0x54a7:
case 0x56a0:
case 0x56a1:
case 0x56a2:
case 0x56a3:
case 0x56a4:
case 0x56a5:
case 0x56a6:
case 0x56a7:
case 0x58a0:
case 0x58a1:
case 0x58a2:
case 0x58a3:
case 0x58a4:
case 0x58a5:
case 0x58a6:
case 0x58a7:
case 0x5aa0:
case 0x5aa1:
case 0x5aa2:
case 0x5aa3:
case 0x5aa4:
case 0x5aa5:
case 0x5aa6:
case 0x5aa7:
case 0x5ca0:
case 0x5ca1:
case 0x5ca2:
case 0x5ca3:
case 0x5ca4:
case 0x5ca5:
case 0x5ca6:
case 0x5ca7:
case 0x5ea0:
case 0x5ea1:
case 0x5ea2:
case 0x5ea3:
case 0x5ea4:
case 0x5ea5:
case 0x5ea6:
case 0x5ea7:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x51a0:
case 0x51a1:
case 0x51a2:
case 0x51a3:
case 0x51a4:
case 0x51a5:
case 0x51a6:
case 0x51a7:
case 0x53a0:
case 0x53a1:
case 0x53a2:
case 0x53a3:
case 0x53a4:
case 0x53a5:
case 0x53a6:
case 0x53a7:
case 0x55a0:
case 0x55a1:
case 0x55a2:
case 0x55a3:
case 0x55a4:
case 0x55a5:
case 0x55a6:
case 0x55a7:
case 0x57a0:
case 0x57a1:
case 0x57a2:
case 0x57a3:
case 0x57a4:
case 0x57a5:
case 0x57a6:
case 0x57a7:
case 0x59a0:
case 0x59a1:
case 0x59a2:
case 0x59a3:
case 0x59a4:
case 0x59a5:
case 0x59a6:
case 0x59a7:
case 0x5ba0:
case 0x5ba1:
case 0x5ba2:
case 0x5ba3:
case 0x5ba4:
case 0x5ba5:
case 0x5ba6:
case 0x5ba7:
case 0x5da0:
case 0x5da1:
case 0x5da2:
case 0x5da3:
case 0x5da4:
case 0x5da5:
case 0x5da6:
case 0x5da7:
case 0x5fa0:
case 0x5fa1:
case 0x5fa2:
case 0x5fa3:
case 0x5fa4:
case 0x5fa5:
case 0x5fa6:
case 0x5fa7:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5080:
case 0x5081:
case 0x5082:
case 0x5083:
case 0x5084:
case 0x5085:
case 0x5086:
case 0x5087:
case 0x5280:
case 0x5281:
case 0x5282:
case 0x5283:
case 0x5284:
case 0x5285:
case 0x5286:
case 0x5287:
case 0x5480:
case 0x5481:
case 0x5482:
case 0x5483:
case 0x5484:
case 0x5485:
case 0x5486:
case 0x5487:
case 0x5680:
case 0x5681:
case 0x5682:
case 0x5683:
case 0x5684:
case 0x5685:
case 0x5686:
case 0x5687:
case 0x5880:
case 0x5881:
case 0x5882:
case 0x5883:
case 0x5884:
case 0x5885:
case 0x5886:
case 0x5887:
case 0x5a80:
case 0x5a81:
case 0x5a82:
case 0x5a83:
case 0x5a84:
case 0x5a85:
case 0x5a86:
case 0x5a87:
case 0x5c80:
case 0x5c81:
case 0x5c82:
case 0x5c83:
case 0x5c84:
case 0x5c85:
case 0x5c86:
case 0x5c87:
case 0x5e80:
case 0x5e81:
case 0x5e82:
case 0x5e83:
case 0x5e84:
case 0x5e85:
case 0x5e86:
case 0x5e87:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5180:
case 0x5181:
case 0x5182:
case 0x5183:
case 0x5184:
case 0x5185:
case 0x5186:
case 0x5187:
case 0x5380:
case 0x5381:
case 0x5382:
case 0x5383:
case 0x5384:
case 0x5385:
case 0x5386:
case 0x5387:
case 0x5580:
case 0x5581:
case 0x5582:
case 0x5583:
case 0x5584:
case 0x5585:
case 0x5586:
case 0x5587:
case 0x5780:
case 0x5781:
case 0x5782:
case 0x5783:
case 0x5784:
case 0x5785:
case 0x5786:
case 0x5787:
case 0x5980:
case 0x5981:
case 0x5982:
case 0x5983:
case 0x5984:
case 0x5985:
case 0x5986:
case 0x5987:
case 0x5b80:
case 0x5b81:
case 0x5b82:
case 0x5b83:
case 0x5b84:
case 0x5b85:
case 0x5b86:
case 0x5b87:
case 0x5d80:
case 0x5d81:
case 0x5d82:
case 0x5d83:
case 0x5d84:
case 0x5d85:
case 0x5d86:
case 0x5d87:
case 0x5f80:
case 0x5f81:
case 0x5f82:
case 0x5f83:
case 0x5f84:
case 0x5f85:
case 0x5f86:
case 0x5f87:
	{
	 HAM<uint32, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, DATA_REG_DIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x23fa:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21fa:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1fa:
case 0xd3fa:
case 0xd5fa:
case 0xd7fa:
case 0xd9fa:
case 0xdbfa:
case 0xddfa:
case 0xdffa:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1fa:
case 0xb3fa:
case 0xb5fa:
case 0xb7fa:
case 0xb9fa:
case 0xbbfa:
case 0xbdfa:
case 0xbffa:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91fa:
case 0x93fa:
case 0x95fa:
case 0x97fa:
case 0x99fa:
case 0x9bfa:
case 0x9dfa:
case 0x9ffa:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x20ba:
case 0x22ba:
case 0x24ba:
case 0x26ba:
case 0x28ba:
case 0x2aba:
case 0x2cba:
case 0x2eba:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x217a:
case 0x237a:
case 0x257a:
case 0x277a:
case 0x297a:
case 0x2b7a:
case 0x2d7a:
case 0x2f7a:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x21ba:
case 0x23ba:
case 0x25ba:
case 0x27ba:
case 0x29ba:
case 0x2bba:
case 0x2dba:
case 0x2fba:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20fa:
case 0x22fa:
case 0x24fa:
case 0x26fa:
case 0x28fa:
case 0x2afa:
case 0x2cfa:
case 0x2efa:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x213a:
case 0x233a:
case 0x253a:
case 0x273a:
case 0x293a:
case 0x2b3a:
case 0x2d3a:
case 0x2f3a:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd0ba:
case 0xd2ba:
case 0xd4ba:
case 0xd6ba:
case 0xd8ba:
case 0xdaba:
case 0xdcba:
case 0xdeba:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc0ba:
case 0xc2ba:
case 0xc4ba:
case 0xc6ba:
case 0xc8ba:
case 0xcaba:
case 0xccba:
case 0xceba:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb0ba:
case 0xb2ba:
case 0xb4ba:
case 0xb6ba:
case 0xb8ba:
case 0xbaba:
case 0xbcba:
case 0xbeba:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x203a:
case 0x223a:
case 0x243a:
case 0x263a:
case 0x283a:
case 0x2a3a:
case 0x2c3a:
case 0x2e3a:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x80ba:
case 0x82ba:
case 0x84ba:
case 0x86ba:
case 0x88ba:
case 0x8aba:
case 0x8cba:
case 0x8eba:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x90ba:
case 0x92ba:
case 0x94ba:
case 0x96ba:
case 0x98ba:
case 0x9aba:
case 0x9cba:
case 0x9eba:
	{
	 HAM<uint32, PC_DISP> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x207a:
case 0x227a:
case 0x247a:
case 0x267a:
case 0x287a:
case 0x2a7a:
case 0x2c7a:
case 0x2e7a:
	{
	 HAM<uint32, PC_DISP> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x23fb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x21fb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0xd1fb:
case 0xd3fb:
case 0xd5fb:
case 0xd7fb:
case 0xd9fb:
case 0xdbfb:
case 0xddfb:
case 0xdffb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xb1fb:
case 0xb3fb:
case 0xb5fb:
case 0xb7fb:
case 0xb9fb:
case 0xbbfb:
case 0xbdfb:
case 0xbffb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x91fb:
case 0x93fb:
case 0x95fb:
case 0x97fb:
case 0x99fb:
case 0x9bfb:
case 0x9dfb:
case 0x9ffb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x20bb:
case 0x22bb:
case 0x24bb:
case 0x26bb:
case 0x28bb:
case 0x2abb:
case 0x2cbb:
case 0x2ebb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x217b:
case 0x237b:
case 0x257b:
case 0x277b:
case 0x297b:
case 0x2b7b:
case 0x2d7b:
case 0x2f7b:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x21bb:
case 0x23bb:
case 0x25bb:
case 0x27bb:
case 0x29bb:
case 0x2bbb:
case 0x2dbb:
case 0x2fbb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x20fb:
case 0x22fb:
case 0x24fb:
case 0x26fb:
case 0x28fb:
case 0x2afb:
case 0x2cfb:
case 0x2efb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x213b:
case 0x233b:
case 0x253b:
case 0x273b:
case 0x293b:
case 0x2b3b:
case 0x2d3b:
case 0x2f3b:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd0bb:
case 0xd2bb:
case 0xd4bb:
case 0xd6bb:
case 0xd8bb:
case 0xdabb:
case 0xdcbb:
case 0xdebb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc0bb:
case 0xc2bb:
case 0xc4bb:
case 0xc6bb:
case 0xc8bb:
case 0xcabb:
case 0xccbb:
case 0xcebb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb0bb:
case 0xb2bb:
case 0xb4bb:
case 0xb6bb:
case 0xb8bb:
case 0xbabb:
case 0xbcbb:
case 0xbebb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x203b:
case 0x223b:
case 0x243b:
case 0x263b:
case 0x283b:
case 0x2a3b:
case 0x2c3b:
case 0x2e3b:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x80bb:
case 0x82bb:
case 0x84bb:
case 0x86bb:
case 0x88bb:
case 0x8abb:
case 0x8cbb:
case 0x8ebb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x90bb:
case 0x92bb:
case 0x94bb:
case 0x96bb:
case 0x98bb:
case 0x9abb:
case 0x9cbb:
case 0x9ebb:
	{
	 HAM<uint32, PC_INDEX> src(this); HAM<uint32, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x207b:
case 0x227b:
case 0x247b:
case 0x267b:
case 0x287b:
case 0x2a7b:
case 0x2c7b:
case 0x2e7b:
	{
	 HAM<uint32, PC_INDEX> src(this); MOVEA(src, instr_b11_b9);
	}
	break;

case 0x4239:
	{
	 HAM<uint8, ABS_LONG> dst(this); CLR(dst);
	}
	break;

case 0x4839:
	{
	 HAM<uint8, ABS_LONG> dst(this); NBCD(dst);
	}
	break;

case 0x4439:
	{
	 HAM<uint8, ABS_LONG> dst(this); NEG(dst);
	}
	break;

case 0x4039:
	{
	 HAM<uint8, ABS_LONG> dst(this); NEGX(dst);
	}
	break;

case 0x4639:
	{
	 HAM<uint8, ABS_LONG> dst(this); NOT(dst);
	}
	break;

case 0x50f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x00>(dst);
	}
	break;

case 0x51f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x01>(dst);
	}
	break;

case 0x52f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x02>(dst);
	}
	break;

case 0x53f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x03>(dst);
	}
	break;

case 0x54f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x04>(dst);
	}
	break;

case 0x55f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x05>(dst);
	}
	break;

case 0x56f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x06>(dst);
	}
	break;

case 0x57f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x07>(dst);
	}
	break;

case 0x58f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x08>(dst);
	}
	break;

case 0x59f9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x09>(dst);
	}
	break;

case 0x5af9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x0a>(dst);
	}
	break;

case 0x5bf9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x0b>(dst);
	}
	break;

case 0x5cf9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x0c>(dst);
	}
	break;

case 0x5df9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x0d>(dst);
	}
	break;

case 0x5ef9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x0e>(dst);
	}
	break;

case 0x5ff9:
	{
	 HAM<uint8, ABS_LONG> dst(this); Scc<0x0f>(dst);
	}
	break;

case 0x4af9:
	{
	 HAM<uint8, ABS_LONG> dst(this); TAS(dst);
	}
	break;

case 0x4a39:
	{
	 HAM<uint8, ABS_LONG> dst(this); TST(dst);
	}
	break;

case 0x13f9:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11f9:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x10b9:
case 0x12b9:
case 0x14b9:
case 0x16b9:
case 0x18b9:
case 0x1ab9:
case 0x1cb9:
case 0x1eb9:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1179:
case 0x1379:
case 0x1579:
case 0x1779:
case 0x1979:
case 0x1b79:
case 0x1d79:
case 0x1f79:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x11b9:
case 0x13b9:
case 0x15b9:
case 0x17b9:
case 0x19b9:
case 0x1bb9:
case 0x1db9:
case 0x1fb9:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x10f9:
case 0x12f9:
case 0x14f9:
case 0x16f9:
case 0x18f9:
case 0x1af9:
case 0x1cf9:
case 0x1ef9:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1139:
case 0x1339:
case 0x1539:
case 0x1739:
case 0x1939:
case 0x1b39:
case 0x1d39:
case 0x1f39:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd039:
case 0xd239:
case 0xd439:
case 0xd639:
case 0xd839:
case 0xda39:
case 0xdc39:
case 0xde39:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc039:
case 0xc239:
case 0xc439:
case 0xc639:
case 0xc839:
case 0xca39:
case 0xcc39:
case 0xce39:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb039:
case 0xb239:
case 0xb439:
case 0xb639:
case 0xb839:
case 0xba39:
case 0xbc39:
case 0xbe39:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x1039:
case 0x1239:
case 0x1439:
case 0x1639:
case 0x1839:
case 0x1a39:
case 0x1c39:
case 0x1e39:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8039:
case 0x8239:
case 0x8439:
case 0x8639:
case 0x8839:
case 0x8a39:
case 0x8c39:
case 0x8e39:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9039:
case 0x9239:
case 0x9439:
case 0x9639:
case 0x9839:
case 0x9a39:
case 0x9c39:
case 0x9e39:
	{
	 HAM<uint8, ABS_LONG> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0179:
case 0x0379:
case 0x0579:
case 0x0779:
case 0x0979:
case 0x0b79:
case 0x0d79:
case 0x0f79:
	{
	 HAM<uint8, ABS_LONG> targ(this); BCHG(targ, D[instr_b11_b9]);
	}
	break;

case 0x01b9:
case 0x03b9:
case 0x05b9:
case 0x07b9:
case 0x09b9:
case 0x0bb9:
case 0x0db9:
case 0x0fb9:
	{
	 HAM<uint8, ABS_LONG> targ(this); BCLR(targ, D[instr_b11_b9]);
	}
	break;

case 0x01f9:
case 0x03f9:
case 0x05f9:
case 0x07f9:
case 0x09f9:
case 0x0bf9:
case 0x0df9:
case 0x0ff9:
	{
	 HAM<uint8, ABS_LONG> targ(this); BSET(targ, D[instr_b11_b9]);
	}
	break;

case 0x0139:
case 0x0339:
case 0x0539:
case 0x0739:
case 0x0939:
case 0x0b39:
case 0x0d39:
case 0x0f39:
	{
	 HAM<uint8, ABS_LONG> targ(this); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0x4238:
	{
	 HAM<uint8, ABS_SHORT> dst(this); CLR(dst);
	}
	break;

case 0x4838:
	{
	 HAM<uint8, ABS_SHORT> dst(this); NBCD(dst);
	}
	break;

case 0x4438:
	{
	 HAM<uint8, ABS_SHORT> dst(this); NEG(dst);
	}
	break;

case 0x4038:
	{
	 HAM<uint8, ABS_SHORT> dst(this); NEGX(dst);
	}
	break;

case 0x4638:
	{
	 HAM<uint8, ABS_SHORT> dst(this); NOT(dst);
	}
	break;

case 0x50f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x00>(dst);
	}
	break;

case 0x51f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x01>(dst);
	}
	break;

case 0x52f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x02>(dst);
	}
	break;

case 0x53f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x03>(dst);
	}
	break;

case 0x54f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x04>(dst);
	}
	break;

case 0x55f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x05>(dst);
	}
	break;

case 0x56f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x06>(dst);
	}
	break;

case 0x57f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x07>(dst);
	}
	break;

case 0x58f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x08>(dst);
	}
	break;

case 0x59f8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x09>(dst);
	}
	break;

case 0x5af8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x0a>(dst);
	}
	break;

case 0x5bf8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x0b>(dst);
	}
	break;

case 0x5cf8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x0c>(dst);
	}
	break;

case 0x5df8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x0d>(dst);
	}
	break;

case 0x5ef8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x0e>(dst);
	}
	break;

case 0x5ff8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); Scc<0x0f>(dst);
	}
	break;

case 0x4af8:
	{
	 HAM<uint8, ABS_SHORT> dst(this); TAS(dst);
	}
	break;

case 0x4a38:
	{
	 HAM<uint8, ABS_SHORT> dst(this); TST(dst);
	}
	break;

case 0x13f8:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11f8:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x10b8:
case 0x12b8:
case 0x14b8:
case 0x16b8:
case 0x18b8:
case 0x1ab8:
case 0x1cb8:
case 0x1eb8:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1178:
case 0x1378:
case 0x1578:
case 0x1778:
case 0x1978:
case 0x1b78:
case 0x1d78:
case 0x1f78:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x11b8:
case 0x13b8:
case 0x15b8:
case 0x17b8:
case 0x19b8:
case 0x1bb8:
case 0x1db8:
case 0x1fb8:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x10f8:
case 0x12f8:
case 0x14f8:
case 0x16f8:
case 0x18f8:
case 0x1af8:
case 0x1cf8:
case 0x1ef8:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1138:
case 0x1338:
case 0x1538:
case 0x1738:
case 0x1938:
case 0x1b38:
case 0x1d38:
case 0x1f38:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd038:
case 0xd238:
case 0xd438:
case 0xd638:
case 0xd838:
case 0xda38:
case 0xdc38:
case 0xde38:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc038:
case 0xc238:
case 0xc438:
case 0xc638:
case 0xc838:
case 0xca38:
case 0xcc38:
case 0xce38:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb038:
case 0xb238:
case 0xb438:
case 0xb638:
case 0xb838:
case 0xba38:
case 0xbc38:
case 0xbe38:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x1038:
case 0x1238:
case 0x1438:
case 0x1638:
case 0x1838:
case 0x1a38:
case 0x1c38:
case 0x1e38:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8038:
case 0x8238:
case 0x8438:
case 0x8638:
case 0x8838:
case 0x8a38:
case 0x8c38:
case 0x8e38:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9038:
case 0x9238:
case 0x9438:
case 0x9638:
case 0x9838:
case 0x9a38:
case 0x9c38:
case 0x9e38:
	{
	 HAM<uint8, ABS_SHORT> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0178:
case 0x0378:
case 0x0578:
case 0x0778:
case 0x0978:
case 0x0b78:
case 0x0d78:
case 0x0f78:
	{
	 HAM<uint8, ABS_SHORT> targ(this); BCHG(targ, D[instr_b11_b9]);
	}
	break;

case 0x01b8:
case 0x03b8:
case 0x05b8:
case 0x07b8:
case 0x09b8:
case 0x0bb8:
case 0x0db8:
case 0x0fb8:
	{
	 HAM<uint8, ABS_SHORT> targ(this); BCLR(targ, D[instr_b11_b9]);
	}
	break;

case 0x01f8:
case 0x03f8:
case 0x05f8:
case 0x07f8:
case 0x09f8:
case 0x0bf8:
case 0x0df8:
case 0x0ff8:
	{
	 HAM<uint8, ABS_SHORT> targ(this); BSET(targ, D[instr_b11_b9]);
	}
	break;

case 0x0138:
case 0x0338:
case 0x0538:
case 0x0738:
case 0x0938:
case 0x0b38:
case 0x0d38:
case 0x0f38:
	{
	 HAM<uint8, ABS_SHORT> targ(this); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0x4210:
case 0x4211:
case 0x4212:
case 0x4213:
case 0x4214:
case 0x4215:
case 0x4216:
case 0x4217:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4810:
case 0x4811:
case 0x4812:
case 0x4813:
case 0x4814:
case 0x4815:
case 0x4816:
case 0x4817:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); NBCD(dst);
	}
	break;

case 0x4410:
case 0x4411:
case 0x4412:
case 0x4413:
case 0x4414:
case 0x4415:
case 0x4416:
case 0x4417:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4010:
case 0x4011:
case 0x4012:
case 0x4013:
case 0x4014:
case 0x4015:
case 0x4016:
case 0x4017:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4610:
case 0x4611:
case 0x4612:
case 0x4613:
case 0x4614:
case 0x4615:
case 0x4616:
case 0x4617:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x50d0:
case 0x50d1:
case 0x50d2:
case 0x50d3:
case 0x50d4:
case 0x50d5:
case 0x50d6:
case 0x50d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x00>(dst);
	}
	break;

case 0x51d0:
case 0x51d1:
case 0x51d2:
case 0x51d3:
case 0x51d4:
case 0x51d5:
case 0x51d6:
case 0x51d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x01>(dst);
	}
	break;

case 0x52d0:
case 0x52d1:
case 0x52d2:
case 0x52d3:
case 0x52d4:
case 0x52d5:
case 0x52d6:
case 0x52d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x02>(dst);
	}
	break;

case 0x53d0:
case 0x53d1:
case 0x53d2:
case 0x53d3:
case 0x53d4:
case 0x53d5:
case 0x53d6:
case 0x53d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x03>(dst);
	}
	break;

case 0x54d0:
case 0x54d1:
case 0x54d2:
case 0x54d3:
case 0x54d4:
case 0x54d5:
case 0x54d6:
case 0x54d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x04>(dst);
	}
	break;

case 0x55d0:
case 0x55d1:
case 0x55d2:
case 0x55d3:
case 0x55d4:
case 0x55d5:
case 0x55d6:
case 0x55d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x05>(dst);
	}
	break;

case 0x56d0:
case 0x56d1:
case 0x56d2:
case 0x56d3:
case 0x56d4:
case 0x56d5:
case 0x56d6:
case 0x56d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x06>(dst);
	}
	break;

case 0x57d0:
case 0x57d1:
case 0x57d2:
case 0x57d3:
case 0x57d4:
case 0x57d5:
case 0x57d6:
case 0x57d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x07>(dst);
	}
	break;

case 0x58d0:
case 0x58d1:
case 0x58d2:
case 0x58d3:
case 0x58d4:
case 0x58d5:
case 0x58d6:
case 0x58d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x08>(dst);
	}
	break;

case 0x59d0:
case 0x59d1:
case 0x59d2:
case 0x59d3:
case 0x59d4:
case 0x59d5:
case 0x59d6:
case 0x59d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x09>(dst);
	}
	break;

case 0x5ad0:
case 0x5ad1:
case 0x5ad2:
case 0x5ad3:
case 0x5ad4:
case 0x5ad5:
case 0x5ad6:
case 0x5ad7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x0a>(dst);
	}
	break;

case 0x5bd0:
case 0x5bd1:
case 0x5bd2:
case 0x5bd3:
case 0x5bd4:
case 0x5bd5:
case 0x5bd6:
case 0x5bd7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x0b>(dst);
	}
	break;

case 0x5cd0:
case 0x5cd1:
case 0x5cd2:
case 0x5cd3:
case 0x5cd4:
case 0x5cd5:
case 0x5cd6:
case 0x5cd7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x0c>(dst);
	}
	break;

case 0x5dd0:
case 0x5dd1:
case 0x5dd2:
case 0x5dd3:
case 0x5dd4:
case 0x5dd5:
case 0x5dd6:
case 0x5dd7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x0d>(dst);
	}
	break;

case 0x5ed0:
case 0x5ed1:
case 0x5ed2:
case 0x5ed3:
case 0x5ed4:
case 0x5ed5:
case 0x5ed6:
case 0x5ed7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x0e>(dst);
	}
	break;

case 0x5fd0:
case 0x5fd1:
case 0x5fd2:
case 0x5fd3:
case 0x5fd4:
case 0x5fd5:
case 0x5fd6:
case 0x5fd7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); Scc<0x0f>(dst);
	}
	break;

case 0x4ad0:
case 0x4ad1:
case 0x4ad2:
case 0x4ad3:
case 0x4ad4:
case 0x4ad5:
case 0x4ad6:
case 0x4ad7:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); TAS(dst);
	}
	break;

case 0x4a10:
case 0x4a11:
case 0x4a12:
case 0x4a13:
case 0x4a14:
case 0x4a15:
case 0x4a16:
case 0x4a17:
	{
	 HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x13d0:
case 0x13d1:
case 0x13d2:
case 0x13d3:
case 0x13d4:
case 0x13d5:
case 0x13d6:
case 0x13d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11d0:
case 0x11d1:
case 0x11d2:
case 0x11d3:
case 0x11d4:
case 0x11d5:
case 0x11d6:
case 0x11d7:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x1090:
case 0x1091:
case 0x1092:
case 0x1093:
case 0x1094:
case 0x1095:
case 0x1096:
case 0x1097:
case 0x1290:
case 0x1291:
case 0x1292:
case 0x1293:
case 0x1294:
case 0x1295:
case 0x1296:
case 0x1297:
case 0x1490:
case 0x1491:
case 0x1492:
case 0x1493:
case 0x1494:
case 0x1495:
case 0x1496:
case 0x1497:
case 0x1690:
case 0x1691:
case 0x1692:
case 0x1693:
case 0x1694:
case 0x1695:
case 0x1696:
case 0x1697:
case 0x1890:
case 0x1891:
case 0x1892:
case 0x1893:
case 0x1894:
case 0x1895:
case 0x1896:
case 0x1897:
case 0x1a90:
case 0x1a91:
case 0x1a92:
case 0x1a93:
case 0x1a94:
case 0x1a95:
case 0x1a96:
case 0x1a97:
case 0x1c90:
case 0x1c91:
case 0x1c92:
case 0x1c93:
case 0x1c94:
case 0x1c95:
case 0x1c96:
case 0x1c97:
case 0x1e90:
case 0x1e91:
case 0x1e92:
case 0x1e93:
case 0x1e94:
case 0x1e95:
case 0x1e96:
case 0x1e97:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1150:
case 0x1151:
case 0x1152:
case 0x1153:
case 0x1154:
case 0x1155:
case 0x1156:
case 0x1157:
case 0x1350:
case 0x1351:
case 0x1352:
case 0x1353:
case 0x1354:
case 0x1355:
case 0x1356:
case 0x1357:
case 0x1550:
case 0x1551:
case 0x1552:
case 0x1553:
case 0x1554:
case 0x1555:
case 0x1556:
case 0x1557:
case 0x1750:
case 0x1751:
case 0x1752:
case 0x1753:
case 0x1754:
case 0x1755:
case 0x1756:
case 0x1757:
case 0x1950:
case 0x1951:
case 0x1952:
case 0x1953:
case 0x1954:
case 0x1955:
case 0x1956:
case 0x1957:
case 0x1b50:
case 0x1b51:
case 0x1b52:
case 0x1b53:
case 0x1b54:
case 0x1b55:
case 0x1b56:
case 0x1b57:
case 0x1d50:
case 0x1d51:
case 0x1d52:
case 0x1d53:
case 0x1d54:
case 0x1d55:
case 0x1d56:
case 0x1d57:
case 0x1f50:
case 0x1f51:
case 0x1f52:
case 0x1f53:
case 0x1f54:
case 0x1f55:
case 0x1f56:
case 0x1f57:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1190:
case 0x1191:
case 0x1192:
case 0x1193:
case 0x1194:
case 0x1195:
case 0x1196:
case 0x1197:
case 0x1390:
case 0x1391:
case 0x1392:
case 0x1393:
case 0x1394:
case 0x1395:
case 0x1396:
case 0x1397:
case 0x1590:
case 0x1591:
case 0x1592:
case 0x1593:
case 0x1594:
case 0x1595:
case 0x1596:
case 0x1597:
case 0x1790:
case 0x1791:
case 0x1792:
case 0x1793:
case 0x1794:
case 0x1795:
case 0x1796:
case 0x1797:
case 0x1990:
case 0x1991:
case 0x1992:
case 0x1993:
case 0x1994:
case 0x1995:
case 0x1996:
case 0x1997:
case 0x1b90:
case 0x1b91:
case 0x1b92:
case 0x1b93:
case 0x1b94:
case 0x1b95:
case 0x1b96:
case 0x1b97:
case 0x1d90:
case 0x1d91:
case 0x1d92:
case 0x1d93:
case 0x1d94:
case 0x1d95:
case 0x1d96:
case 0x1d97:
case 0x1f90:
case 0x1f91:
case 0x1f92:
case 0x1f93:
case 0x1f94:
case 0x1f95:
case 0x1f96:
case 0x1f97:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x10d0:
case 0x10d1:
case 0x10d2:
case 0x10d3:
case 0x10d4:
case 0x10d5:
case 0x10d6:
case 0x10d7:
case 0x12d0:
case 0x12d1:
case 0x12d2:
case 0x12d3:
case 0x12d4:
case 0x12d5:
case 0x12d6:
case 0x12d7:
case 0x14d0:
case 0x14d1:
case 0x14d2:
case 0x14d3:
case 0x14d4:
case 0x14d5:
case 0x14d6:
case 0x14d7:
case 0x16d0:
case 0x16d1:
case 0x16d2:
case 0x16d3:
case 0x16d4:
case 0x16d5:
case 0x16d6:
case 0x16d7:
case 0x18d0:
case 0x18d1:
case 0x18d2:
case 0x18d3:
case 0x18d4:
case 0x18d5:
case 0x18d6:
case 0x18d7:
case 0x1ad0:
case 0x1ad1:
case 0x1ad2:
case 0x1ad3:
case 0x1ad4:
case 0x1ad5:
case 0x1ad6:
case 0x1ad7:
case 0x1cd0:
case 0x1cd1:
case 0x1cd2:
case 0x1cd3:
case 0x1cd4:
case 0x1cd5:
case 0x1cd6:
case 0x1cd7:
case 0x1ed0:
case 0x1ed1:
case 0x1ed2:
case 0x1ed3:
case 0x1ed4:
case 0x1ed5:
case 0x1ed6:
case 0x1ed7:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1110:
case 0x1111:
case 0x1112:
case 0x1113:
case 0x1114:
case 0x1115:
case 0x1116:
case 0x1117:
case 0x1310:
case 0x1311:
case 0x1312:
case 0x1313:
case 0x1314:
case 0x1315:
case 0x1316:
case 0x1317:
case 0x1510:
case 0x1511:
case 0x1512:
case 0x1513:
case 0x1514:
case 0x1515:
case 0x1516:
case 0x1517:
case 0x1710:
case 0x1711:
case 0x1712:
case 0x1713:
case 0x1714:
case 0x1715:
case 0x1716:
case 0x1717:
case 0x1910:
case 0x1911:
case 0x1912:
case 0x1913:
case 0x1914:
case 0x1915:
case 0x1916:
case 0x1917:
case 0x1b10:
case 0x1b11:
case 0x1b12:
case 0x1b13:
case 0x1b14:
case 0x1b15:
case 0x1b16:
case 0x1b17:
case 0x1d10:
case 0x1d11:
case 0x1d12:
case 0x1d13:
case 0x1d14:
case 0x1d15:
case 0x1d16:
case 0x1d17:
case 0x1f10:
case 0x1f11:
case 0x1f12:
case 0x1f13:
case 0x1f14:
case 0x1f15:
case 0x1f16:
case 0x1f17:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd010:
case 0xd011:
case 0xd012:
case 0xd013:
case 0xd014:
case 0xd015:
case 0xd016:
case 0xd017:
case 0xd210:
case 0xd211:
case 0xd212:
case 0xd213:
case 0xd214:
case 0xd215:
case 0xd216:
case 0xd217:
case 0xd410:
case 0xd411:
case 0xd412:
case 0xd413:
case 0xd414:
case 0xd415:
case 0xd416:
case 0xd417:
case 0xd610:
case 0xd611:
case 0xd612:
case 0xd613:
case 0xd614:
case 0xd615:
case 0xd616:
case 0xd617:
case 0xd810:
case 0xd811:
case 0xd812:
case 0xd813:
case 0xd814:
case 0xd815:
case 0xd816:
case 0xd817:
case 0xda10:
case 0xda11:
case 0xda12:
case 0xda13:
case 0xda14:
case 0xda15:
case 0xda16:
case 0xda17:
case 0xdc10:
case 0xdc11:
case 0xdc12:
case 0xdc13:
case 0xdc14:
case 0xdc15:
case 0xdc16:
case 0xdc17:
case 0xde10:
case 0xde11:
case 0xde12:
case 0xde13:
case 0xde14:
case 0xde15:
case 0xde16:
case 0xde17:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc010:
case 0xc011:
case 0xc012:
case 0xc013:
case 0xc014:
case 0xc015:
case 0xc016:
case 0xc017:
case 0xc210:
case 0xc211:
case 0xc212:
case 0xc213:
case 0xc214:
case 0xc215:
case 0xc216:
case 0xc217:
case 0xc410:
case 0xc411:
case 0xc412:
case 0xc413:
case 0xc414:
case 0xc415:
case 0xc416:
case 0xc417:
case 0xc610:
case 0xc611:
case 0xc612:
case 0xc613:
case 0xc614:
case 0xc615:
case 0xc616:
case 0xc617:
case 0xc810:
case 0xc811:
case 0xc812:
case 0xc813:
case 0xc814:
case 0xc815:
case 0xc816:
case 0xc817:
case 0xca10:
case 0xca11:
case 0xca12:
case 0xca13:
case 0xca14:
case 0xca15:
case 0xca16:
case 0xca17:
case 0xcc10:
case 0xcc11:
case 0xcc12:
case 0xcc13:
case 0xcc14:
case 0xcc15:
case 0xcc16:
case 0xcc17:
case 0xce10:
case 0xce11:
case 0xce12:
case 0xce13:
case 0xce14:
case 0xce15:
case 0xce16:
case 0xce17:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb010:
case 0xb011:
case 0xb012:
case 0xb013:
case 0xb014:
case 0xb015:
case 0xb016:
case 0xb017:
case 0xb210:
case 0xb211:
case 0xb212:
case 0xb213:
case 0xb214:
case 0xb215:
case 0xb216:
case 0xb217:
case 0xb410:
case 0xb411:
case 0xb412:
case 0xb413:
case 0xb414:
case 0xb415:
case 0xb416:
case 0xb417:
case 0xb610:
case 0xb611:
case 0xb612:
case 0xb613:
case 0xb614:
case 0xb615:
case 0xb616:
case 0xb617:
case 0xb810:
case 0xb811:
case 0xb812:
case 0xb813:
case 0xb814:
case 0xb815:
case 0xb816:
case 0xb817:
case 0xba10:
case 0xba11:
case 0xba12:
case 0xba13:
case 0xba14:
case 0xba15:
case 0xba16:
case 0xba17:
case 0xbc10:
case 0xbc11:
case 0xbc12:
case 0xbc13:
case 0xbc14:
case 0xbc15:
case 0xbc16:
case 0xbc17:
case 0xbe10:
case 0xbe11:
case 0xbe12:
case 0xbe13:
case 0xbe14:
case 0xbe15:
case 0xbe16:
case 0xbe17:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x1010:
case 0x1011:
case 0x1012:
case 0x1013:
case 0x1014:
case 0x1015:
case 0x1016:
case 0x1017:
case 0x1210:
case 0x1211:
case 0x1212:
case 0x1213:
case 0x1214:
case 0x1215:
case 0x1216:
case 0x1217:
case 0x1410:
case 0x1411:
case 0x1412:
case 0x1413:
case 0x1414:
case 0x1415:
case 0x1416:
case 0x1417:
case 0x1610:
case 0x1611:
case 0x1612:
case 0x1613:
case 0x1614:
case 0x1615:
case 0x1616:
case 0x1617:
case 0x1810:
case 0x1811:
case 0x1812:
case 0x1813:
case 0x1814:
case 0x1815:
case 0x1816:
case 0x1817:
case 0x1a10:
case 0x1a11:
case 0x1a12:
case 0x1a13:
case 0x1a14:
case 0x1a15:
case 0x1a16:
case 0x1a17:
case 0x1c10:
case 0x1c11:
case 0x1c12:
case 0x1c13:
case 0x1c14:
case 0x1c15:
case 0x1c16:
case 0x1c17:
case 0x1e10:
case 0x1e11:
case 0x1e12:
case 0x1e13:
case 0x1e14:
case 0x1e15:
case 0x1e16:
case 0x1e17:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8010:
case 0x8011:
case 0x8012:
case 0x8013:
case 0x8014:
case 0x8015:
case 0x8016:
case 0x8017:
case 0x8210:
case 0x8211:
case 0x8212:
case 0x8213:
case 0x8214:
case 0x8215:
case 0x8216:
case 0x8217:
case 0x8410:
case 0x8411:
case 0x8412:
case 0x8413:
case 0x8414:
case 0x8415:
case 0x8416:
case 0x8417:
case 0x8610:
case 0x8611:
case 0x8612:
case 0x8613:
case 0x8614:
case 0x8615:
case 0x8616:
case 0x8617:
case 0x8810:
case 0x8811:
case 0x8812:
case 0x8813:
case 0x8814:
case 0x8815:
case 0x8816:
case 0x8817:
case 0x8a10:
case 0x8a11:
case 0x8a12:
case 0x8a13:
case 0x8a14:
case 0x8a15:
case 0x8a16:
case 0x8a17:
case 0x8c10:
case 0x8c11:
case 0x8c12:
case 0x8c13:
case 0x8c14:
case 0x8c15:
case 0x8c16:
case 0x8c17:
case 0x8e10:
case 0x8e11:
case 0x8e12:
case 0x8e13:
case 0x8e14:
case 0x8e15:
case 0x8e16:
case 0x8e17:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9010:
case 0x9011:
case 0x9012:
case 0x9013:
case 0x9014:
case 0x9015:
case 0x9016:
case 0x9017:
case 0x9210:
case 0x9211:
case 0x9212:
case 0x9213:
case 0x9214:
case 0x9215:
case 0x9216:
case 0x9217:
case 0x9410:
case 0x9411:
case 0x9412:
case 0x9413:
case 0x9414:
case 0x9415:
case 0x9416:
case 0x9417:
case 0x9610:
case 0x9611:
case 0x9612:
case 0x9613:
case 0x9614:
case 0x9615:
case 0x9616:
case 0x9617:
case 0x9810:
case 0x9811:
case 0x9812:
case 0x9813:
case 0x9814:
case 0x9815:
case 0x9816:
case 0x9817:
case 0x9a10:
case 0x9a11:
case 0x9a12:
case 0x9a13:
case 0x9a14:
case 0x9a15:
case 0x9a16:
case 0x9a17:
case 0x9c10:
case 0x9c11:
case 0x9c12:
case 0x9c13:
case 0x9c14:
case 0x9c15:
case 0x9c16:
case 0x9c17:
case 0x9e10:
case 0x9e11:
case 0x9e12:
case 0x9e13:
case 0x9e14:
case 0x9e15:
case 0x9e16:
case 0x9e17:
	{
	 HAM<uint8, ADDR_REG_INDIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0150:
case 0x0151:
case 0x0152:
case 0x0153:
case 0x0154:
case 0x0155:
case 0x0156:
case 0x0157:
case 0x0350:
case 0x0351:
case 0x0352:
case 0x0353:
case 0x0354:
case 0x0355:
case 0x0356:
case 0x0357:
case 0x0550:
case 0x0551:
case 0x0552:
case 0x0553:
case 0x0554:
case 0x0555:
case 0x0556:
case 0x0557:
case 0x0750:
case 0x0751:
case 0x0752:
case 0x0753:
case 0x0754:
case 0x0755:
case 0x0756:
case 0x0757:
case 0x0950:
case 0x0951:
case 0x0952:
case 0x0953:
case 0x0954:
case 0x0955:
case 0x0956:
case 0x0957:
case 0x0b50:
case 0x0b51:
case 0x0b52:
case 0x0b53:
case 0x0b54:
case 0x0b55:
case 0x0b56:
case 0x0b57:
case 0x0d50:
case 0x0d51:
case 0x0d52:
case 0x0d53:
case 0x0d54:
case 0x0d55:
case 0x0d56:
case 0x0d57:
case 0x0f50:
case 0x0f51:
case 0x0f52:
case 0x0f53:
case 0x0f54:
case 0x0f55:
case 0x0f56:
case 0x0f57:
	{
	 HAM<uint8, ADDR_REG_INDIR> targ(this, instr_b2_b0); BCHG(targ, D[instr_b11_b9]);
	}
	break;

case 0x0190:
case 0x0191:
case 0x0192:
case 0x0193:
case 0x0194:
case 0x0195:
case 0x0196:
case 0x0197:
case 0x0390:
case 0x0391:
case 0x0392:
case 0x0393:
case 0x0394:
case 0x0395:
case 0x0396:
case 0x0397:
case 0x0590:
case 0x0591:
case 0x0592:
case 0x0593:
case 0x0594:
case 0x0595:
case 0x0596:
case 0x0597:
case 0x0790:
case 0x0791:
case 0x0792:
case 0x0793:
case 0x0794:
case 0x0795:
case 0x0796:
case 0x0797:
case 0x0990:
case 0x0991:
case 0x0992:
case 0x0993:
case 0x0994:
case 0x0995:
case 0x0996:
case 0x0997:
case 0x0b90:
case 0x0b91:
case 0x0b92:
case 0x0b93:
case 0x0b94:
case 0x0b95:
case 0x0b96:
case 0x0b97:
case 0x0d90:
case 0x0d91:
case 0x0d92:
case 0x0d93:
case 0x0d94:
case 0x0d95:
case 0x0d96:
case 0x0d97:
case 0x0f90:
case 0x0f91:
case 0x0f92:
case 0x0f93:
case 0x0f94:
case 0x0f95:
case 0x0f96:
case 0x0f97:
	{
	 HAM<uint8, ADDR_REG_INDIR> targ(this, instr_b2_b0); BCLR(targ, D[instr_b11_b9]);
	}
	break;

case 0x01d0:
case 0x01d1:
case 0x01d2:
case 0x01d3:
case 0x01d4:
case 0x01d5:
case 0x01d6:
case 0x01d7:
case 0x03d0:
case 0x03d1:
case 0x03d2:
case 0x03d3:
case 0x03d4:
case 0x03d5:
case 0x03d6:
case 0x03d7:
case 0x05d0:
case 0x05d1:
case 0x05d2:
case 0x05d3:
case 0x05d4:
case 0x05d5:
case 0x05d6:
case 0x05d7:
case 0x07d0:
case 0x07d1:
case 0x07d2:
case 0x07d3:
case 0x07d4:
case 0x07d5:
case 0x07d6:
case 0x07d7:
case 0x09d0:
case 0x09d1:
case 0x09d2:
case 0x09d3:
case 0x09d4:
case 0x09d5:
case 0x09d6:
case 0x09d7:
case 0x0bd0:
case 0x0bd1:
case 0x0bd2:
case 0x0bd3:
case 0x0bd4:
case 0x0bd5:
case 0x0bd6:
case 0x0bd7:
case 0x0dd0:
case 0x0dd1:
case 0x0dd2:
case 0x0dd3:
case 0x0dd4:
case 0x0dd5:
case 0x0dd6:
case 0x0dd7:
case 0x0fd0:
case 0x0fd1:
case 0x0fd2:
case 0x0fd3:
case 0x0fd4:
case 0x0fd5:
case 0x0fd6:
case 0x0fd7:
	{
	 HAM<uint8, ADDR_REG_INDIR> targ(this, instr_b2_b0); BSET(targ, D[instr_b11_b9]);
	}
	break;

case 0x0110:
case 0x0111:
case 0x0112:
case 0x0113:
case 0x0114:
case 0x0115:
case 0x0116:
case 0x0117:
case 0x0310:
case 0x0311:
case 0x0312:
case 0x0313:
case 0x0314:
case 0x0315:
case 0x0316:
case 0x0317:
case 0x0510:
case 0x0511:
case 0x0512:
case 0x0513:
case 0x0514:
case 0x0515:
case 0x0516:
case 0x0517:
case 0x0710:
case 0x0711:
case 0x0712:
case 0x0713:
case 0x0714:
case 0x0715:
case 0x0716:
case 0x0717:
case 0x0910:
case 0x0911:
case 0x0912:
case 0x0913:
case 0x0914:
case 0x0915:
case 0x0916:
case 0x0917:
case 0x0b10:
case 0x0b11:
case 0x0b12:
case 0x0b13:
case 0x0b14:
case 0x0b15:
case 0x0b16:
case 0x0b17:
case 0x0d10:
case 0x0d11:
case 0x0d12:
case 0x0d13:
case 0x0d14:
case 0x0d15:
case 0x0d16:
case 0x0d17:
case 0x0f10:
case 0x0f11:
case 0x0f12:
case 0x0f13:
case 0x0f14:
case 0x0f15:
case 0x0f16:
case 0x0f17:
	{
	 HAM<uint8, ADDR_REG_INDIR> targ(this, instr_b2_b0); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0x4228:
case 0x4229:
case 0x422a:
case 0x422b:
case 0x422c:
case 0x422d:
case 0x422e:
case 0x422f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4828:
case 0x4829:
case 0x482a:
case 0x482b:
case 0x482c:
case 0x482d:
case 0x482e:
case 0x482f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NBCD(dst);
	}
	break;

case 0x4428:
case 0x4429:
case 0x442a:
case 0x442b:
case 0x442c:
case 0x442d:
case 0x442e:
case 0x442f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4028:
case 0x4029:
case 0x402a:
case 0x402b:
case 0x402c:
case 0x402d:
case 0x402e:
case 0x402f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4628:
case 0x4629:
case 0x462a:
case 0x462b:
case 0x462c:
case 0x462d:
case 0x462e:
case 0x462f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x50e8:
case 0x50e9:
case 0x50ea:
case 0x50eb:
case 0x50ec:
case 0x50ed:
case 0x50ee:
case 0x50ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x00>(dst);
	}
	break;

case 0x51e8:
case 0x51e9:
case 0x51ea:
case 0x51eb:
case 0x51ec:
case 0x51ed:
case 0x51ee:
case 0x51ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x01>(dst);
	}
	break;

case 0x52e8:
case 0x52e9:
case 0x52ea:
case 0x52eb:
case 0x52ec:
case 0x52ed:
case 0x52ee:
case 0x52ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x02>(dst);
	}
	break;

case 0x53e8:
case 0x53e9:
case 0x53ea:
case 0x53eb:
case 0x53ec:
case 0x53ed:
case 0x53ee:
case 0x53ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x03>(dst);
	}
	break;

case 0x54e8:
case 0x54e9:
case 0x54ea:
case 0x54eb:
case 0x54ec:
case 0x54ed:
case 0x54ee:
case 0x54ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x04>(dst);
	}
	break;

case 0x55e8:
case 0x55e9:
case 0x55ea:
case 0x55eb:
case 0x55ec:
case 0x55ed:
case 0x55ee:
case 0x55ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x05>(dst);
	}
	break;

case 0x56e8:
case 0x56e9:
case 0x56ea:
case 0x56eb:
case 0x56ec:
case 0x56ed:
case 0x56ee:
case 0x56ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x06>(dst);
	}
	break;

case 0x57e8:
case 0x57e9:
case 0x57ea:
case 0x57eb:
case 0x57ec:
case 0x57ed:
case 0x57ee:
case 0x57ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x07>(dst);
	}
	break;

case 0x58e8:
case 0x58e9:
case 0x58ea:
case 0x58eb:
case 0x58ec:
case 0x58ed:
case 0x58ee:
case 0x58ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x08>(dst);
	}
	break;

case 0x59e8:
case 0x59e9:
case 0x59ea:
case 0x59eb:
case 0x59ec:
case 0x59ed:
case 0x59ee:
case 0x59ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x09>(dst);
	}
	break;

case 0x5ae8:
case 0x5ae9:
case 0x5aea:
case 0x5aeb:
case 0x5aec:
case 0x5aed:
case 0x5aee:
case 0x5aef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x0a>(dst);
	}
	break;

case 0x5be8:
case 0x5be9:
case 0x5bea:
case 0x5beb:
case 0x5bec:
case 0x5bed:
case 0x5bee:
case 0x5bef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x0b>(dst);
	}
	break;

case 0x5ce8:
case 0x5ce9:
case 0x5cea:
case 0x5ceb:
case 0x5cec:
case 0x5ced:
case 0x5cee:
case 0x5cef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x0c>(dst);
	}
	break;

case 0x5de8:
case 0x5de9:
case 0x5dea:
case 0x5deb:
case 0x5dec:
case 0x5ded:
case 0x5dee:
case 0x5def:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x0d>(dst);
	}
	break;

case 0x5ee8:
case 0x5ee9:
case 0x5eea:
case 0x5eeb:
case 0x5eec:
case 0x5eed:
case 0x5eee:
case 0x5eef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x0e>(dst);
	}
	break;

case 0x5fe8:
case 0x5fe9:
case 0x5fea:
case 0x5feb:
case 0x5fec:
case 0x5fed:
case 0x5fee:
case 0x5fef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); Scc<0x0f>(dst);
	}
	break;

case 0x4ae8:
case 0x4ae9:
case 0x4aea:
case 0x4aeb:
case 0x4aec:
case 0x4aed:
case 0x4aee:
case 0x4aef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); TAS(dst);
	}
	break;

case 0x4a28:
case 0x4a29:
case 0x4a2a:
case 0x4a2b:
case 0x4a2c:
case 0x4a2d:
case 0x4a2e:
case 0x4a2f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x13e8:
case 0x13e9:
case 0x13ea:
case 0x13eb:
case 0x13ec:
case 0x13ed:
case 0x13ee:
case 0x13ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11e8:
case 0x11e9:
case 0x11ea:
case 0x11eb:
case 0x11ec:
case 0x11ed:
case 0x11ee:
case 0x11ef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x10a8:
case 0x10a9:
case 0x10aa:
case 0x10ab:
case 0x10ac:
case 0x10ad:
case 0x10ae:
case 0x10af:
case 0x12a8:
case 0x12a9:
case 0x12aa:
case 0x12ab:
case 0x12ac:
case 0x12ad:
case 0x12ae:
case 0x12af:
case 0x14a8:
case 0x14a9:
case 0x14aa:
case 0x14ab:
case 0x14ac:
case 0x14ad:
case 0x14ae:
case 0x14af:
case 0x16a8:
case 0x16a9:
case 0x16aa:
case 0x16ab:
case 0x16ac:
case 0x16ad:
case 0x16ae:
case 0x16af:
case 0x18a8:
case 0x18a9:
case 0x18aa:
case 0x18ab:
case 0x18ac:
case 0x18ad:
case 0x18ae:
case 0x18af:
case 0x1aa8:
case 0x1aa9:
case 0x1aaa:
case 0x1aab:
case 0x1aac:
case 0x1aad:
case 0x1aae:
case 0x1aaf:
case 0x1ca8:
case 0x1ca9:
case 0x1caa:
case 0x1cab:
case 0x1cac:
case 0x1cad:
case 0x1cae:
case 0x1caf:
case 0x1ea8:
case 0x1ea9:
case 0x1eaa:
case 0x1eab:
case 0x1eac:
case 0x1ead:
case 0x1eae:
case 0x1eaf:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1168:
case 0x1169:
case 0x116a:
case 0x116b:
case 0x116c:
case 0x116d:
case 0x116e:
case 0x116f:
case 0x1368:
case 0x1369:
case 0x136a:
case 0x136b:
case 0x136c:
case 0x136d:
case 0x136e:
case 0x136f:
case 0x1568:
case 0x1569:
case 0x156a:
case 0x156b:
case 0x156c:
case 0x156d:
case 0x156e:
case 0x156f:
case 0x1768:
case 0x1769:
case 0x176a:
case 0x176b:
case 0x176c:
case 0x176d:
case 0x176e:
case 0x176f:
case 0x1968:
case 0x1969:
case 0x196a:
case 0x196b:
case 0x196c:
case 0x196d:
case 0x196e:
case 0x196f:
case 0x1b68:
case 0x1b69:
case 0x1b6a:
case 0x1b6b:
case 0x1b6c:
case 0x1b6d:
case 0x1b6e:
case 0x1b6f:
case 0x1d68:
case 0x1d69:
case 0x1d6a:
case 0x1d6b:
case 0x1d6c:
case 0x1d6d:
case 0x1d6e:
case 0x1d6f:
case 0x1f68:
case 0x1f69:
case 0x1f6a:
case 0x1f6b:
case 0x1f6c:
case 0x1f6d:
case 0x1f6e:
case 0x1f6f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x11a8:
case 0x11a9:
case 0x11aa:
case 0x11ab:
case 0x11ac:
case 0x11ad:
case 0x11ae:
case 0x11af:
case 0x13a8:
case 0x13a9:
case 0x13aa:
case 0x13ab:
case 0x13ac:
case 0x13ad:
case 0x13ae:
case 0x13af:
case 0x15a8:
case 0x15a9:
case 0x15aa:
case 0x15ab:
case 0x15ac:
case 0x15ad:
case 0x15ae:
case 0x15af:
case 0x17a8:
case 0x17a9:
case 0x17aa:
case 0x17ab:
case 0x17ac:
case 0x17ad:
case 0x17ae:
case 0x17af:
case 0x19a8:
case 0x19a9:
case 0x19aa:
case 0x19ab:
case 0x19ac:
case 0x19ad:
case 0x19ae:
case 0x19af:
case 0x1ba8:
case 0x1ba9:
case 0x1baa:
case 0x1bab:
case 0x1bac:
case 0x1bad:
case 0x1bae:
case 0x1baf:
case 0x1da8:
case 0x1da9:
case 0x1daa:
case 0x1dab:
case 0x1dac:
case 0x1dad:
case 0x1dae:
case 0x1daf:
case 0x1fa8:
case 0x1fa9:
case 0x1faa:
case 0x1fab:
case 0x1fac:
case 0x1fad:
case 0x1fae:
case 0x1faf:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x10e8:
case 0x10e9:
case 0x10ea:
case 0x10eb:
case 0x10ec:
case 0x10ed:
case 0x10ee:
case 0x10ef:
case 0x12e8:
case 0x12e9:
case 0x12ea:
case 0x12eb:
case 0x12ec:
case 0x12ed:
case 0x12ee:
case 0x12ef:
case 0x14e8:
case 0x14e9:
case 0x14ea:
case 0x14eb:
case 0x14ec:
case 0x14ed:
case 0x14ee:
case 0x14ef:
case 0x16e8:
case 0x16e9:
case 0x16ea:
case 0x16eb:
case 0x16ec:
case 0x16ed:
case 0x16ee:
case 0x16ef:
case 0x18e8:
case 0x18e9:
case 0x18ea:
case 0x18eb:
case 0x18ec:
case 0x18ed:
case 0x18ee:
case 0x18ef:
case 0x1ae8:
case 0x1ae9:
case 0x1aea:
case 0x1aeb:
case 0x1aec:
case 0x1aed:
case 0x1aee:
case 0x1aef:
case 0x1ce8:
case 0x1ce9:
case 0x1cea:
case 0x1ceb:
case 0x1cec:
case 0x1ced:
case 0x1cee:
case 0x1cef:
case 0x1ee8:
case 0x1ee9:
case 0x1eea:
case 0x1eeb:
case 0x1eec:
case 0x1eed:
case 0x1eee:
case 0x1eef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1128:
case 0x1129:
case 0x112a:
case 0x112b:
case 0x112c:
case 0x112d:
case 0x112e:
case 0x112f:
case 0x1328:
case 0x1329:
case 0x132a:
case 0x132b:
case 0x132c:
case 0x132d:
case 0x132e:
case 0x132f:
case 0x1528:
case 0x1529:
case 0x152a:
case 0x152b:
case 0x152c:
case 0x152d:
case 0x152e:
case 0x152f:
case 0x1728:
case 0x1729:
case 0x172a:
case 0x172b:
case 0x172c:
case 0x172d:
case 0x172e:
case 0x172f:
case 0x1928:
case 0x1929:
case 0x192a:
case 0x192b:
case 0x192c:
case 0x192d:
case 0x192e:
case 0x192f:
case 0x1b28:
case 0x1b29:
case 0x1b2a:
case 0x1b2b:
case 0x1b2c:
case 0x1b2d:
case 0x1b2e:
case 0x1b2f:
case 0x1d28:
case 0x1d29:
case 0x1d2a:
case 0x1d2b:
case 0x1d2c:
case 0x1d2d:
case 0x1d2e:
case 0x1d2f:
case 0x1f28:
case 0x1f29:
case 0x1f2a:
case 0x1f2b:
case 0x1f2c:
case 0x1f2d:
case 0x1f2e:
case 0x1f2f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd028:
case 0xd029:
case 0xd02a:
case 0xd02b:
case 0xd02c:
case 0xd02d:
case 0xd02e:
case 0xd02f:
case 0xd228:
case 0xd229:
case 0xd22a:
case 0xd22b:
case 0xd22c:
case 0xd22d:
case 0xd22e:
case 0xd22f:
case 0xd428:
case 0xd429:
case 0xd42a:
case 0xd42b:
case 0xd42c:
case 0xd42d:
case 0xd42e:
case 0xd42f:
case 0xd628:
case 0xd629:
case 0xd62a:
case 0xd62b:
case 0xd62c:
case 0xd62d:
case 0xd62e:
case 0xd62f:
case 0xd828:
case 0xd829:
case 0xd82a:
case 0xd82b:
case 0xd82c:
case 0xd82d:
case 0xd82e:
case 0xd82f:
case 0xda28:
case 0xda29:
case 0xda2a:
case 0xda2b:
case 0xda2c:
case 0xda2d:
case 0xda2e:
case 0xda2f:
case 0xdc28:
case 0xdc29:
case 0xdc2a:
case 0xdc2b:
case 0xdc2c:
case 0xdc2d:
case 0xdc2e:
case 0xdc2f:
case 0xde28:
case 0xde29:
case 0xde2a:
case 0xde2b:
case 0xde2c:
case 0xde2d:
case 0xde2e:
case 0xde2f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc028:
case 0xc029:
case 0xc02a:
case 0xc02b:
case 0xc02c:
case 0xc02d:
case 0xc02e:
case 0xc02f:
case 0xc228:
case 0xc229:
case 0xc22a:
case 0xc22b:
case 0xc22c:
case 0xc22d:
case 0xc22e:
case 0xc22f:
case 0xc428:
case 0xc429:
case 0xc42a:
case 0xc42b:
case 0xc42c:
case 0xc42d:
case 0xc42e:
case 0xc42f:
case 0xc628:
case 0xc629:
case 0xc62a:
case 0xc62b:
case 0xc62c:
case 0xc62d:
case 0xc62e:
case 0xc62f:
case 0xc828:
case 0xc829:
case 0xc82a:
case 0xc82b:
case 0xc82c:
case 0xc82d:
case 0xc82e:
case 0xc82f:
case 0xca28:
case 0xca29:
case 0xca2a:
case 0xca2b:
case 0xca2c:
case 0xca2d:
case 0xca2e:
case 0xca2f:
case 0xcc28:
case 0xcc29:
case 0xcc2a:
case 0xcc2b:
case 0xcc2c:
case 0xcc2d:
case 0xcc2e:
case 0xcc2f:
case 0xce28:
case 0xce29:
case 0xce2a:
case 0xce2b:
case 0xce2c:
case 0xce2d:
case 0xce2e:
case 0xce2f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb028:
case 0xb029:
case 0xb02a:
case 0xb02b:
case 0xb02c:
case 0xb02d:
case 0xb02e:
case 0xb02f:
case 0xb228:
case 0xb229:
case 0xb22a:
case 0xb22b:
case 0xb22c:
case 0xb22d:
case 0xb22e:
case 0xb22f:
case 0xb428:
case 0xb429:
case 0xb42a:
case 0xb42b:
case 0xb42c:
case 0xb42d:
case 0xb42e:
case 0xb42f:
case 0xb628:
case 0xb629:
case 0xb62a:
case 0xb62b:
case 0xb62c:
case 0xb62d:
case 0xb62e:
case 0xb62f:
case 0xb828:
case 0xb829:
case 0xb82a:
case 0xb82b:
case 0xb82c:
case 0xb82d:
case 0xb82e:
case 0xb82f:
case 0xba28:
case 0xba29:
case 0xba2a:
case 0xba2b:
case 0xba2c:
case 0xba2d:
case 0xba2e:
case 0xba2f:
case 0xbc28:
case 0xbc29:
case 0xbc2a:
case 0xbc2b:
case 0xbc2c:
case 0xbc2d:
case 0xbc2e:
case 0xbc2f:
case 0xbe28:
case 0xbe29:
case 0xbe2a:
case 0xbe2b:
case 0xbe2c:
case 0xbe2d:
case 0xbe2e:
case 0xbe2f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x1028:
case 0x1029:
case 0x102a:
case 0x102b:
case 0x102c:
case 0x102d:
case 0x102e:
case 0x102f:
case 0x1228:
case 0x1229:
case 0x122a:
case 0x122b:
case 0x122c:
case 0x122d:
case 0x122e:
case 0x122f:
case 0x1428:
case 0x1429:
case 0x142a:
case 0x142b:
case 0x142c:
case 0x142d:
case 0x142e:
case 0x142f:
case 0x1628:
case 0x1629:
case 0x162a:
case 0x162b:
case 0x162c:
case 0x162d:
case 0x162e:
case 0x162f:
case 0x1828:
case 0x1829:
case 0x182a:
case 0x182b:
case 0x182c:
case 0x182d:
case 0x182e:
case 0x182f:
case 0x1a28:
case 0x1a29:
case 0x1a2a:
case 0x1a2b:
case 0x1a2c:
case 0x1a2d:
case 0x1a2e:
case 0x1a2f:
case 0x1c28:
case 0x1c29:
case 0x1c2a:
case 0x1c2b:
case 0x1c2c:
case 0x1c2d:
case 0x1c2e:
case 0x1c2f:
case 0x1e28:
case 0x1e29:
case 0x1e2a:
case 0x1e2b:
case 0x1e2c:
case 0x1e2d:
case 0x1e2e:
case 0x1e2f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8028:
case 0x8029:
case 0x802a:
case 0x802b:
case 0x802c:
case 0x802d:
case 0x802e:
case 0x802f:
case 0x8228:
case 0x8229:
case 0x822a:
case 0x822b:
case 0x822c:
case 0x822d:
case 0x822e:
case 0x822f:
case 0x8428:
case 0x8429:
case 0x842a:
case 0x842b:
case 0x842c:
case 0x842d:
case 0x842e:
case 0x842f:
case 0x8628:
case 0x8629:
case 0x862a:
case 0x862b:
case 0x862c:
case 0x862d:
case 0x862e:
case 0x862f:
case 0x8828:
case 0x8829:
case 0x882a:
case 0x882b:
case 0x882c:
case 0x882d:
case 0x882e:
case 0x882f:
case 0x8a28:
case 0x8a29:
case 0x8a2a:
case 0x8a2b:
case 0x8a2c:
case 0x8a2d:
case 0x8a2e:
case 0x8a2f:
case 0x8c28:
case 0x8c29:
case 0x8c2a:
case 0x8c2b:
case 0x8c2c:
case 0x8c2d:
case 0x8c2e:
case 0x8c2f:
case 0x8e28:
case 0x8e29:
case 0x8e2a:
case 0x8e2b:
case 0x8e2c:
case 0x8e2d:
case 0x8e2e:
case 0x8e2f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9028:
case 0x9029:
case 0x902a:
case 0x902b:
case 0x902c:
case 0x902d:
case 0x902e:
case 0x902f:
case 0x9228:
case 0x9229:
case 0x922a:
case 0x922b:
case 0x922c:
case 0x922d:
case 0x922e:
case 0x922f:
case 0x9428:
case 0x9429:
case 0x942a:
case 0x942b:
case 0x942c:
case 0x942d:
case 0x942e:
case 0x942f:
case 0x9628:
case 0x9629:
case 0x962a:
case 0x962b:
case 0x962c:
case 0x962d:
case 0x962e:
case 0x962f:
case 0x9828:
case 0x9829:
case 0x982a:
case 0x982b:
case 0x982c:
case 0x982d:
case 0x982e:
case 0x982f:
case 0x9a28:
case 0x9a29:
case 0x9a2a:
case 0x9a2b:
case 0x9a2c:
case 0x9a2d:
case 0x9a2e:
case 0x9a2f:
case 0x9c28:
case 0x9c29:
case 0x9c2a:
case 0x9c2b:
case 0x9c2c:
case 0x9c2d:
case 0x9c2e:
case 0x9c2f:
case 0x9e28:
case 0x9e29:
case 0x9e2a:
case 0x9e2b:
case 0x9e2c:
case 0x9e2d:
case 0x9e2e:
case 0x9e2f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0168:
case 0x0169:
case 0x016a:
case 0x016b:
case 0x016c:
case 0x016d:
case 0x016e:
case 0x016f:
case 0x0368:
case 0x0369:
case 0x036a:
case 0x036b:
case 0x036c:
case 0x036d:
case 0x036e:
case 0x036f:
case 0x0568:
case 0x0569:
case 0x056a:
case 0x056b:
case 0x056c:
case 0x056d:
case 0x056e:
case 0x056f:
case 0x0768:
case 0x0769:
case 0x076a:
case 0x076b:
case 0x076c:
case 0x076d:
case 0x076e:
case 0x076f:
case 0x0968:
case 0x0969:
case 0x096a:
case 0x096b:
case 0x096c:
case 0x096d:
case 0x096e:
case 0x096f:
case 0x0b68:
case 0x0b69:
case 0x0b6a:
case 0x0b6b:
case 0x0b6c:
case 0x0b6d:
case 0x0b6e:
case 0x0b6f:
case 0x0d68:
case 0x0d69:
case 0x0d6a:
case 0x0d6b:
case 0x0d6c:
case 0x0d6d:
case 0x0d6e:
case 0x0d6f:
case 0x0f68:
case 0x0f69:
case 0x0f6a:
case 0x0f6b:
case 0x0f6c:
case 0x0f6d:
case 0x0f6e:
case 0x0f6f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); BCHG(targ, D[instr_b11_b9]);
	}
	break;

case 0x01a8:
case 0x01a9:
case 0x01aa:
case 0x01ab:
case 0x01ac:
case 0x01ad:
case 0x01ae:
case 0x01af:
case 0x03a8:
case 0x03a9:
case 0x03aa:
case 0x03ab:
case 0x03ac:
case 0x03ad:
case 0x03ae:
case 0x03af:
case 0x05a8:
case 0x05a9:
case 0x05aa:
case 0x05ab:
case 0x05ac:
case 0x05ad:
case 0x05ae:
case 0x05af:
case 0x07a8:
case 0x07a9:
case 0x07aa:
case 0x07ab:
case 0x07ac:
case 0x07ad:
case 0x07ae:
case 0x07af:
case 0x09a8:
case 0x09a9:
case 0x09aa:
case 0x09ab:
case 0x09ac:
case 0x09ad:
case 0x09ae:
case 0x09af:
case 0x0ba8:
case 0x0ba9:
case 0x0baa:
case 0x0bab:
case 0x0bac:
case 0x0bad:
case 0x0bae:
case 0x0baf:
case 0x0da8:
case 0x0da9:
case 0x0daa:
case 0x0dab:
case 0x0dac:
case 0x0dad:
case 0x0dae:
case 0x0daf:
case 0x0fa8:
case 0x0fa9:
case 0x0faa:
case 0x0fab:
case 0x0fac:
case 0x0fad:
case 0x0fae:
case 0x0faf:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); BCLR(targ, D[instr_b11_b9]);
	}
	break;

case 0x01e8:
case 0x01e9:
case 0x01ea:
case 0x01eb:
case 0x01ec:
case 0x01ed:
case 0x01ee:
case 0x01ef:
case 0x03e8:
case 0x03e9:
case 0x03ea:
case 0x03eb:
case 0x03ec:
case 0x03ed:
case 0x03ee:
case 0x03ef:
case 0x05e8:
case 0x05e9:
case 0x05ea:
case 0x05eb:
case 0x05ec:
case 0x05ed:
case 0x05ee:
case 0x05ef:
case 0x07e8:
case 0x07e9:
case 0x07ea:
case 0x07eb:
case 0x07ec:
case 0x07ed:
case 0x07ee:
case 0x07ef:
case 0x09e8:
case 0x09e9:
case 0x09ea:
case 0x09eb:
case 0x09ec:
case 0x09ed:
case 0x09ee:
case 0x09ef:
case 0x0be8:
case 0x0be9:
case 0x0bea:
case 0x0beb:
case 0x0bec:
case 0x0bed:
case 0x0bee:
case 0x0bef:
case 0x0de8:
case 0x0de9:
case 0x0dea:
case 0x0deb:
case 0x0dec:
case 0x0ded:
case 0x0dee:
case 0x0def:
case 0x0fe8:
case 0x0fe9:
case 0x0fea:
case 0x0feb:
case 0x0fec:
case 0x0fed:
case 0x0fee:
case 0x0fef:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); BSET(targ, D[instr_b11_b9]);
	}
	break;

case 0x0128:
case 0x0129:
case 0x012a:
case 0x012b:
case 0x012c:
case 0x012d:
case 0x012e:
case 0x012f:
case 0x0328:
case 0x0329:
case 0x032a:
case 0x032b:
case 0x032c:
case 0x032d:
case 0x032e:
case 0x032f:
case 0x0528:
case 0x0529:
case 0x052a:
case 0x052b:
case 0x052c:
case 0x052d:
case 0x052e:
case 0x052f:
case 0x0728:
case 0x0729:
case 0x072a:
case 0x072b:
case 0x072c:
case 0x072d:
case 0x072e:
case 0x072f:
case 0x0928:
case 0x0929:
case 0x092a:
case 0x092b:
case 0x092c:
case 0x092d:
case 0x092e:
case 0x092f:
case 0x0b28:
case 0x0b29:
case 0x0b2a:
case 0x0b2b:
case 0x0b2c:
case 0x0b2d:
case 0x0b2e:
case 0x0b2f:
case 0x0d28:
case 0x0d29:
case 0x0d2a:
case 0x0d2b:
case 0x0d2c:
case 0x0d2d:
case 0x0d2e:
case 0x0d2f:
case 0x0f28:
case 0x0f29:
case 0x0f2a:
case 0x0f2b:
case 0x0f2c:
case 0x0f2d:
case 0x0f2e:
case 0x0f2f:
	{
	 HAM<uint8, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0x4230:
case 0x4231:
case 0x4232:
case 0x4233:
case 0x4234:
case 0x4235:
case 0x4236:
case 0x4237:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4830:
case 0x4831:
case 0x4832:
case 0x4833:
case 0x4834:
case 0x4835:
case 0x4836:
case 0x4837:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NBCD(dst);
	}
	break;

case 0x4430:
case 0x4431:
case 0x4432:
case 0x4433:
case 0x4434:
case 0x4435:
case 0x4436:
case 0x4437:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4030:
case 0x4031:
case 0x4032:
case 0x4033:
case 0x4034:
case 0x4035:
case 0x4036:
case 0x4037:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4630:
case 0x4631:
case 0x4632:
case 0x4633:
case 0x4634:
case 0x4635:
case 0x4636:
case 0x4637:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x50f0:
case 0x50f1:
case 0x50f2:
case 0x50f3:
case 0x50f4:
case 0x50f5:
case 0x50f6:
case 0x50f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x00>(dst);
	}
	break;

case 0x51f0:
case 0x51f1:
case 0x51f2:
case 0x51f3:
case 0x51f4:
case 0x51f5:
case 0x51f6:
case 0x51f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x01>(dst);
	}
	break;

case 0x52f0:
case 0x52f1:
case 0x52f2:
case 0x52f3:
case 0x52f4:
case 0x52f5:
case 0x52f6:
case 0x52f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x02>(dst);
	}
	break;

case 0x53f0:
case 0x53f1:
case 0x53f2:
case 0x53f3:
case 0x53f4:
case 0x53f5:
case 0x53f6:
case 0x53f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x03>(dst);
	}
	break;

case 0x54f0:
case 0x54f1:
case 0x54f2:
case 0x54f3:
case 0x54f4:
case 0x54f5:
case 0x54f6:
case 0x54f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x04>(dst);
	}
	break;

case 0x55f0:
case 0x55f1:
case 0x55f2:
case 0x55f3:
case 0x55f4:
case 0x55f5:
case 0x55f6:
case 0x55f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x05>(dst);
	}
	break;

case 0x56f0:
case 0x56f1:
case 0x56f2:
case 0x56f3:
case 0x56f4:
case 0x56f5:
case 0x56f6:
case 0x56f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x06>(dst);
	}
	break;

case 0x57f0:
case 0x57f1:
case 0x57f2:
case 0x57f3:
case 0x57f4:
case 0x57f5:
case 0x57f6:
case 0x57f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x07>(dst);
	}
	break;

case 0x58f0:
case 0x58f1:
case 0x58f2:
case 0x58f3:
case 0x58f4:
case 0x58f5:
case 0x58f6:
case 0x58f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x08>(dst);
	}
	break;

case 0x59f0:
case 0x59f1:
case 0x59f2:
case 0x59f3:
case 0x59f4:
case 0x59f5:
case 0x59f6:
case 0x59f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x09>(dst);
	}
	break;

case 0x5af0:
case 0x5af1:
case 0x5af2:
case 0x5af3:
case 0x5af4:
case 0x5af5:
case 0x5af6:
case 0x5af7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x0a>(dst);
	}
	break;

case 0x5bf0:
case 0x5bf1:
case 0x5bf2:
case 0x5bf3:
case 0x5bf4:
case 0x5bf5:
case 0x5bf6:
case 0x5bf7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x0b>(dst);
	}
	break;

case 0x5cf0:
case 0x5cf1:
case 0x5cf2:
case 0x5cf3:
case 0x5cf4:
case 0x5cf5:
case 0x5cf6:
case 0x5cf7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x0c>(dst);
	}
	break;

case 0x5df0:
case 0x5df1:
case 0x5df2:
case 0x5df3:
case 0x5df4:
case 0x5df5:
case 0x5df6:
case 0x5df7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x0d>(dst);
	}
	break;

case 0x5ef0:
case 0x5ef1:
case 0x5ef2:
case 0x5ef3:
case 0x5ef4:
case 0x5ef5:
case 0x5ef6:
case 0x5ef7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x0e>(dst);
	}
	break;

case 0x5ff0:
case 0x5ff1:
case 0x5ff2:
case 0x5ff3:
case 0x5ff4:
case 0x5ff5:
case 0x5ff6:
case 0x5ff7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); Scc<0x0f>(dst);
	}
	break;

case 0x4af0:
case 0x4af1:
case 0x4af2:
case 0x4af3:
case 0x4af4:
case 0x4af5:
case 0x4af6:
case 0x4af7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); TAS(dst);
	}
	break;

case 0x4a30:
case 0x4a31:
case 0x4a32:
case 0x4a33:
case 0x4a34:
case 0x4a35:
case 0x4a36:
case 0x4a37:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x13f0:
case 0x13f1:
case 0x13f2:
case 0x13f3:
case 0x13f4:
case 0x13f5:
case 0x13f6:
case 0x13f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11f0:
case 0x11f1:
case 0x11f2:
case 0x11f3:
case 0x11f4:
case 0x11f5:
case 0x11f6:
case 0x11f7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x10b0:
case 0x10b1:
case 0x10b2:
case 0x10b3:
case 0x10b4:
case 0x10b5:
case 0x10b6:
case 0x10b7:
case 0x12b0:
case 0x12b1:
case 0x12b2:
case 0x12b3:
case 0x12b4:
case 0x12b5:
case 0x12b6:
case 0x12b7:
case 0x14b0:
case 0x14b1:
case 0x14b2:
case 0x14b3:
case 0x14b4:
case 0x14b5:
case 0x14b6:
case 0x14b7:
case 0x16b0:
case 0x16b1:
case 0x16b2:
case 0x16b3:
case 0x16b4:
case 0x16b5:
case 0x16b6:
case 0x16b7:
case 0x18b0:
case 0x18b1:
case 0x18b2:
case 0x18b3:
case 0x18b4:
case 0x18b5:
case 0x18b6:
case 0x18b7:
case 0x1ab0:
case 0x1ab1:
case 0x1ab2:
case 0x1ab3:
case 0x1ab4:
case 0x1ab5:
case 0x1ab6:
case 0x1ab7:
case 0x1cb0:
case 0x1cb1:
case 0x1cb2:
case 0x1cb3:
case 0x1cb4:
case 0x1cb5:
case 0x1cb6:
case 0x1cb7:
case 0x1eb0:
case 0x1eb1:
case 0x1eb2:
case 0x1eb3:
case 0x1eb4:
case 0x1eb5:
case 0x1eb6:
case 0x1eb7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1170:
case 0x1171:
case 0x1172:
case 0x1173:
case 0x1174:
case 0x1175:
case 0x1176:
case 0x1177:
case 0x1370:
case 0x1371:
case 0x1372:
case 0x1373:
case 0x1374:
case 0x1375:
case 0x1376:
case 0x1377:
case 0x1570:
case 0x1571:
case 0x1572:
case 0x1573:
case 0x1574:
case 0x1575:
case 0x1576:
case 0x1577:
case 0x1770:
case 0x1771:
case 0x1772:
case 0x1773:
case 0x1774:
case 0x1775:
case 0x1776:
case 0x1777:
case 0x1970:
case 0x1971:
case 0x1972:
case 0x1973:
case 0x1974:
case 0x1975:
case 0x1976:
case 0x1977:
case 0x1b70:
case 0x1b71:
case 0x1b72:
case 0x1b73:
case 0x1b74:
case 0x1b75:
case 0x1b76:
case 0x1b77:
case 0x1d70:
case 0x1d71:
case 0x1d72:
case 0x1d73:
case 0x1d74:
case 0x1d75:
case 0x1d76:
case 0x1d77:
case 0x1f70:
case 0x1f71:
case 0x1f72:
case 0x1f73:
case 0x1f74:
case 0x1f75:
case 0x1f76:
case 0x1f77:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x11b0:
case 0x11b1:
case 0x11b2:
case 0x11b3:
case 0x11b4:
case 0x11b5:
case 0x11b6:
case 0x11b7:
case 0x13b0:
case 0x13b1:
case 0x13b2:
case 0x13b3:
case 0x13b4:
case 0x13b5:
case 0x13b6:
case 0x13b7:
case 0x15b0:
case 0x15b1:
case 0x15b2:
case 0x15b3:
case 0x15b4:
case 0x15b5:
case 0x15b6:
case 0x15b7:
case 0x17b0:
case 0x17b1:
case 0x17b2:
case 0x17b3:
case 0x17b4:
case 0x17b5:
case 0x17b6:
case 0x17b7:
case 0x19b0:
case 0x19b1:
case 0x19b2:
case 0x19b3:
case 0x19b4:
case 0x19b5:
case 0x19b6:
case 0x19b7:
case 0x1bb0:
case 0x1bb1:
case 0x1bb2:
case 0x1bb3:
case 0x1bb4:
case 0x1bb5:
case 0x1bb6:
case 0x1bb7:
case 0x1db0:
case 0x1db1:
case 0x1db2:
case 0x1db3:
case 0x1db4:
case 0x1db5:
case 0x1db6:
case 0x1db7:
case 0x1fb0:
case 0x1fb1:
case 0x1fb2:
case 0x1fb3:
case 0x1fb4:
case 0x1fb5:
case 0x1fb6:
case 0x1fb7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x10f0:
case 0x10f1:
case 0x10f2:
case 0x10f3:
case 0x10f4:
case 0x10f5:
case 0x10f6:
case 0x10f7:
case 0x12f0:
case 0x12f1:
case 0x12f2:
case 0x12f3:
case 0x12f4:
case 0x12f5:
case 0x12f6:
case 0x12f7:
case 0x14f0:
case 0x14f1:
case 0x14f2:
case 0x14f3:
case 0x14f4:
case 0x14f5:
case 0x14f6:
case 0x14f7:
case 0x16f0:
case 0x16f1:
case 0x16f2:
case 0x16f3:
case 0x16f4:
case 0x16f5:
case 0x16f6:
case 0x16f7:
case 0x18f0:
case 0x18f1:
case 0x18f2:
case 0x18f3:
case 0x18f4:
case 0x18f5:
case 0x18f6:
case 0x18f7:
case 0x1af0:
case 0x1af1:
case 0x1af2:
case 0x1af3:
case 0x1af4:
case 0x1af5:
case 0x1af6:
case 0x1af7:
case 0x1cf0:
case 0x1cf1:
case 0x1cf2:
case 0x1cf3:
case 0x1cf4:
case 0x1cf5:
case 0x1cf6:
case 0x1cf7:
case 0x1ef0:
case 0x1ef1:
case 0x1ef2:
case 0x1ef3:
case 0x1ef4:
case 0x1ef5:
case 0x1ef6:
case 0x1ef7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1130:
case 0x1131:
case 0x1132:
case 0x1133:
case 0x1134:
case 0x1135:
case 0x1136:
case 0x1137:
case 0x1330:
case 0x1331:
case 0x1332:
case 0x1333:
case 0x1334:
case 0x1335:
case 0x1336:
case 0x1337:
case 0x1530:
case 0x1531:
case 0x1532:
case 0x1533:
case 0x1534:
case 0x1535:
case 0x1536:
case 0x1537:
case 0x1730:
case 0x1731:
case 0x1732:
case 0x1733:
case 0x1734:
case 0x1735:
case 0x1736:
case 0x1737:
case 0x1930:
case 0x1931:
case 0x1932:
case 0x1933:
case 0x1934:
case 0x1935:
case 0x1936:
case 0x1937:
case 0x1b30:
case 0x1b31:
case 0x1b32:
case 0x1b33:
case 0x1b34:
case 0x1b35:
case 0x1b36:
case 0x1b37:
case 0x1d30:
case 0x1d31:
case 0x1d32:
case 0x1d33:
case 0x1d34:
case 0x1d35:
case 0x1d36:
case 0x1d37:
case 0x1f30:
case 0x1f31:
case 0x1f32:
case 0x1f33:
case 0x1f34:
case 0x1f35:
case 0x1f36:
case 0x1f37:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd030:
case 0xd031:
case 0xd032:
case 0xd033:
case 0xd034:
case 0xd035:
case 0xd036:
case 0xd037:
case 0xd230:
case 0xd231:
case 0xd232:
case 0xd233:
case 0xd234:
case 0xd235:
case 0xd236:
case 0xd237:
case 0xd430:
case 0xd431:
case 0xd432:
case 0xd433:
case 0xd434:
case 0xd435:
case 0xd436:
case 0xd437:
case 0xd630:
case 0xd631:
case 0xd632:
case 0xd633:
case 0xd634:
case 0xd635:
case 0xd636:
case 0xd637:
case 0xd830:
case 0xd831:
case 0xd832:
case 0xd833:
case 0xd834:
case 0xd835:
case 0xd836:
case 0xd837:
case 0xda30:
case 0xda31:
case 0xda32:
case 0xda33:
case 0xda34:
case 0xda35:
case 0xda36:
case 0xda37:
case 0xdc30:
case 0xdc31:
case 0xdc32:
case 0xdc33:
case 0xdc34:
case 0xdc35:
case 0xdc36:
case 0xdc37:
case 0xde30:
case 0xde31:
case 0xde32:
case 0xde33:
case 0xde34:
case 0xde35:
case 0xde36:
case 0xde37:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc030:
case 0xc031:
case 0xc032:
case 0xc033:
case 0xc034:
case 0xc035:
case 0xc036:
case 0xc037:
case 0xc230:
case 0xc231:
case 0xc232:
case 0xc233:
case 0xc234:
case 0xc235:
case 0xc236:
case 0xc237:
case 0xc430:
case 0xc431:
case 0xc432:
case 0xc433:
case 0xc434:
case 0xc435:
case 0xc436:
case 0xc437:
case 0xc630:
case 0xc631:
case 0xc632:
case 0xc633:
case 0xc634:
case 0xc635:
case 0xc636:
case 0xc637:
case 0xc830:
case 0xc831:
case 0xc832:
case 0xc833:
case 0xc834:
case 0xc835:
case 0xc836:
case 0xc837:
case 0xca30:
case 0xca31:
case 0xca32:
case 0xca33:
case 0xca34:
case 0xca35:
case 0xca36:
case 0xca37:
case 0xcc30:
case 0xcc31:
case 0xcc32:
case 0xcc33:
case 0xcc34:
case 0xcc35:
case 0xcc36:
case 0xcc37:
case 0xce30:
case 0xce31:
case 0xce32:
case 0xce33:
case 0xce34:
case 0xce35:
case 0xce36:
case 0xce37:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb030:
case 0xb031:
case 0xb032:
case 0xb033:
case 0xb034:
case 0xb035:
case 0xb036:
case 0xb037:
case 0xb230:
case 0xb231:
case 0xb232:
case 0xb233:
case 0xb234:
case 0xb235:
case 0xb236:
case 0xb237:
case 0xb430:
case 0xb431:
case 0xb432:
case 0xb433:
case 0xb434:
case 0xb435:
case 0xb436:
case 0xb437:
case 0xb630:
case 0xb631:
case 0xb632:
case 0xb633:
case 0xb634:
case 0xb635:
case 0xb636:
case 0xb637:
case 0xb830:
case 0xb831:
case 0xb832:
case 0xb833:
case 0xb834:
case 0xb835:
case 0xb836:
case 0xb837:
case 0xba30:
case 0xba31:
case 0xba32:
case 0xba33:
case 0xba34:
case 0xba35:
case 0xba36:
case 0xba37:
case 0xbc30:
case 0xbc31:
case 0xbc32:
case 0xbc33:
case 0xbc34:
case 0xbc35:
case 0xbc36:
case 0xbc37:
case 0xbe30:
case 0xbe31:
case 0xbe32:
case 0xbe33:
case 0xbe34:
case 0xbe35:
case 0xbe36:
case 0xbe37:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x1030:
case 0x1031:
case 0x1032:
case 0x1033:
case 0x1034:
case 0x1035:
case 0x1036:
case 0x1037:
case 0x1230:
case 0x1231:
case 0x1232:
case 0x1233:
case 0x1234:
case 0x1235:
case 0x1236:
case 0x1237:
case 0x1430:
case 0x1431:
case 0x1432:
case 0x1433:
case 0x1434:
case 0x1435:
case 0x1436:
case 0x1437:
case 0x1630:
case 0x1631:
case 0x1632:
case 0x1633:
case 0x1634:
case 0x1635:
case 0x1636:
case 0x1637:
case 0x1830:
case 0x1831:
case 0x1832:
case 0x1833:
case 0x1834:
case 0x1835:
case 0x1836:
case 0x1837:
case 0x1a30:
case 0x1a31:
case 0x1a32:
case 0x1a33:
case 0x1a34:
case 0x1a35:
case 0x1a36:
case 0x1a37:
case 0x1c30:
case 0x1c31:
case 0x1c32:
case 0x1c33:
case 0x1c34:
case 0x1c35:
case 0x1c36:
case 0x1c37:
case 0x1e30:
case 0x1e31:
case 0x1e32:
case 0x1e33:
case 0x1e34:
case 0x1e35:
case 0x1e36:
case 0x1e37:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8030:
case 0x8031:
case 0x8032:
case 0x8033:
case 0x8034:
case 0x8035:
case 0x8036:
case 0x8037:
case 0x8230:
case 0x8231:
case 0x8232:
case 0x8233:
case 0x8234:
case 0x8235:
case 0x8236:
case 0x8237:
case 0x8430:
case 0x8431:
case 0x8432:
case 0x8433:
case 0x8434:
case 0x8435:
case 0x8436:
case 0x8437:
case 0x8630:
case 0x8631:
case 0x8632:
case 0x8633:
case 0x8634:
case 0x8635:
case 0x8636:
case 0x8637:
case 0x8830:
case 0x8831:
case 0x8832:
case 0x8833:
case 0x8834:
case 0x8835:
case 0x8836:
case 0x8837:
case 0x8a30:
case 0x8a31:
case 0x8a32:
case 0x8a33:
case 0x8a34:
case 0x8a35:
case 0x8a36:
case 0x8a37:
case 0x8c30:
case 0x8c31:
case 0x8c32:
case 0x8c33:
case 0x8c34:
case 0x8c35:
case 0x8c36:
case 0x8c37:
case 0x8e30:
case 0x8e31:
case 0x8e32:
case 0x8e33:
case 0x8e34:
case 0x8e35:
case 0x8e36:
case 0x8e37:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9030:
case 0x9031:
case 0x9032:
case 0x9033:
case 0x9034:
case 0x9035:
case 0x9036:
case 0x9037:
case 0x9230:
case 0x9231:
case 0x9232:
case 0x9233:
case 0x9234:
case 0x9235:
case 0x9236:
case 0x9237:
case 0x9430:
case 0x9431:
case 0x9432:
case 0x9433:
case 0x9434:
case 0x9435:
case 0x9436:
case 0x9437:
case 0x9630:
case 0x9631:
case 0x9632:
case 0x9633:
case 0x9634:
case 0x9635:
case 0x9636:
case 0x9637:
case 0x9830:
case 0x9831:
case 0x9832:
case 0x9833:
case 0x9834:
case 0x9835:
case 0x9836:
case 0x9837:
case 0x9a30:
case 0x9a31:
case 0x9a32:
case 0x9a33:
case 0x9a34:
case 0x9a35:
case 0x9a36:
case 0x9a37:
case 0x9c30:
case 0x9c31:
case 0x9c32:
case 0x9c33:
case 0x9c34:
case 0x9c35:
case 0x9c36:
case 0x9c37:
case 0x9e30:
case 0x9e31:
case 0x9e32:
case 0x9e33:
case 0x9e34:
case 0x9e35:
case 0x9e36:
case 0x9e37:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0170:
case 0x0171:
case 0x0172:
case 0x0173:
case 0x0174:
case 0x0175:
case 0x0176:
case 0x0177:
case 0x0370:
case 0x0371:
case 0x0372:
case 0x0373:
case 0x0374:
case 0x0375:
case 0x0376:
case 0x0377:
case 0x0570:
case 0x0571:
case 0x0572:
case 0x0573:
case 0x0574:
case 0x0575:
case 0x0576:
case 0x0577:
case 0x0770:
case 0x0771:
case 0x0772:
case 0x0773:
case 0x0774:
case 0x0775:
case 0x0776:
case 0x0777:
case 0x0970:
case 0x0971:
case 0x0972:
case 0x0973:
case 0x0974:
case 0x0975:
case 0x0976:
case 0x0977:
case 0x0b70:
case 0x0b71:
case 0x0b72:
case 0x0b73:
case 0x0b74:
case 0x0b75:
case 0x0b76:
case 0x0b77:
case 0x0d70:
case 0x0d71:
case 0x0d72:
case 0x0d73:
case 0x0d74:
case 0x0d75:
case 0x0d76:
case 0x0d77:
case 0x0f70:
case 0x0f71:
case 0x0f72:
case 0x0f73:
case 0x0f74:
case 0x0f75:
case 0x0f76:
case 0x0f77:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); BCHG(targ, D[instr_b11_b9]);
	}
	break;

case 0x01b0:
case 0x01b1:
case 0x01b2:
case 0x01b3:
case 0x01b4:
case 0x01b5:
case 0x01b6:
case 0x01b7:
case 0x03b0:
case 0x03b1:
case 0x03b2:
case 0x03b3:
case 0x03b4:
case 0x03b5:
case 0x03b6:
case 0x03b7:
case 0x05b0:
case 0x05b1:
case 0x05b2:
case 0x05b3:
case 0x05b4:
case 0x05b5:
case 0x05b6:
case 0x05b7:
case 0x07b0:
case 0x07b1:
case 0x07b2:
case 0x07b3:
case 0x07b4:
case 0x07b5:
case 0x07b6:
case 0x07b7:
case 0x09b0:
case 0x09b1:
case 0x09b2:
case 0x09b3:
case 0x09b4:
case 0x09b5:
case 0x09b6:
case 0x09b7:
case 0x0bb0:
case 0x0bb1:
case 0x0bb2:
case 0x0bb3:
case 0x0bb4:
case 0x0bb5:
case 0x0bb6:
case 0x0bb7:
case 0x0db0:
case 0x0db1:
case 0x0db2:
case 0x0db3:
case 0x0db4:
case 0x0db5:
case 0x0db6:
case 0x0db7:
case 0x0fb0:
case 0x0fb1:
case 0x0fb2:
case 0x0fb3:
case 0x0fb4:
case 0x0fb5:
case 0x0fb6:
case 0x0fb7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); BCLR(targ, D[instr_b11_b9]);
	}
	break;

case 0x01f0:
case 0x01f1:
case 0x01f2:
case 0x01f3:
case 0x01f4:
case 0x01f5:
case 0x01f6:
case 0x01f7:
case 0x03f0:
case 0x03f1:
case 0x03f2:
case 0x03f3:
case 0x03f4:
case 0x03f5:
case 0x03f6:
case 0x03f7:
case 0x05f0:
case 0x05f1:
case 0x05f2:
case 0x05f3:
case 0x05f4:
case 0x05f5:
case 0x05f6:
case 0x05f7:
case 0x07f0:
case 0x07f1:
case 0x07f2:
case 0x07f3:
case 0x07f4:
case 0x07f5:
case 0x07f6:
case 0x07f7:
case 0x09f0:
case 0x09f1:
case 0x09f2:
case 0x09f3:
case 0x09f4:
case 0x09f5:
case 0x09f6:
case 0x09f7:
case 0x0bf0:
case 0x0bf1:
case 0x0bf2:
case 0x0bf3:
case 0x0bf4:
case 0x0bf5:
case 0x0bf6:
case 0x0bf7:
case 0x0df0:
case 0x0df1:
case 0x0df2:
case 0x0df3:
case 0x0df4:
case 0x0df5:
case 0x0df6:
case 0x0df7:
case 0x0ff0:
case 0x0ff1:
case 0x0ff2:
case 0x0ff3:
case 0x0ff4:
case 0x0ff5:
case 0x0ff6:
case 0x0ff7:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); BSET(targ, D[instr_b11_b9]);
	}
	break;

case 0x0130:
case 0x0131:
case 0x0132:
case 0x0133:
case 0x0134:
case 0x0135:
case 0x0136:
case 0x0137:
case 0x0330:
case 0x0331:
case 0x0332:
case 0x0333:
case 0x0334:
case 0x0335:
case 0x0336:
case 0x0337:
case 0x0530:
case 0x0531:
case 0x0532:
case 0x0533:
case 0x0534:
case 0x0535:
case 0x0536:
case 0x0537:
case 0x0730:
case 0x0731:
case 0x0732:
case 0x0733:
case 0x0734:
case 0x0735:
case 0x0736:
case 0x0737:
case 0x0930:
case 0x0931:
case 0x0932:
case 0x0933:
case 0x0934:
case 0x0935:
case 0x0936:
case 0x0937:
case 0x0b30:
case 0x0b31:
case 0x0b32:
case 0x0b33:
case 0x0b34:
case 0x0b35:
case 0x0b36:
case 0x0b37:
case 0x0d30:
case 0x0d31:
case 0x0d32:
case 0x0d33:
case 0x0d34:
case 0x0d35:
case 0x0d36:
case 0x0d37:
case 0x0f30:
case 0x0f31:
case 0x0f32:
case 0x0f33:
case 0x0f34:
case 0x0f35:
case 0x0f36:
case 0x0f37:
	{
	 HAM<uint8, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0x4218:
case 0x4219:
case 0x421a:
case 0x421b:
case 0x421c:
case 0x421d:
case 0x421e:
case 0x421f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4818:
case 0x4819:
case 0x481a:
case 0x481b:
case 0x481c:
case 0x481d:
case 0x481e:
case 0x481f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NBCD(dst);
	}
	break;

case 0x4418:
case 0x4419:
case 0x441a:
case 0x441b:
case 0x441c:
case 0x441d:
case 0x441e:
case 0x441f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4018:
case 0x4019:
case 0x401a:
case 0x401b:
case 0x401c:
case 0x401d:
case 0x401e:
case 0x401f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4618:
case 0x4619:
case 0x461a:
case 0x461b:
case 0x461c:
case 0x461d:
case 0x461e:
case 0x461f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x50d8:
case 0x50d9:
case 0x50da:
case 0x50db:
case 0x50dc:
case 0x50dd:
case 0x50de:
case 0x50df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x00>(dst);
	}
	break;

case 0x51d8:
case 0x51d9:
case 0x51da:
case 0x51db:
case 0x51dc:
case 0x51dd:
case 0x51de:
case 0x51df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x01>(dst);
	}
	break;

case 0x52d8:
case 0x52d9:
case 0x52da:
case 0x52db:
case 0x52dc:
case 0x52dd:
case 0x52de:
case 0x52df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x02>(dst);
	}
	break;

case 0x53d8:
case 0x53d9:
case 0x53da:
case 0x53db:
case 0x53dc:
case 0x53dd:
case 0x53de:
case 0x53df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x03>(dst);
	}
	break;

case 0x54d8:
case 0x54d9:
case 0x54da:
case 0x54db:
case 0x54dc:
case 0x54dd:
case 0x54de:
case 0x54df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x04>(dst);
	}
	break;

case 0x55d8:
case 0x55d9:
case 0x55da:
case 0x55db:
case 0x55dc:
case 0x55dd:
case 0x55de:
case 0x55df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x05>(dst);
	}
	break;

case 0x56d8:
case 0x56d9:
case 0x56da:
case 0x56db:
case 0x56dc:
case 0x56dd:
case 0x56de:
case 0x56df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x06>(dst);
	}
	break;

case 0x57d8:
case 0x57d9:
case 0x57da:
case 0x57db:
case 0x57dc:
case 0x57dd:
case 0x57de:
case 0x57df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x07>(dst);
	}
	break;

case 0x58d8:
case 0x58d9:
case 0x58da:
case 0x58db:
case 0x58dc:
case 0x58dd:
case 0x58de:
case 0x58df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x08>(dst);
	}
	break;

case 0x59d8:
case 0x59d9:
case 0x59da:
case 0x59db:
case 0x59dc:
case 0x59dd:
case 0x59de:
case 0x59df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x09>(dst);
	}
	break;

case 0x5ad8:
case 0x5ad9:
case 0x5ada:
case 0x5adb:
case 0x5adc:
case 0x5add:
case 0x5ade:
case 0x5adf:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x0a>(dst);
	}
	break;

case 0x5bd8:
case 0x5bd9:
case 0x5bda:
case 0x5bdb:
case 0x5bdc:
case 0x5bdd:
case 0x5bde:
case 0x5bdf:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x0b>(dst);
	}
	break;

case 0x5cd8:
case 0x5cd9:
case 0x5cda:
case 0x5cdb:
case 0x5cdc:
case 0x5cdd:
case 0x5cde:
case 0x5cdf:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x0c>(dst);
	}
	break;

case 0x5dd8:
case 0x5dd9:
case 0x5dda:
case 0x5ddb:
case 0x5ddc:
case 0x5ddd:
case 0x5dde:
case 0x5ddf:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x0d>(dst);
	}
	break;

case 0x5ed8:
case 0x5ed9:
case 0x5eda:
case 0x5edb:
case 0x5edc:
case 0x5edd:
case 0x5ede:
case 0x5edf:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x0e>(dst);
	}
	break;

case 0x5fd8:
case 0x5fd9:
case 0x5fda:
case 0x5fdb:
case 0x5fdc:
case 0x5fdd:
case 0x5fde:
case 0x5fdf:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); Scc<0x0f>(dst);
	}
	break;

case 0x4ad8:
case 0x4ad9:
case 0x4ada:
case 0x4adb:
case 0x4adc:
case 0x4add:
case 0x4ade:
case 0x4adf:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); TAS(dst);
	}
	break;

case 0x4a18:
case 0x4a19:
case 0x4a1a:
case 0x4a1b:
case 0x4a1c:
case 0x4a1d:
case 0x4a1e:
case 0x4a1f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x13d8:
case 0x13d9:
case 0x13da:
case 0x13db:
case 0x13dc:
case 0x13dd:
case 0x13de:
case 0x13df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11d8:
case 0x11d9:
case 0x11da:
case 0x11db:
case 0x11dc:
case 0x11dd:
case 0x11de:
case 0x11df:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x1098:
case 0x1099:
case 0x109a:
case 0x109b:
case 0x109c:
case 0x109d:
case 0x109e:
case 0x109f:
case 0x1298:
case 0x1299:
case 0x129a:
case 0x129b:
case 0x129c:
case 0x129d:
case 0x129e:
case 0x129f:
case 0x1498:
case 0x1499:
case 0x149a:
case 0x149b:
case 0x149c:
case 0x149d:
case 0x149e:
case 0x149f:
case 0x1698:
case 0x1699:
case 0x169a:
case 0x169b:
case 0x169c:
case 0x169d:
case 0x169e:
case 0x169f:
case 0x1898:
case 0x1899:
case 0x189a:
case 0x189b:
case 0x189c:
case 0x189d:
case 0x189e:
case 0x189f:
case 0x1a98:
case 0x1a99:
case 0x1a9a:
case 0x1a9b:
case 0x1a9c:
case 0x1a9d:
case 0x1a9e:
case 0x1a9f:
case 0x1c98:
case 0x1c99:
case 0x1c9a:
case 0x1c9b:
case 0x1c9c:
case 0x1c9d:
case 0x1c9e:
case 0x1c9f:
case 0x1e98:
case 0x1e99:
case 0x1e9a:
case 0x1e9b:
case 0x1e9c:
case 0x1e9d:
case 0x1e9e:
case 0x1e9f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1158:
case 0x1159:
case 0x115a:
case 0x115b:
case 0x115c:
case 0x115d:
case 0x115e:
case 0x115f:
case 0x1358:
case 0x1359:
case 0x135a:
case 0x135b:
case 0x135c:
case 0x135d:
case 0x135e:
case 0x135f:
case 0x1558:
case 0x1559:
case 0x155a:
case 0x155b:
case 0x155c:
case 0x155d:
case 0x155e:
case 0x155f:
case 0x1758:
case 0x1759:
case 0x175a:
case 0x175b:
case 0x175c:
case 0x175d:
case 0x175e:
case 0x175f:
case 0x1958:
case 0x1959:
case 0x195a:
case 0x195b:
case 0x195c:
case 0x195d:
case 0x195e:
case 0x195f:
case 0x1b58:
case 0x1b59:
case 0x1b5a:
case 0x1b5b:
case 0x1b5c:
case 0x1b5d:
case 0x1b5e:
case 0x1b5f:
case 0x1d58:
case 0x1d59:
case 0x1d5a:
case 0x1d5b:
case 0x1d5c:
case 0x1d5d:
case 0x1d5e:
case 0x1d5f:
case 0x1f58:
case 0x1f59:
case 0x1f5a:
case 0x1f5b:
case 0x1f5c:
case 0x1f5d:
case 0x1f5e:
case 0x1f5f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1198:
case 0x1199:
case 0x119a:
case 0x119b:
case 0x119c:
case 0x119d:
case 0x119e:
case 0x119f:
case 0x1398:
case 0x1399:
case 0x139a:
case 0x139b:
case 0x139c:
case 0x139d:
case 0x139e:
case 0x139f:
case 0x1598:
case 0x1599:
case 0x159a:
case 0x159b:
case 0x159c:
case 0x159d:
case 0x159e:
case 0x159f:
case 0x1798:
case 0x1799:
case 0x179a:
case 0x179b:
case 0x179c:
case 0x179d:
case 0x179e:
case 0x179f:
case 0x1998:
case 0x1999:
case 0x199a:
case 0x199b:
case 0x199c:
case 0x199d:
case 0x199e:
case 0x199f:
case 0x1b98:
case 0x1b99:
case 0x1b9a:
case 0x1b9b:
case 0x1b9c:
case 0x1b9d:
case 0x1b9e:
case 0x1b9f:
case 0x1d98:
case 0x1d99:
case 0x1d9a:
case 0x1d9b:
case 0x1d9c:
case 0x1d9d:
case 0x1d9e:
case 0x1d9f:
case 0x1f98:
case 0x1f99:
case 0x1f9a:
case 0x1f9b:
case 0x1f9c:
case 0x1f9d:
case 0x1f9e:
case 0x1f9f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xb108:
case 0xb109:
case 0xb10a:
case 0xb10b:
case 0xb10c:
case 0xb10d:
case 0xb10e:
case 0xb10f:
case 0xb308:
case 0xb309:
case 0xb30a:
case 0xb30b:
case 0xb30c:
case 0xb30d:
case 0xb30e:
case 0xb30f:
case 0xb508:
case 0xb509:
case 0xb50a:
case 0xb50b:
case 0xb50c:
case 0xb50d:
case 0xb50e:
case 0xb50f:
case 0xb708:
case 0xb709:
case 0xb70a:
case 0xb70b:
case 0xb70c:
case 0xb70d:
case 0xb70e:
case 0xb70f:
case 0xb908:
case 0xb909:
case 0xb90a:
case 0xb90b:
case 0xb90c:
case 0xb90d:
case 0xb90e:
case 0xb90f:
case 0xbb08:
case 0xbb09:
case 0xbb0a:
case 0xbb0b:
case 0xbb0c:
case 0xbb0d:
case 0xbb0e:
case 0xbb0f:
case 0xbd08:
case 0xbd09:
case 0xbd0a:
case 0xbd0b:
case 0xbd0c:
case 0xbd0d:
case 0xbd0e:
case 0xbd0f:
case 0xbf08:
case 0xbf09:
case 0xbf0a:
case 0xbf0b:
case 0xbf0c:
case 0xbf0d:
case 0xbf0e:
case 0xbf0f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x10d8:
case 0x10d9:
case 0x10da:
case 0x10db:
case 0x10dc:
case 0x10dd:
case 0x10de:
case 0x10df:
case 0x12d8:
case 0x12d9:
case 0x12da:
case 0x12db:
case 0x12dc:
case 0x12dd:
case 0x12de:
case 0x12df:
case 0x14d8:
case 0x14d9:
case 0x14da:
case 0x14db:
case 0x14dc:
case 0x14dd:
case 0x14de:
case 0x14df:
case 0x16d8:
case 0x16d9:
case 0x16da:
case 0x16db:
case 0x16dc:
case 0x16dd:
case 0x16de:
case 0x16df:
case 0x18d8:
case 0x18d9:
case 0x18da:
case 0x18db:
case 0x18dc:
case 0x18dd:
case 0x18de:
case 0x18df:
case 0x1ad8:
case 0x1ad9:
case 0x1ada:
case 0x1adb:
case 0x1adc:
case 0x1add:
case 0x1ade:
case 0x1adf:
case 0x1cd8:
case 0x1cd9:
case 0x1cda:
case 0x1cdb:
case 0x1cdc:
case 0x1cdd:
case 0x1cde:
case 0x1cdf:
case 0x1ed8:
case 0x1ed9:
case 0x1eda:
case 0x1edb:
case 0x1edc:
case 0x1edd:
case 0x1ede:
case 0x1edf:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1118:
case 0x1119:
case 0x111a:
case 0x111b:
case 0x111c:
case 0x111d:
case 0x111e:
case 0x111f:
case 0x1318:
case 0x1319:
case 0x131a:
case 0x131b:
case 0x131c:
case 0x131d:
case 0x131e:
case 0x131f:
case 0x1518:
case 0x1519:
case 0x151a:
case 0x151b:
case 0x151c:
case 0x151d:
case 0x151e:
case 0x151f:
case 0x1718:
case 0x1719:
case 0x171a:
case 0x171b:
case 0x171c:
case 0x171d:
case 0x171e:
case 0x171f:
case 0x1918:
case 0x1919:
case 0x191a:
case 0x191b:
case 0x191c:
case 0x191d:
case 0x191e:
case 0x191f:
case 0x1b18:
case 0x1b19:
case 0x1b1a:
case 0x1b1b:
case 0x1b1c:
case 0x1b1d:
case 0x1b1e:
case 0x1b1f:
case 0x1d18:
case 0x1d19:
case 0x1d1a:
case 0x1d1b:
case 0x1d1c:
case 0x1d1d:
case 0x1d1e:
case 0x1d1f:
case 0x1f18:
case 0x1f19:
case 0x1f1a:
case 0x1f1b:
case 0x1f1c:
case 0x1f1d:
case 0x1f1e:
case 0x1f1f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd018:
case 0xd019:
case 0xd01a:
case 0xd01b:
case 0xd01c:
case 0xd01d:
case 0xd01e:
case 0xd01f:
case 0xd218:
case 0xd219:
case 0xd21a:
case 0xd21b:
case 0xd21c:
case 0xd21d:
case 0xd21e:
case 0xd21f:
case 0xd418:
case 0xd419:
case 0xd41a:
case 0xd41b:
case 0xd41c:
case 0xd41d:
case 0xd41e:
case 0xd41f:
case 0xd618:
case 0xd619:
case 0xd61a:
case 0xd61b:
case 0xd61c:
case 0xd61d:
case 0xd61e:
case 0xd61f:
case 0xd818:
case 0xd819:
case 0xd81a:
case 0xd81b:
case 0xd81c:
case 0xd81d:
case 0xd81e:
case 0xd81f:
case 0xda18:
case 0xda19:
case 0xda1a:
case 0xda1b:
case 0xda1c:
case 0xda1d:
case 0xda1e:
case 0xda1f:
case 0xdc18:
case 0xdc19:
case 0xdc1a:
case 0xdc1b:
case 0xdc1c:
case 0xdc1d:
case 0xdc1e:
case 0xdc1f:
case 0xde18:
case 0xde19:
case 0xde1a:
case 0xde1b:
case 0xde1c:
case 0xde1d:
case 0xde1e:
case 0xde1f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc018:
case 0xc019:
case 0xc01a:
case 0xc01b:
case 0xc01c:
case 0xc01d:
case 0xc01e:
case 0xc01f:
case 0xc218:
case 0xc219:
case 0xc21a:
case 0xc21b:
case 0xc21c:
case 0xc21d:
case 0xc21e:
case 0xc21f:
case 0xc418:
case 0xc419:
case 0xc41a:
case 0xc41b:
case 0xc41c:
case 0xc41d:
case 0xc41e:
case 0xc41f:
case 0xc618:
case 0xc619:
case 0xc61a:
case 0xc61b:
case 0xc61c:
case 0xc61d:
case 0xc61e:
case 0xc61f:
case 0xc818:
case 0xc819:
case 0xc81a:
case 0xc81b:
case 0xc81c:
case 0xc81d:
case 0xc81e:
case 0xc81f:
case 0xca18:
case 0xca19:
case 0xca1a:
case 0xca1b:
case 0xca1c:
case 0xca1d:
case 0xca1e:
case 0xca1f:
case 0xcc18:
case 0xcc19:
case 0xcc1a:
case 0xcc1b:
case 0xcc1c:
case 0xcc1d:
case 0xcc1e:
case 0xcc1f:
case 0xce18:
case 0xce19:
case 0xce1a:
case 0xce1b:
case 0xce1c:
case 0xce1d:
case 0xce1e:
case 0xce1f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb018:
case 0xb019:
case 0xb01a:
case 0xb01b:
case 0xb01c:
case 0xb01d:
case 0xb01e:
case 0xb01f:
case 0xb218:
case 0xb219:
case 0xb21a:
case 0xb21b:
case 0xb21c:
case 0xb21d:
case 0xb21e:
case 0xb21f:
case 0xb418:
case 0xb419:
case 0xb41a:
case 0xb41b:
case 0xb41c:
case 0xb41d:
case 0xb41e:
case 0xb41f:
case 0xb618:
case 0xb619:
case 0xb61a:
case 0xb61b:
case 0xb61c:
case 0xb61d:
case 0xb61e:
case 0xb61f:
case 0xb818:
case 0xb819:
case 0xb81a:
case 0xb81b:
case 0xb81c:
case 0xb81d:
case 0xb81e:
case 0xb81f:
case 0xba18:
case 0xba19:
case 0xba1a:
case 0xba1b:
case 0xba1c:
case 0xba1d:
case 0xba1e:
case 0xba1f:
case 0xbc18:
case 0xbc19:
case 0xbc1a:
case 0xbc1b:
case 0xbc1c:
case 0xbc1d:
case 0xbc1e:
case 0xbc1f:
case 0xbe18:
case 0xbe19:
case 0xbe1a:
case 0xbe1b:
case 0xbe1c:
case 0xbe1d:
case 0xbe1e:
case 0xbe1f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x1018:
case 0x1019:
case 0x101a:
case 0x101b:
case 0x101c:
case 0x101d:
case 0x101e:
case 0x101f:
case 0x1218:
case 0x1219:
case 0x121a:
case 0x121b:
case 0x121c:
case 0x121d:
case 0x121e:
case 0x121f:
case 0x1418:
case 0x1419:
case 0x141a:
case 0x141b:
case 0x141c:
case 0x141d:
case 0x141e:
case 0x141f:
case 0x1618:
case 0x1619:
case 0x161a:
case 0x161b:
case 0x161c:
case 0x161d:
case 0x161e:
case 0x161f:
case 0x1818:
case 0x1819:
case 0x181a:
case 0x181b:
case 0x181c:
case 0x181d:
case 0x181e:
case 0x181f:
case 0x1a18:
case 0x1a19:
case 0x1a1a:
case 0x1a1b:
case 0x1a1c:
case 0x1a1d:
case 0x1a1e:
case 0x1a1f:
case 0x1c18:
case 0x1c19:
case 0x1c1a:
case 0x1c1b:
case 0x1c1c:
case 0x1c1d:
case 0x1c1e:
case 0x1c1f:
case 0x1e18:
case 0x1e19:
case 0x1e1a:
case 0x1e1b:
case 0x1e1c:
case 0x1e1d:
case 0x1e1e:
case 0x1e1f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8018:
case 0x8019:
case 0x801a:
case 0x801b:
case 0x801c:
case 0x801d:
case 0x801e:
case 0x801f:
case 0x8218:
case 0x8219:
case 0x821a:
case 0x821b:
case 0x821c:
case 0x821d:
case 0x821e:
case 0x821f:
case 0x8418:
case 0x8419:
case 0x841a:
case 0x841b:
case 0x841c:
case 0x841d:
case 0x841e:
case 0x841f:
case 0x8618:
case 0x8619:
case 0x861a:
case 0x861b:
case 0x861c:
case 0x861d:
case 0x861e:
case 0x861f:
case 0x8818:
case 0x8819:
case 0x881a:
case 0x881b:
case 0x881c:
case 0x881d:
case 0x881e:
case 0x881f:
case 0x8a18:
case 0x8a19:
case 0x8a1a:
case 0x8a1b:
case 0x8a1c:
case 0x8a1d:
case 0x8a1e:
case 0x8a1f:
case 0x8c18:
case 0x8c19:
case 0x8c1a:
case 0x8c1b:
case 0x8c1c:
case 0x8c1d:
case 0x8c1e:
case 0x8c1f:
case 0x8e18:
case 0x8e19:
case 0x8e1a:
case 0x8e1b:
case 0x8e1c:
case 0x8e1d:
case 0x8e1e:
case 0x8e1f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9018:
case 0x9019:
case 0x901a:
case 0x901b:
case 0x901c:
case 0x901d:
case 0x901e:
case 0x901f:
case 0x9218:
case 0x9219:
case 0x921a:
case 0x921b:
case 0x921c:
case 0x921d:
case 0x921e:
case 0x921f:
case 0x9418:
case 0x9419:
case 0x941a:
case 0x941b:
case 0x941c:
case 0x941d:
case 0x941e:
case 0x941f:
case 0x9618:
case 0x9619:
case 0x961a:
case 0x961b:
case 0x961c:
case 0x961d:
case 0x961e:
case 0x961f:
case 0x9818:
case 0x9819:
case 0x981a:
case 0x981b:
case 0x981c:
case 0x981d:
case 0x981e:
case 0x981f:
case 0x9a18:
case 0x9a19:
case 0x9a1a:
case 0x9a1b:
case 0x9a1c:
case 0x9a1d:
case 0x9a1e:
case 0x9a1f:
case 0x9c18:
case 0x9c19:
case 0x9c1a:
case 0x9c1b:
case 0x9c1c:
case 0x9c1d:
case 0x9c1e:
case 0x9c1f:
case 0x9e18:
case 0x9e19:
case 0x9e1a:
case 0x9e1b:
case 0x9e1c:
case 0x9e1d:
case 0x9e1e:
case 0x9e1f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0158:
case 0x0159:
case 0x015a:
case 0x015b:
case 0x015c:
case 0x015d:
case 0x015e:
case 0x015f:
case 0x0358:
case 0x0359:
case 0x035a:
case 0x035b:
case 0x035c:
case 0x035d:
case 0x035e:
case 0x035f:
case 0x0558:
case 0x0559:
case 0x055a:
case 0x055b:
case 0x055c:
case 0x055d:
case 0x055e:
case 0x055f:
case 0x0758:
case 0x0759:
case 0x075a:
case 0x075b:
case 0x075c:
case 0x075d:
case 0x075e:
case 0x075f:
case 0x0958:
case 0x0959:
case 0x095a:
case 0x095b:
case 0x095c:
case 0x095d:
case 0x095e:
case 0x095f:
case 0x0b58:
case 0x0b59:
case 0x0b5a:
case 0x0b5b:
case 0x0b5c:
case 0x0b5d:
case 0x0b5e:
case 0x0b5f:
case 0x0d58:
case 0x0d59:
case 0x0d5a:
case 0x0d5b:
case 0x0d5c:
case 0x0d5d:
case 0x0d5e:
case 0x0d5f:
case 0x0f58:
case 0x0f59:
case 0x0f5a:
case 0x0f5b:
case 0x0f5c:
case 0x0f5d:
case 0x0f5e:
case 0x0f5f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); BCHG(targ, D[instr_b11_b9]);
	}
	break;

case 0x0198:
case 0x0199:
case 0x019a:
case 0x019b:
case 0x019c:
case 0x019d:
case 0x019e:
case 0x019f:
case 0x0398:
case 0x0399:
case 0x039a:
case 0x039b:
case 0x039c:
case 0x039d:
case 0x039e:
case 0x039f:
case 0x0598:
case 0x0599:
case 0x059a:
case 0x059b:
case 0x059c:
case 0x059d:
case 0x059e:
case 0x059f:
case 0x0798:
case 0x0799:
case 0x079a:
case 0x079b:
case 0x079c:
case 0x079d:
case 0x079e:
case 0x079f:
case 0x0998:
case 0x0999:
case 0x099a:
case 0x099b:
case 0x099c:
case 0x099d:
case 0x099e:
case 0x099f:
case 0x0b98:
case 0x0b99:
case 0x0b9a:
case 0x0b9b:
case 0x0b9c:
case 0x0b9d:
case 0x0b9e:
case 0x0b9f:
case 0x0d98:
case 0x0d99:
case 0x0d9a:
case 0x0d9b:
case 0x0d9c:
case 0x0d9d:
case 0x0d9e:
case 0x0d9f:
case 0x0f98:
case 0x0f99:
case 0x0f9a:
case 0x0f9b:
case 0x0f9c:
case 0x0f9d:
case 0x0f9e:
case 0x0f9f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); BCLR(targ, D[instr_b11_b9]);
	}
	break;

case 0x01d8:
case 0x01d9:
case 0x01da:
case 0x01db:
case 0x01dc:
case 0x01dd:
case 0x01de:
case 0x01df:
case 0x03d8:
case 0x03d9:
case 0x03da:
case 0x03db:
case 0x03dc:
case 0x03dd:
case 0x03de:
case 0x03df:
case 0x05d8:
case 0x05d9:
case 0x05da:
case 0x05db:
case 0x05dc:
case 0x05dd:
case 0x05de:
case 0x05df:
case 0x07d8:
case 0x07d9:
case 0x07da:
case 0x07db:
case 0x07dc:
case 0x07dd:
case 0x07de:
case 0x07df:
case 0x09d8:
case 0x09d9:
case 0x09da:
case 0x09db:
case 0x09dc:
case 0x09dd:
case 0x09de:
case 0x09df:
case 0x0bd8:
case 0x0bd9:
case 0x0bda:
case 0x0bdb:
case 0x0bdc:
case 0x0bdd:
case 0x0bde:
case 0x0bdf:
case 0x0dd8:
case 0x0dd9:
case 0x0dda:
case 0x0ddb:
case 0x0ddc:
case 0x0ddd:
case 0x0dde:
case 0x0ddf:
case 0x0fd8:
case 0x0fd9:
case 0x0fda:
case 0x0fdb:
case 0x0fdc:
case 0x0fdd:
case 0x0fde:
case 0x0fdf:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); BSET(targ, D[instr_b11_b9]);
	}
	break;

case 0x0118:
case 0x0119:
case 0x011a:
case 0x011b:
case 0x011c:
case 0x011d:
case 0x011e:
case 0x011f:
case 0x0318:
case 0x0319:
case 0x031a:
case 0x031b:
case 0x031c:
case 0x031d:
case 0x031e:
case 0x031f:
case 0x0518:
case 0x0519:
case 0x051a:
case 0x051b:
case 0x051c:
case 0x051d:
case 0x051e:
case 0x051f:
case 0x0718:
case 0x0719:
case 0x071a:
case 0x071b:
case 0x071c:
case 0x071d:
case 0x071e:
case 0x071f:
case 0x0918:
case 0x0919:
case 0x091a:
case 0x091b:
case 0x091c:
case 0x091d:
case 0x091e:
case 0x091f:
case 0x0b18:
case 0x0b19:
case 0x0b1a:
case 0x0b1b:
case 0x0b1c:
case 0x0b1d:
case 0x0b1e:
case 0x0b1f:
case 0x0d18:
case 0x0d19:
case 0x0d1a:
case 0x0d1b:
case 0x0d1c:
case 0x0d1d:
case 0x0d1e:
case 0x0d1f:
case 0x0f18:
case 0x0f19:
case 0x0f1a:
case 0x0f1b:
case 0x0f1c:
case 0x0f1d:
case 0x0f1e:
case 0x0f1f:
	{
	 HAM<uint8, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0x4220:
case 0x4221:
case 0x4222:
case 0x4223:
case 0x4224:
case 0x4225:
case 0x4226:
case 0x4227:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4820:
case 0x4821:
case 0x4822:
case 0x4823:
case 0x4824:
case 0x4825:
case 0x4826:
case 0x4827:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NBCD(dst);
	}
	break;

case 0x4420:
case 0x4421:
case 0x4422:
case 0x4423:
case 0x4424:
case 0x4425:
case 0x4426:
case 0x4427:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4020:
case 0x4021:
case 0x4022:
case 0x4023:
case 0x4024:
case 0x4025:
case 0x4026:
case 0x4027:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4620:
case 0x4621:
case 0x4622:
case 0x4623:
case 0x4624:
case 0x4625:
case 0x4626:
case 0x4627:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x50e0:
case 0x50e1:
case 0x50e2:
case 0x50e3:
case 0x50e4:
case 0x50e5:
case 0x50e6:
case 0x50e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x00>(dst);
	}
	break;

case 0x51e0:
case 0x51e1:
case 0x51e2:
case 0x51e3:
case 0x51e4:
case 0x51e5:
case 0x51e6:
case 0x51e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x01>(dst);
	}
	break;

case 0x52e0:
case 0x52e1:
case 0x52e2:
case 0x52e3:
case 0x52e4:
case 0x52e5:
case 0x52e6:
case 0x52e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x02>(dst);
	}
	break;

case 0x53e0:
case 0x53e1:
case 0x53e2:
case 0x53e3:
case 0x53e4:
case 0x53e5:
case 0x53e6:
case 0x53e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x03>(dst);
	}
	break;

case 0x54e0:
case 0x54e1:
case 0x54e2:
case 0x54e3:
case 0x54e4:
case 0x54e5:
case 0x54e6:
case 0x54e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x04>(dst);
	}
	break;

case 0x55e0:
case 0x55e1:
case 0x55e2:
case 0x55e3:
case 0x55e4:
case 0x55e5:
case 0x55e6:
case 0x55e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x05>(dst);
	}
	break;

case 0x56e0:
case 0x56e1:
case 0x56e2:
case 0x56e3:
case 0x56e4:
case 0x56e5:
case 0x56e6:
case 0x56e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x06>(dst);
	}
	break;

case 0x57e0:
case 0x57e1:
case 0x57e2:
case 0x57e3:
case 0x57e4:
case 0x57e5:
case 0x57e6:
case 0x57e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x07>(dst);
	}
	break;

case 0x58e0:
case 0x58e1:
case 0x58e2:
case 0x58e3:
case 0x58e4:
case 0x58e5:
case 0x58e6:
case 0x58e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x08>(dst);
	}
	break;

case 0x59e0:
case 0x59e1:
case 0x59e2:
case 0x59e3:
case 0x59e4:
case 0x59e5:
case 0x59e6:
case 0x59e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x09>(dst);
	}
	break;

case 0x5ae0:
case 0x5ae1:
case 0x5ae2:
case 0x5ae3:
case 0x5ae4:
case 0x5ae5:
case 0x5ae6:
case 0x5ae7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x0a>(dst);
	}
	break;

case 0x5be0:
case 0x5be1:
case 0x5be2:
case 0x5be3:
case 0x5be4:
case 0x5be5:
case 0x5be6:
case 0x5be7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x0b>(dst);
	}
	break;

case 0x5ce0:
case 0x5ce1:
case 0x5ce2:
case 0x5ce3:
case 0x5ce4:
case 0x5ce5:
case 0x5ce6:
case 0x5ce7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x0c>(dst);
	}
	break;

case 0x5de0:
case 0x5de1:
case 0x5de2:
case 0x5de3:
case 0x5de4:
case 0x5de5:
case 0x5de6:
case 0x5de7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x0d>(dst);
	}
	break;

case 0x5ee0:
case 0x5ee1:
case 0x5ee2:
case 0x5ee3:
case 0x5ee4:
case 0x5ee5:
case 0x5ee6:
case 0x5ee7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x0e>(dst);
	}
	break;

case 0x5fe0:
case 0x5fe1:
case 0x5fe2:
case 0x5fe3:
case 0x5fe4:
case 0x5fe5:
case 0x5fe6:
case 0x5fe7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); Scc<0x0f>(dst);
	}
	break;

case 0x4ae0:
case 0x4ae1:
case 0x4ae2:
case 0x4ae3:
case 0x4ae4:
case 0x4ae5:
case 0x4ae6:
case 0x4ae7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); TAS(dst);
	}
	break;

case 0x4a20:
case 0x4a21:
case 0x4a22:
case 0x4a23:
case 0x4a24:
case 0x4a25:
case 0x4a26:
case 0x4a27:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0x13e0:
case 0x13e1:
case 0x13e2:
case 0x13e3:
case 0x13e4:
case 0x13e5:
case 0x13e6:
case 0x13e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11e0:
case 0x11e1:
case 0x11e2:
case 0x11e3:
case 0x11e4:
case 0x11e5:
case 0x11e6:
case 0x11e7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x10a0:
case 0x10a1:
case 0x10a2:
case 0x10a3:
case 0x10a4:
case 0x10a5:
case 0x10a6:
case 0x10a7:
case 0x12a0:
case 0x12a1:
case 0x12a2:
case 0x12a3:
case 0x12a4:
case 0x12a5:
case 0x12a6:
case 0x12a7:
case 0x14a0:
case 0x14a1:
case 0x14a2:
case 0x14a3:
case 0x14a4:
case 0x14a5:
case 0x14a6:
case 0x14a7:
case 0x16a0:
case 0x16a1:
case 0x16a2:
case 0x16a3:
case 0x16a4:
case 0x16a5:
case 0x16a6:
case 0x16a7:
case 0x18a0:
case 0x18a1:
case 0x18a2:
case 0x18a3:
case 0x18a4:
case 0x18a5:
case 0x18a6:
case 0x18a7:
case 0x1aa0:
case 0x1aa1:
case 0x1aa2:
case 0x1aa3:
case 0x1aa4:
case 0x1aa5:
case 0x1aa6:
case 0x1aa7:
case 0x1ca0:
case 0x1ca1:
case 0x1ca2:
case 0x1ca3:
case 0x1ca4:
case 0x1ca5:
case 0x1ca6:
case 0x1ca7:
case 0x1ea0:
case 0x1ea1:
case 0x1ea2:
case 0x1ea3:
case 0x1ea4:
case 0x1ea5:
case 0x1ea6:
case 0x1ea7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1160:
case 0x1161:
case 0x1162:
case 0x1163:
case 0x1164:
case 0x1165:
case 0x1166:
case 0x1167:
case 0x1360:
case 0x1361:
case 0x1362:
case 0x1363:
case 0x1364:
case 0x1365:
case 0x1366:
case 0x1367:
case 0x1560:
case 0x1561:
case 0x1562:
case 0x1563:
case 0x1564:
case 0x1565:
case 0x1566:
case 0x1567:
case 0x1760:
case 0x1761:
case 0x1762:
case 0x1763:
case 0x1764:
case 0x1765:
case 0x1766:
case 0x1767:
case 0x1960:
case 0x1961:
case 0x1962:
case 0x1963:
case 0x1964:
case 0x1965:
case 0x1966:
case 0x1967:
case 0x1b60:
case 0x1b61:
case 0x1b62:
case 0x1b63:
case 0x1b64:
case 0x1b65:
case 0x1b66:
case 0x1b67:
case 0x1d60:
case 0x1d61:
case 0x1d62:
case 0x1d63:
case 0x1d64:
case 0x1d65:
case 0x1d66:
case 0x1d67:
case 0x1f60:
case 0x1f61:
case 0x1f62:
case 0x1f63:
case 0x1f64:
case 0x1f65:
case 0x1f66:
case 0x1f67:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x11a0:
case 0x11a1:
case 0x11a2:
case 0x11a3:
case 0x11a4:
case 0x11a5:
case 0x11a6:
case 0x11a7:
case 0x13a0:
case 0x13a1:
case 0x13a2:
case 0x13a3:
case 0x13a4:
case 0x13a5:
case 0x13a6:
case 0x13a7:
case 0x15a0:
case 0x15a1:
case 0x15a2:
case 0x15a3:
case 0x15a4:
case 0x15a5:
case 0x15a6:
case 0x15a7:
case 0x17a0:
case 0x17a1:
case 0x17a2:
case 0x17a3:
case 0x17a4:
case 0x17a5:
case 0x17a6:
case 0x17a7:
case 0x19a0:
case 0x19a1:
case 0x19a2:
case 0x19a3:
case 0x19a4:
case 0x19a5:
case 0x19a6:
case 0x19a7:
case 0x1ba0:
case 0x1ba1:
case 0x1ba2:
case 0x1ba3:
case 0x1ba4:
case 0x1ba5:
case 0x1ba6:
case 0x1ba7:
case 0x1da0:
case 0x1da1:
case 0x1da2:
case 0x1da3:
case 0x1da4:
case 0x1da5:
case 0x1da6:
case 0x1da7:
case 0x1fa0:
case 0x1fa1:
case 0x1fa2:
case 0x1fa3:
case 0x1fa4:
case 0x1fa5:
case 0x1fa6:
case 0x1fa7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x10e0:
case 0x10e1:
case 0x10e2:
case 0x10e3:
case 0x10e4:
case 0x10e5:
case 0x10e6:
case 0x10e7:
case 0x12e0:
case 0x12e1:
case 0x12e2:
case 0x12e3:
case 0x12e4:
case 0x12e5:
case 0x12e6:
case 0x12e7:
case 0x14e0:
case 0x14e1:
case 0x14e2:
case 0x14e3:
case 0x14e4:
case 0x14e5:
case 0x14e6:
case 0x14e7:
case 0x16e0:
case 0x16e1:
case 0x16e2:
case 0x16e3:
case 0x16e4:
case 0x16e5:
case 0x16e6:
case 0x16e7:
case 0x18e0:
case 0x18e1:
case 0x18e2:
case 0x18e3:
case 0x18e4:
case 0x18e5:
case 0x18e6:
case 0x18e7:
case 0x1ae0:
case 0x1ae1:
case 0x1ae2:
case 0x1ae3:
case 0x1ae4:
case 0x1ae5:
case 0x1ae6:
case 0x1ae7:
case 0x1ce0:
case 0x1ce1:
case 0x1ce2:
case 0x1ce3:
case 0x1ce4:
case 0x1ce5:
case 0x1ce6:
case 0x1ce7:
case 0x1ee0:
case 0x1ee1:
case 0x1ee2:
case 0x1ee3:
case 0x1ee4:
case 0x1ee5:
case 0x1ee6:
case 0x1ee7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xc108:
case 0xc109:
case 0xc10a:
case 0xc10b:
case 0xc10c:
case 0xc10d:
case 0xc10e:
case 0xc10f:
case 0xc308:
case 0xc309:
case 0xc30a:
case 0xc30b:
case 0xc30c:
case 0xc30d:
case 0xc30e:
case 0xc30f:
case 0xc508:
case 0xc509:
case 0xc50a:
case 0xc50b:
case 0xc50c:
case 0xc50d:
case 0xc50e:
case 0xc50f:
case 0xc708:
case 0xc709:
case 0xc70a:
case 0xc70b:
case 0xc70c:
case 0xc70d:
case 0xc70e:
case 0xc70f:
case 0xc908:
case 0xc909:
case 0xc90a:
case 0xc90b:
case 0xc90c:
case 0xc90d:
case 0xc90e:
case 0xc90f:
case 0xcb08:
case 0xcb09:
case 0xcb0a:
case 0xcb0b:
case 0xcb0c:
case 0xcb0d:
case 0xcb0e:
case 0xcb0f:
case 0xcd08:
case 0xcd09:
case 0xcd0a:
case 0xcd0b:
case 0xcd0c:
case 0xcd0d:
case 0xcd0e:
case 0xcd0f:
case 0xcf08:
case 0xcf09:
case 0xcf0a:
case 0xcf0b:
case 0xcf0c:
case 0xcf0d:
case 0xcf0e:
case 0xcf0f:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); ABCD(src, dst);
	}
	break;

case 0xd108:
case 0xd109:
case 0xd10a:
case 0xd10b:
case 0xd10c:
case 0xd10d:
case 0xd10e:
case 0xd10f:
case 0xd308:
case 0xd309:
case 0xd30a:
case 0xd30b:
case 0xd30c:
case 0xd30d:
case 0xd30e:
case 0xd30f:
case 0xd508:
case 0xd509:
case 0xd50a:
case 0xd50b:
case 0xd50c:
case 0xd50d:
case 0xd50e:
case 0xd50f:
case 0xd708:
case 0xd709:
case 0xd70a:
case 0xd70b:
case 0xd70c:
case 0xd70d:
case 0xd70e:
case 0xd70f:
case 0xd908:
case 0xd909:
case 0xd90a:
case 0xd90b:
case 0xd90c:
case 0xd90d:
case 0xd90e:
case 0xd90f:
case 0xdb08:
case 0xdb09:
case 0xdb0a:
case 0xdb0b:
case 0xdb0c:
case 0xdb0d:
case 0xdb0e:
case 0xdb0f:
case 0xdd08:
case 0xdd09:
case 0xdd0a:
case 0xdd0b:
case 0xdd0c:
case 0xdd0d:
case 0xdd0e:
case 0xdd0f:
case 0xdf08:
case 0xdf09:
case 0xdf0a:
case 0xdf0b:
case 0xdf0c:
case 0xdf0d:
case 0xdf0e:
case 0xdf0f:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); ADDX(src, dst);
	}
	break;

case 0x1120:
case 0x1121:
case 0x1122:
case 0x1123:
case 0x1124:
case 0x1125:
case 0x1126:
case 0x1127:
case 0x1320:
case 0x1321:
case 0x1322:
case 0x1323:
case 0x1324:
case 0x1325:
case 0x1326:
case 0x1327:
case 0x1520:
case 0x1521:
case 0x1522:
case 0x1523:
case 0x1524:
case 0x1525:
case 0x1526:
case 0x1527:
case 0x1720:
case 0x1721:
case 0x1722:
case 0x1723:
case 0x1724:
case 0x1725:
case 0x1726:
case 0x1727:
case 0x1920:
case 0x1921:
case 0x1922:
case 0x1923:
case 0x1924:
case 0x1925:
case 0x1926:
case 0x1927:
case 0x1b20:
case 0x1b21:
case 0x1b22:
case 0x1b23:
case 0x1b24:
case 0x1b25:
case 0x1b26:
case 0x1b27:
case 0x1d20:
case 0x1d21:
case 0x1d22:
case 0x1d23:
case 0x1d24:
case 0x1d25:
case 0x1d26:
case 0x1d27:
case 0x1f20:
case 0x1f21:
case 0x1f22:
case 0x1f23:
case 0x1f24:
case 0x1f25:
case 0x1f26:
case 0x1f27:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8108:
case 0x8109:
case 0x810a:
case 0x810b:
case 0x810c:
case 0x810d:
case 0x810e:
case 0x810f:
case 0x8308:
case 0x8309:
case 0x830a:
case 0x830b:
case 0x830c:
case 0x830d:
case 0x830e:
case 0x830f:
case 0x8508:
case 0x8509:
case 0x850a:
case 0x850b:
case 0x850c:
case 0x850d:
case 0x850e:
case 0x850f:
case 0x8708:
case 0x8709:
case 0x870a:
case 0x870b:
case 0x870c:
case 0x870d:
case 0x870e:
case 0x870f:
case 0x8908:
case 0x8909:
case 0x890a:
case 0x890b:
case 0x890c:
case 0x890d:
case 0x890e:
case 0x890f:
case 0x8b08:
case 0x8b09:
case 0x8b0a:
case 0x8b0b:
case 0x8b0c:
case 0x8b0d:
case 0x8b0e:
case 0x8b0f:
case 0x8d08:
case 0x8d09:
case 0x8d0a:
case 0x8d0b:
case 0x8d0c:
case 0x8d0d:
case 0x8d0e:
case 0x8d0f:
case 0x8f08:
case 0x8f09:
case 0x8f0a:
case 0x8f0b:
case 0x8f0c:
case 0x8f0d:
case 0x8f0e:
case 0x8f0f:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); SBCD(src, dst);
	}
	break;

case 0x9108:
case 0x9109:
case 0x910a:
case 0x910b:
case 0x910c:
case 0x910d:
case 0x910e:
case 0x910f:
case 0x9308:
case 0x9309:
case 0x930a:
case 0x930b:
case 0x930c:
case 0x930d:
case 0x930e:
case 0x930f:
case 0x9508:
case 0x9509:
case 0x950a:
case 0x950b:
case 0x950c:
case 0x950d:
case 0x950e:
case 0x950f:
case 0x9708:
case 0x9709:
case 0x970a:
case 0x970b:
case 0x970c:
case 0x970d:
case 0x970e:
case 0x970f:
case 0x9908:
case 0x9909:
case 0x990a:
case 0x990b:
case 0x990c:
case 0x990d:
case 0x990e:
case 0x990f:
case 0x9b08:
case 0x9b09:
case 0x9b0a:
case 0x9b0b:
case 0x9b0c:
case 0x9b0d:
case 0x9b0e:
case 0x9b0f:
case 0x9d08:
case 0x9d09:
case 0x9d0a:
case 0x9d0b:
case 0x9d0c:
case 0x9d0d:
case 0x9d0e:
case 0x9d0f:
case 0x9f08:
case 0x9f09:
case 0x9f0a:
case 0x9f0b:
case 0x9f0c:
case 0x9f0d:
case 0x9f0e:
case 0x9f0f:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); SUBX(src, dst);
	}
	break;

case 0xd020:
case 0xd021:
case 0xd022:
case 0xd023:
case 0xd024:
case 0xd025:
case 0xd026:
case 0xd027:
case 0xd220:
case 0xd221:
case 0xd222:
case 0xd223:
case 0xd224:
case 0xd225:
case 0xd226:
case 0xd227:
case 0xd420:
case 0xd421:
case 0xd422:
case 0xd423:
case 0xd424:
case 0xd425:
case 0xd426:
case 0xd427:
case 0xd620:
case 0xd621:
case 0xd622:
case 0xd623:
case 0xd624:
case 0xd625:
case 0xd626:
case 0xd627:
case 0xd820:
case 0xd821:
case 0xd822:
case 0xd823:
case 0xd824:
case 0xd825:
case 0xd826:
case 0xd827:
case 0xda20:
case 0xda21:
case 0xda22:
case 0xda23:
case 0xda24:
case 0xda25:
case 0xda26:
case 0xda27:
case 0xdc20:
case 0xdc21:
case 0xdc22:
case 0xdc23:
case 0xdc24:
case 0xdc25:
case 0xdc26:
case 0xdc27:
case 0xde20:
case 0xde21:
case 0xde22:
case 0xde23:
case 0xde24:
case 0xde25:
case 0xde26:
case 0xde27:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc020:
case 0xc021:
case 0xc022:
case 0xc023:
case 0xc024:
case 0xc025:
case 0xc026:
case 0xc027:
case 0xc220:
case 0xc221:
case 0xc222:
case 0xc223:
case 0xc224:
case 0xc225:
case 0xc226:
case 0xc227:
case 0xc420:
case 0xc421:
case 0xc422:
case 0xc423:
case 0xc424:
case 0xc425:
case 0xc426:
case 0xc427:
case 0xc620:
case 0xc621:
case 0xc622:
case 0xc623:
case 0xc624:
case 0xc625:
case 0xc626:
case 0xc627:
case 0xc820:
case 0xc821:
case 0xc822:
case 0xc823:
case 0xc824:
case 0xc825:
case 0xc826:
case 0xc827:
case 0xca20:
case 0xca21:
case 0xca22:
case 0xca23:
case 0xca24:
case 0xca25:
case 0xca26:
case 0xca27:
case 0xcc20:
case 0xcc21:
case 0xcc22:
case 0xcc23:
case 0xcc24:
case 0xcc25:
case 0xcc26:
case 0xcc27:
case 0xce20:
case 0xce21:
case 0xce22:
case 0xce23:
case 0xce24:
case 0xce25:
case 0xce26:
case 0xce27:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb020:
case 0xb021:
case 0xb022:
case 0xb023:
case 0xb024:
case 0xb025:
case 0xb026:
case 0xb027:
case 0xb220:
case 0xb221:
case 0xb222:
case 0xb223:
case 0xb224:
case 0xb225:
case 0xb226:
case 0xb227:
case 0xb420:
case 0xb421:
case 0xb422:
case 0xb423:
case 0xb424:
case 0xb425:
case 0xb426:
case 0xb427:
case 0xb620:
case 0xb621:
case 0xb622:
case 0xb623:
case 0xb624:
case 0xb625:
case 0xb626:
case 0xb627:
case 0xb820:
case 0xb821:
case 0xb822:
case 0xb823:
case 0xb824:
case 0xb825:
case 0xb826:
case 0xb827:
case 0xba20:
case 0xba21:
case 0xba22:
case 0xba23:
case 0xba24:
case 0xba25:
case 0xba26:
case 0xba27:
case 0xbc20:
case 0xbc21:
case 0xbc22:
case 0xbc23:
case 0xbc24:
case 0xbc25:
case 0xbc26:
case 0xbc27:
case 0xbe20:
case 0xbe21:
case 0xbe22:
case 0xbe23:
case 0xbe24:
case 0xbe25:
case 0xbe26:
case 0xbe27:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x1020:
case 0x1021:
case 0x1022:
case 0x1023:
case 0x1024:
case 0x1025:
case 0x1026:
case 0x1027:
case 0x1220:
case 0x1221:
case 0x1222:
case 0x1223:
case 0x1224:
case 0x1225:
case 0x1226:
case 0x1227:
case 0x1420:
case 0x1421:
case 0x1422:
case 0x1423:
case 0x1424:
case 0x1425:
case 0x1426:
case 0x1427:
case 0x1620:
case 0x1621:
case 0x1622:
case 0x1623:
case 0x1624:
case 0x1625:
case 0x1626:
case 0x1627:
case 0x1820:
case 0x1821:
case 0x1822:
case 0x1823:
case 0x1824:
case 0x1825:
case 0x1826:
case 0x1827:
case 0x1a20:
case 0x1a21:
case 0x1a22:
case 0x1a23:
case 0x1a24:
case 0x1a25:
case 0x1a26:
case 0x1a27:
case 0x1c20:
case 0x1c21:
case 0x1c22:
case 0x1c23:
case 0x1c24:
case 0x1c25:
case 0x1c26:
case 0x1c27:
case 0x1e20:
case 0x1e21:
case 0x1e22:
case 0x1e23:
case 0x1e24:
case 0x1e25:
case 0x1e26:
case 0x1e27:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8020:
case 0x8021:
case 0x8022:
case 0x8023:
case 0x8024:
case 0x8025:
case 0x8026:
case 0x8027:
case 0x8220:
case 0x8221:
case 0x8222:
case 0x8223:
case 0x8224:
case 0x8225:
case 0x8226:
case 0x8227:
case 0x8420:
case 0x8421:
case 0x8422:
case 0x8423:
case 0x8424:
case 0x8425:
case 0x8426:
case 0x8427:
case 0x8620:
case 0x8621:
case 0x8622:
case 0x8623:
case 0x8624:
case 0x8625:
case 0x8626:
case 0x8627:
case 0x8820:
case 0x8821:
case 0x8822:
case 0x8823:
case 0x8824:
case 0x8825:
case 0x8826:
case 0x8827:
case 0x8a20:
case 0x8a21:
case 0x8a22:
case 0x8a23:
case 0x8a24:
case 0x8a25:
case 0x8a26:
case 0x8a27:
case 0x8c20:
case 0x8c21:
case 0x8c22:
case 0x8c23:
case 0x8c24:
case 0x8c25:
case 0x8c26:
case 0x8c27:
case 0x8e20:
case 0x8e21:
case 0x8e22:
case 0x8e23:
case 0x8e24:
case 0x8e25:
case 0x8e26:
case 0x8e27:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x9020:
case 0x9021:
case 0x9022:
case 0x9023:
case 0x9024:
case 0x9025:
case 0x9026:
case 0x9027:
case 0x9220:
case 0x9221:
case 0x9222:
case 0x9223:
case 0x9224:
case 0x9225:
case 0x9226:
case 0x9227:
case 0x9420:
case 0x9421:
case 0x9422:
case 0x9423:
case 0x9424:
case 0x9425:
case 0x9426:
case 0x9427:
case 0x9620:
case 0x9621:
case 0x9622:
case 0x9623:
case 0x9624:
case 0x9625:
case 0x9626:
case 0x9627:
case 0x9820:
case 0x9821:
case 0x9822:
case 0x9823:
case 0x9824:
case 0x9825:
case 0x9826:
case 0x9827:
case 0x9a20:
case 0x9a21:
case 0x9a22:
case 0x9a23:
case 0x9a24:
case 0x9a25:
case 0x9a26:
case 0x9a27:
case 0x9c20:
case 0x9c21:
case 0x9c22:
case 0x9c23:
case 0x9c24:
case 0x9c25:
case 0x9c26:
case 0x9c27:
case 0x9e20:
case 0x9e21:
case 0x9e22:
case 0x9e23:
case 0x9e24:
case 0x9e25:
case 0x9e26:
case 0x9e27:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0160:
case 0x0161:
case 0x0162:
case 0x0163:
case 0x0164:
case 0x0165:
case 0x0166:
case 0x0167:
case 0x0360:
case 0x0361:
case 0x0362:
case 0x0363:
case 0x0364:
case 0x0365:
case 0x0366:
case 0x0367:
case 0x0560:
case 0x0561:
case 0x0562:
case 0x0563:
case 0x0564:
case 0x0565:
case 0x0566:
case 0x0567:
case 0x0760:
case 0x0761:
case 0x0762:
case 0x0763:
case 0x0764:
case 0x0765:
case 0x0766:
case 0x0767:
case 0x0960:
case 0x0961:
case 0x0962:
case 0x0963:
case 0x0964:
case 0x0965:
case 0x0966:
case 0x0967:
case 0x0b60:
case 0x0b61:
case 0x0b62:
case 0x0b63:
case 0x0b64:
case 0x0b65:
case 0x0b66:
case 0x0b67:
case 0x0d60:
case 0x0d61:
case 0x0d62:
case 0x0d63:
case 0x0d64:
case 0x0d65:
case 0x0d66:
case 0x0d67:
case 0x0f60:
case 0x0f61:
case 0x0f62:
case 0x0f63:
case 0x0f64:
case 0x0f65:
case 0x0f66:
case 0x0f67:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); BCHG(targ, D[instr_b11_b9]);
	}
	break;

case 0x01a0:
case 0x01a1:
case 0x01a2:
case 0x01a3:
case 0x01a4:
case 0x01a5:
case 0x01a6:
case 0x01a7:
case 0x03a0:
case 0x03a1:
case 0x03a2:
case 0x03a3:
case 0x03a4:
case 0x03a5:
case 0x03a6:
case 0x03a7:
case 0x05a0:
case 0x05a1:
case 0x05a2:
case 0x05a3:
case 0x05a4:
case 0x05a5:
case 0x05a6:
case 0x05a7:
case 0x07a0:
case 0x07a1:
case 0x07a2:
case 0x07a3:
case 0x07a4:
case 0x07a5:
case 0x07a6:
case 0x07a7:
case 0x09a0:
case 0x09a1:
case 0x09a2:
case 0x09a3:
case 0x09a4:
case 0x09a5:
case 0x09a6:
case 0x09a7:
case 0x0ba0:
case 0x0ba1:
case 0x0ba2:
case 0x0ba3:
case 0x0ba4:
case 0x0ba5:
case 0x0ba6:
case 0x0ba7:
case 0x0da0:
case 0x0da1:
case 0x0da2:
case 0x0da3:
case 0x0da4:
case 0x0da5:
case 0x0da6:
case 0x0da7:
case 0x0fa0:
case 0x0fa1:
case 0x0fa2:
case 0x0fa3:
case 0x0fa4:
case 0x0fa5:
case 0x0fa6:
case 0x0fa7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); BCLR(targ, D[instr_b11_b9]);
	}
	break;

case 0x01e0:
case 0x01e1:
case 0x01e2:
case 0x01e3:
case 0x01e4:
case 0x01e5:
case 0x01e6:
case 0x01e7:
case 0x03e0:
case 0x03e1:
case 0x03e2:
case 0x03e3:
case 0x03e4:
case 0x03e5:
case 0x03e6:
case 0x03e7:
case 0x05e0:
case 0x05e1:
case 0x05e2:
case 0x05e3:
case 0x05e4:
case 0x05e5:
case 0x05e6:
case 0x05e7:
case 0x07e0:
case 0x07e1:
case 0x07e2:
case 0x07e3:
case 0x07e4:
case 0x07e5:
case 0x07e6:
case 0x07e7:
case 0x09e0:
case 0x09e1:
case 0x09e2:
case 0x09e3:
case 0x09e4:
case 0x09e5:
case 0x09e6:
case 0x09e7:
case 0x0be0:
case 0x0be1:
case 0x0be2:
case 0x0be3:
case 0x0be4:
case 0x0be5:
case 0x0be6:
case 0x0be7:
case 0x0de0:
case 0x0de1:
case 0x0de2:
case 0x0de3:
case 0x0de4:
case 0x0de5:
case 0x0de6:
case 0x0de7:
case 0x0fe0:
case 0x0fe1:
case 0x0fe2:
case 0x0fe3:
case 0x0fe4:
case 0x0fe5:
case 0x0fe6:
case 0x0fe7:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); BSET(targ, D[instr_b11_b9]);
	}
	break;

case 0x0120:
case 0x0121:
case 0x0122:
case 0x0123:
case 0x0124:
case 0x0125:
case 0x0126:
case 0x0127:
case 0x0320:
case 0x0321:
case 0x0322:
case 0x0323:
case 0x0324:
case 0x0325:
case 0x0326:
case 0x0327:
case 0x0520:
case 0x0521:
case 0x0522:
case 0x0523:
case 0x0524:
case 0x0525:
case 0x0526:
case 0x0527:
case 0x0720:
case 0x0721:
case 0x0722:
case 0x0723:
case 0x0724:
case 0x0725:
case 0x0726:
case 0x0727:
case 0x0920:
case 0x0921:
case 0x0922:
case 0x0923:
case 0x0924:
case 0x0925:
case 0x0926:
case 0x0927:
case 0x0b20:
case 0x0b21:
case 0x0b22:
case 0x0b23:
case 0x0b24:
case 0x0b25:
case 0x0b26:
case 0x0b27:
case 0x0d20:
case 0x0d21:
case 0x0d22:
case 0x0d23:
case 0x0d24:
case 0x0d25:
case 0x0d26:
case 0x0d27:
case 0x0f20:
case 0x0f21:
case 0x0f22:
case 0x0f23:
case 0x0f24:
case 0x0f25:
case 0x0f26:
case 0x0f27:
	{
	 HAM<uint8, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0x4200:
case 0x4201:
case 0x4202:
case 0x4203:
case 0x4204:
case 0x4205:
case 0x4206:
case 0x4207:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); CLR(dst);
	}
	break;

case 0x4800:
case 0x4801:
case 0x4802:
case 0x4803:
case 0x4804:
case 0x4805:
case 0x4806:
case 0x4807:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); NBCD(dst);
	}
	break;

case 0x4400:
case 0x4401:
case 0x4402:
case 0x4403:
case 0x4404:
case 0x4405:
case 0x4406:
case 0x4407:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); NEG(dst);
	}
	break;

case 0x4000:
case 0x4001:
case 0x4002:
case 0x4003:
case 0x4004:
case 0x4005:
case 0x4006:
case 0x4007:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); NEGX(dst);
	}
	break;

case 0x4600:
case 0x4601:
case 0x4602:
case 0x4603:
case 0x4604:
case 0x4605:
case 0x4606:
case 0x4607:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); NOT(dst);
	}
	break;

case 0x50c0:
case 0x50c1:
case 0x50c2:
case 0x50c3:
case 0x50c4:
case 0x50c5:
case 0x50c6:
case 0x50c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x00>(dst);
	}
	break;

case 0x51c0:
case 0x51c1:
case 0x51c2:
case 0x51c3:
case 0x51c4:
case 0x51c5:
case 0x51c6:
case 0x51c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x01>(dst);
	}
	break;

case 0x52c0:
case 0x52c1:
case 0x52c2:
case 0x52c3:
case 0x52c4:
case 0x52c5:
case 0x52c6:
case 0x52c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x02>(dst);
	}
	break;

case 0x53c0:
case 0x53c1:
case 0x53c2:
case 0x53c3:
case 0x53c4:
case 0x53c5:
case 0x53c6:
case 0x53c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x03>(dst);
	}
	break;

case 0x54c0:
case 0x54c1:
case 0x54c2:
case 0x54c3:
case 0x54c4:
case 0x54c5:
case 0x54c6:
case 0x54c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x04>(dst);
	}
	break;

case 0x55c0:
case 0x55c1:
case 0x55c2:
case 0x55c3:
case 0x55c4:
case 0x55c5:
case 0x55c6:
case 0x55c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x05>(dst);
	}
	break;

case 0x56c0:
case 0x56c1:
case 0x56c2:
case 0x56c3:
case 0x56c4:
case 0x56c5:
case 0x56c6:
case 0x56c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x06>(dst);
	}
	break;

case 0x57c0:
case 0x57c1:
case 0x57c2:
case 0x57c3:
case 0x57c4:
case 0x57c5:
case 0x57c6:
case 0x57c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x07>(dst);
	}
	break;

case 0x58c0:
case 0x58c1:
case 0x58c2:
case 0x58c3:
case 0x58c4:
case 0x58c5:
case 0x58c6:
case 0x58c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x08>(dst);
	}
	break;

case 0x59c0:
case 0x59c1:
case 0x59c2:
case 0x59c3:
case 0x59c4:
case 0x59c5:
case 0x59c6:
case 0x59c7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x09>(dst);
	}
	break;

case 0x5ac0:
case 0x5ac1:
case 0x5ac2:
case 0x5ac3:
case 0x5ac4:
case 0x5ac5:
case 0x5ac6:
case 0x5ac7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x0a>(dst);
	}
	break;

case 0x5bc0:
case 0x5bc1:
case 0x5bc2:
case 0x5bc3:
case 0x5bc4:
case 0x5bc5:
case 0x5bc6:
case 0x5bc7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x0b>(dst);
	}
	break;

case 0x5cc0:
case 0x5cc1:
case 0x5cc2:
case 0x5cc3:
case 0x5cc4:
case 0x5cc5:
case 0x5cc6:
case 0x5cc7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x0c>(dst);
	}
	break;

case 0x5dc0:
case 0x5dc1:
case 0x5dc2:
case 0x5dc3:
case 0x5dc4:
case 0x5dc5:
case 0x5dc6:
case 0x5dc7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x0d>(dst);
	}
	break;

case 0x5ec0:
case 0x5ec1:
case 0x5ec2:
case 0x5ec3:
case 0x5ec4:
case 0x5ec5:
case 0x5ec6:
case 0x5ec7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x0e>(dst);
	}
	break;

case 0x5fc0:
case 0x5fc1:
case 0x5fc2:
case 0x5fc3:
case 0x5fc4:
case 0x5fc5:
case 0x5fc6:
case 0x5fc7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); Scc<0x0f>(dst);
	}
	break;

case 0x4ac0:
case 0x4ac1:
case 0x4ac2:
case 0x4ac3:
case 0x4ac4:
case 0x4ac5:
case 0x4ac6:
case 0x4ac7:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); TAS(dst);
	}
	break;

case 0x4a00:
case 0x4a01:
case 0x4a02:
case 0x4a03:
case 0x4a04:
case 0x4a05:
case 0x4a06:
case 0x4a07:
	{
	 HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); TST(dst);
	}
	break;

case 0xd139:
case 0xd339:
case 0xd539:
case 0xd739:
case 0xd939:
case 0xdb39:
case 0xdd39:
case 0xdf39:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_LONG> dst(this); ADD(src, dst);
	}
	break;

case 0xc139:
case 0xc339:
case 0xc539:
case 0xc739:
case 0xc939:
case 0xcb39:
case 0xcd39:
case 0xcf39:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_LONG> dst(this); AND(src, dst);
	}
	break;

case 0xb139:
case 0xb339:
case 0xb539:
case 0xb739:
case 0xb939:
case 0xbb39:
case 0xbd39:
case 0xbf39:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_LONG> dst(this); EOR(src, dst);
	}
	break;

case 0x8139:
case 0x8339:
case 0x8539:
case 0x8739:
case 0x8939:
case 0x8b39:
case 0x8d39:
case 0x8f39:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_LONG> dst(this); OR(src, dst);
	}
	break;

case 0x9139:
case 0x9339:
case 0x9539:
case 0x9739:
case 0x9939:
case 0x9b39:
case 0x9d39:
case 0x9f39:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_LONG> dst(this); SUB(src, dst);
	}
	break;

case 0xd138:
case 0xd338:
case 0xd538:
case 0xd738:
case 0xd938:
case 0xdb38:
case 0xdd38:
case 0xdf38:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_SHORT> dst(this); ADD(src, dst);
	}
	break;

case 0xc138:
case 0xc338:
case 0xc538:
case 0xc738:
case 0xc938:
case 0xcb38:
case 0xcd38:
case 0xcf38:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_SHORT> dst(this); AND(src, dst);
	}
	break;

case 0xb138:
case 0xb338:
case 0xb538:
case 0xb738:
case 0xb938:
case 0xbb38:
case 0xbd38:
case 0xbf38:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_SHORT> dst(this); EOR(src, dst);
	}
	break;

case 0x8138:
case 0x8338:
case 0x8538:
case 0x8738:
case 0x8938:
case 0x8b38:
case 0x8d38:
case 0x8f38:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_SHORT> dst(this); OR(src, dst);
	}
	break;

case 0x9138:
case 0x9338:
case 0x9538:
case 0x9738:
case 0x9938:
case 0x9b38:
case 0x9d38:
case 0x9f38:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ABS_SHORT> dst(this); SUB(src, dst);
	}
	break;

case 0xd110:
case 0xd111:
case 0xd112:
case 0xd113:
case 0xd114:
case 0xd115:
case 0xd116:
case 0xd117:
case 0xd310:
case 0xd311:
case 0xd312:
case 0xd313:
case 0xd314:
case 0xd315:
case 0xd316:
case 0xd317:
case 0xd510:
case 0xd511:
case 0xd512:
case 0xd513:
case 0xd514:
case 0xd515:
case 0xd516:
case 0xd517:
case 0xd710:
case 0xd711:
case 0xd712:
case 0xd713:
case 0xd714:
case 0xd715:
case 0xd716:
case 0xd717:
case 0xd910:
case 0xd911:
case 0xd912:
case 0xd913:
case 0xd914:
case 0xd915:
case 0xd916:
case 0xd917:
case 0xdb10:
case 0xdb11:
case 0xdb12:
case 0xdb13:
case 0xdb14:
case 0xdb15:
case 0xdb16:
case 0xdb17:
case 0xdd10:
case 0xdd11:
case 0xdd12:
case 0xdd13:
case 0xdd14:
case 0xdd15:
case 0xdd16:
case 0xdd17:
case 0xdf10:
case 0xdf11:
case 0xdf12:
case 0xdf13:
case 0xdf14:
case 0xdf15:
case 0xdf16:
case 0xdf17:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc110:
case 0xc111:
case 0xc112:
case 0xc113:
case 0xc114:
case 0xc115:
case 0xc116:
case 0xc117:
case 0xc310:
case 0xc311:
case 0xc312:
case 0xc313:
case 0xc314:
case 0xc315:
case 0xc316:
case 0xc317:
case 0xc510:
case 0xc511:
case 0xc512:
case 0xc513:
case 0xc514:
case 0xc515:
case 0xc516:
case 0xc517:
case 0xc710:
case 0xc711:
case 0xc712:
case 0xc713:
case 0xc714:
case 0xc715:
case 0xc716:
case 0xc717:
case 0xc910:
case 0xc911:
case 0xc912:
case 0xc913:
case 0xc914:
case 0xc915:
case 0xc916:
case 0xc917:
case 0xcb10:
case 0xcb11:
case 0xcb12:
case 0xcb13:
case 0xcb14:
case 0xcb15:
case 0xcb16:
case 0xcb17:
case 0xcd10:
case 0xcd11:
case 0xcd12:
case 0xcd13:
case 0xcd14:
case 0xcd15:
case 0xcd16:
case 0xcd17:
case 0xcf10:
case 0xcf11:
case 0xcf12:
case 0xcf13:
case 0xcf14:
case 0xcf15:
case 0xcf16:
case 0xcf17:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb110:
case 0xb111:
case 0xb112:
case 0xb113:
case 0xb114:
case 0xb115:
case 0xb116:
case 0xb117:
case 0xb310:
case 0xb311:
case 0xb312:
case 0xb313:
case 0xb314:
case 0xb315:
case 0xb316:
case 0xb317:
case 0xb510:
case 0xb511:
case 0xb512:
case 0xb513:
case 0xb514:
case 0xb515:
case 0xb516:
case 0xb517:
case 0xb710:
case 0xb711:
case 0xb712:
case 0xb713:
case 0xb714:
case 0xb715:
case 0xb716:
case 0xb717:
case 0xb910:
case 0xb911:
case 0xb912:
case 0xb913:
case 0xb914:
case 0xb915:
case 0xb916:
case 0xb917:
case 0xbb10:
case 0xbb11:
case 0xbb12:
case 0xbb13:
case 0xbb14:
case 0xbb15:
case 0xbb16:
case 0xbb17:
case 0xbd10:
case 0xbd11:
case 0xbd12:
case 0xbd13:
case 0xbd14:
case 0xbd15:
case 0xbd16:
case 0xbd17:
case 0xbf10:
case 0xbf11:
case 0xbf12:
case 0xbf13:
case 0xbf14:
case 0xbf15:
case 0xbf16:
case 0xbf17:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8110:
case 0x8111:
case 0x8112:
case 0x8113:
case 0x8114:
case 0x8115:
case 0x8116:
case 0x8117:
case 0x8310:
case 0x8311:
case 0x8312:
case 0x8313:
case 0x8314:
case 0x8315:
case 0x8316:
case 0x8317:
case 0x8510:
case 0x8511:
case 0x8512:
case 0x8513:
case 0x8514:
case 0x8515:
case 0x8516:
case 0x8517:
case 0x8710:
case 0x8711:
case 0x8712:
case 0x8713:
case 0x8714:
case 0x8715:
case 0x8716:
case 0x8717:
case 0x8910:
case 0x8911:
case 0x8912:
case 0x8913:
case 0x8914:
case 0x8915:
case 0x8916:
case 0x8917:
case 0x8b10:
case 0x8b11:
case 0x8b12:
case 0x8b13:
case 0x8b14:
case 0x8b15:
case 0x8b16:
case 0x8b17:
case 0x8d10:
case 0x8d11:
case 0x8d12:
case 0x8d13:
case 0x8d14:
case 0x8d15:
case 0x8d16:
case 0x8d17:
case 0x8f10:
case 0x8f11:
case 0x8f12:
case 0x8f13:
case 0x8f14:
case 0x8f15:
case 0x8f16:
case 0x8f17:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9110:
case 0x9111:
case 0x9112:
case 0x9113:
case 0x9114:
case 0x9115:
case 0x9116:
case 0x9117:
case 0x9310:
case 0x9311:
case 0x9312:
case 0x9313:
case 0x9314:
case 0x9315:
case 0x9316:
case 0x9317:
case 0x9510:
case 0x9511:
case 0x9512:
case 0x9513:
case 0x9514:
case 0x9515:
case 0x9516:
case 0x9517:
case 0x9710:
case 0x9711:
case 0x9712:
case 0x9713:
case 0x9714:
case 0x9715:
case 0x9716:
case 0x9717:
case 0x9910:
case 0x9911:
case 0x9912:
case 0x9913:
case 0x9914:
case 0x9915:
case 0x9916:
case 0x9917:
case 0x9b10:
case 0x9b11:
case 0x9b12:
case 0x9b13:
case 0x9b14:
case 0x9b15:
case 0x9b16:
case 0x9b17:
case 0x9d10:
case 0x9d11:
case 0x9d12:
case 0x9d13:
case 0x9d14:
case 0x9d15:
case 0x9d16:
case 0x9d17:
case 0x9f10:
case 0x9f11:
case 0x9f12:
case 0x9f13:
case 0x9f14:
case 0x9f15:
case 0x9f16:
case 0x9f17:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd128:
case 0xd129:
case 0xd12a:
case 0xd12b:
case 0xd12c:
case 0xd12d:
case 0xd12e:
case 0xd12f:
case 0xd328:
case 0xd329:
case 0xd32a:
case 0xd32b:
case 0xd32c:
case 0xd32d:
case 0xd32e:
case 0xd32f:
case 0xd528:
case 0xd529:
case 0xd52a:
case 0xd52b:
case 0xd52c:
case 0xd52d:
case 0xd52e:
case 0xd52f:
case 0xd728:
case 0xd729:
case 0xd72a:
case 0xd72b:
case 0xd72c:
case 0xd72d:
case 0xd72e:
case 0xd72f:
case 0xd928:
case 0xd929:
case 0xd92a:
case 0xd92b:
case 0xd92c:
case 0xd92d:
case 0xd92e:
case 0xd92f:
case 0xdb28:
case 0xdb29:
case 0xdb2a:
case 0xdb2b:
case 0xdb2c:
case 0xdb2d:
case 0xdb2e:
case 0xdb2f:
case 0xdd28:
case 0xdd29:
case 0xdd2a:
case 0xdd2b:
case 0xdd2c:
case 0xdd2d:
case 0xdd2e:
case 0xdd2f:
case 0xdf28:
case 0xdf29:
case 0xdf2a:
case 0xdf2b:
case 0xdf2c:
case 0xdf2d:
case 0xdf2e:
case 0xdf2f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc128:
case 0xc129:
case 0xc12a:
case 0xc12b:
case 0xc12c:
case 0xc12d:
case 0xc12e:
case 0xc12f:
case 0xc328:
case 0xc329:
case 0xc32a:
case 0xc32b:
case 0xc32c:
case 0xc32d:
case 0xc32e:
case 0xc32f:
case 0xc528:
case 0xc529:
case 0xc52a:
case 0xc52b:
case 0xc52c:
case 0xc52d:
case 0xc52e:
case 0xc52f:
case 0xc728:
case 0xc729:
case 0xc72a:
case 0xc72b:
case 0xc72c:
case 0xc72d:
case 0xc72e:
case 0xc72f:
case 0xc928:
case 0xc929:
case 0xc92a:
case 0xc92b:
case 0xc92c:
case 0xc92d:
case 0xc92e:
case 0xc92f:
case 0xcb28:
case 0xcb29:
case 0xcb2a:
case 0xcb2b:
case 0xcb2c:
case 0xcb2d:
case 0xcb2e:
case 0xcb2f:
case 0xcd28:
case 0xcd29:
case 0xcd2a:
case 0xcd2b:
case 0xcd2c:
case 0xcd2d:
case 0xcd2e:
case 0xcd2f:
case 0xcf28:
case 0xcf29:
case 0xcf2a:
case 0xcf2b:
case 0xcf2c:
case 0xcf2d:
case 0xcf2e:
case 0xcf2f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb128:
case 0xb129:
case 0xb12a:
case 0xb12b:
case 0xb12c:
case 0xb12d:
case 0xb12e:
case 0xb12f:
case 0xb328:
case 0xb329:
case 0xb32a:
case 0xb32b:
case 0xb32c:
case 0xb32d:
case 0xb32e:
case 0xb32f:
case 0xb528:
case 0xb529:
case 0xb52a:
case 0xb52b:
case 0xb52c:
case 0xb52d:
case 0xb52e:
case 0xb52f:
case 0xb728:
case 0xb729:
case 0xb72a:
case 0xb72b:
case 0xb72c:
case 0xb72d:
case 0xb72e:
case 0xb72f:
case 0xb928:
case 0xb929:
case 0xb92a:
case 0xb92b:
case 0xb92c:
case 0xb92d:
case 0xb92e:
case 0xb92f:
case 0xbb28:
case 0xbb29:
case 0xbb2a:
case 0xbb2b:
case 0xbb2c:
case 0xbb2d:
case 0xbb2e:
case 0xbb2f:
case 0xbd28:
case 0xbd29:
case 0xbd2a:
case 0xbd2b:
case 0xbd2c:
case 0xbd2d:
case 0xbd2e:
case 0xbd2f:
case 0xbf28:
case 0xbf29:
case 0xbf2a:
case 0xbf2b:
case 0xbf2c:
case 0xbf2d:
case 0xbf2e:
case 0xbf2f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8128:
case 0x8129:
case 0x812a:
case 0x812b:
case 0x812c:
case 0x812d:
case 0x812e:
case 0x812f:
case 0x8328:
case 0x8329:
case 0x832a:
case 0x832b:
case 0x832c:
case 0x832d:
case 0x832e:
case 0x832f:
case 0x8528:
case 0x8529:
case 0x852a:
case 0x852b:
case 0x852c:
case 0x852d:
case 0x852e:
case 0x852f:
case 0x8728:
case 0x8729:
case 0x872a:
case 0x872b:
case 0x872c:
case 0x872d:
case 0x872e:
case 0x872f:
case 0x8928:
case 0x8929:
case 0x892a:
case 0x892b:
case 0x892c:
case 0x892d:
case 0x892e:
case 0x892f:
case 0x8b28:
case 0x8b29:
case 0x8b2a:
case 0x8b2b:
case 0x8b2c:
case 0x8b2d:
case 0x8b2e:
case 0x8b2f:
case 0x8d28:
case 0x8d29:
case 0x8d2a:
case 0x8d2b:
case 0x8d2c:
case 0x8d2d:
case 0x8d2e:
case 0x8d2f:
case 0x8f28:
case 0x8f29:
case 0x8f2a:
case 0x8f2b:
case 0x8f2c:
case 0x8f2d:
case 0x8f2e:
case 0x8f2f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9128:
case 0x9129:
case 0x912a:
case 0x912b:
case 0x912c:
case 0x912d:
case 0x912e:
case 0x912f:
case 0x9328:
case 0x9329:
case 0x932a:
case 0x932b:
case 0x932c:
case 0x932d:
case 0x932e:
case 0x932f:
case 0x9528:
case 0x9529:
case 0x952a:
case 0x952b:
case 0x952c:
case 0x952d:
case 0x952e:
case 0x952f:
case 0x9728:
case 0x9729:
case 0x972a:
case 0x972b:
case 0x972c:
case 0x972d:
case 0x972e:
case 0x972f:
case 0x9928:
case 0x9929:
case 0x992a:
case 0x992b:
case 0x992c:
case 0x992d:
case 0x992e:
case 0x992f:
case 0x9b28:
case 0x9b29:
case 0x9b2a:
case 0x9b2b:
case 0x9b2c:
case 0x9b2d:
case 0x9b2e:
case 0x9b2f:
case 0x9d28:
case 0x9d29:
case 0x9d2a:
case 0x9d2b:
case 0x9d2c:
case 0x9d2d:
case 0x9d2e:
case 0x9d2f:
case 0x9f28:
case 0x9f29:
case 0x9f2a:
case 0x9f2b:
case 0x9f2c:
case 0x9f2d:
case 0x9f2e:
case 0x9f2f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd130:
case 0xd131:
case 0xd132:
case 0xd133:
case 0xd134:
case 0xd135:
case 0xd136:
case 0xd137:
case 0xd330:
case 0xd331:
case 0xd332:
case 0xd333:
case 0xd334:
case 0xd335:
case 0xd336:
case 0xd337:
case 0xd530:
case 0xd531:
case 0xd532:
case 0xd533:
case 0xd534:
case 0xd535:
case 0xd536:
case 0xd537:
case 0xd730:
case 0xd731:
case 0xd732:
case 0xd733:
case 0xd734:
case 0xd735:
case 0xd736:
case 0xd737:
case 0xd930:
case 0xd931:
case 0xd932:
case 0xd933:
case 0xd934:
case 0xd935:
case 0xd936:
case 0xd937:
case 0xdb30:
case 0xdb31:
case 0xdb32:
case 0xdb33:
case 0xdb34:
case 0xdb35:
case 0xdb36:
case 0xdb37:
case 0xdd30:
case 0xdd31:
case 0xdd32:
case 0xdd33:
case 0xdd34:
case 0xdd35:
case 0xdd36:
case 0xdd37:
case 0xdf30:
case 0xdf31:
case 0xdf32:
case 0xdf33:
case 0xdf34:
case 0xdf35:
case 0xdf36:
case 0xdf37:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc130:
case 0xc131:
case 0xc132:
case 0xc133:
case 0xc134:
case 0xc135:
case 0xc136:
case 0xc137:
case 0xc330:
case 0xc331:
case 0xc332:
case 0xc333:
case 0xc334:
case 0xc335:
case 0xc336:
case 0xc337:
case 0xc530:
case 0xc531:
case 0xc532:
case 0xc533:
case 0xc534:
case 0xc535:
case 0xc536:
case 0xc537:
case 0xc730:
case 0xc731:
case 0xc732:
case 0xc733:
case 0xc734:
case 0xc735:
case 0xc736:
case 0xc737:
case 0xc930:
case 0xc931:
case 0xc932:
case 0xc933:
case 0xc934:
case 0xc935:
case 0xc936:
case 0xc937:
case 0xcb30:
case 0xcb31:
case 0xcb32:
case 0xcb33:
case 0xcb34:
case 0xcb35:
case 0xcb36:
case 0xcb37:
case 0xcd30:
case 0xcd31:
case 0xcd32:
case 0xcd33:
case 0xcd34:
case 0xcd35:
case 0xcd36:
case 0xcd37:
case 0xcf30:
case 0xcf31:
case 0xcf32:
case 0xcf33:
case 0xcf34:
case 0xcf35:
case 0xcf36:
case 0xcf37:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb130:
case 0xb131:
case 0xb132:
case 0xb133:
case 0xb134:
case 0xb135:
case 0xb136:
case 0xb137:
case 0xb330:
case 0xb331:
case 0xb332:
case 0xb333:
case 0xb334:
case 0xb335:
case 0xb336:
case 0xb337:
case 0xb530:
case 0xb531:
case 0xb532:
case 0xb533:
case 0xb534:
case 0xb535:
case 0xb536:
case 0xb537:
case 0xb730:
case 0xb731:
case 0xb732:
case 0xb733:
case 0xb734:
case 0xb735:
case 0xb736:
case 0xb737:
case 0xb930:
case 0xb931:
case 0xb932:
case 0xb933:
case 0xb934:
case 0xb935:
case 0xb936:
case 0xb937:
case 0xbb30:
case 0xbb31:
case 0xbb32:
case 0xbb33:
case 0xbb34:
case 0xbb35:
case 0xbb36:
case 0xbb37:
case 0xbd30:
case 0xbd31:
case 0xbd32:
case 0xbd33:
case 0xbd34:
case 0xbd35:
case 0xbd36:
case 0xbd37:
case 0xbf30:
case 0xbf31:
case 0xbf32:
case 0xbf33:
case 0xbf34:
case 0xbf35:
case 0xbf36:
case 0xbf37:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8130:
case 0x8131:
case 0x8132:
case 0x8133:
case 0x8134:
case 0x8135:
case 0x8136:
case 0x8137:
case 0x8330:
case 0x8331:
case 0x8332:
case 0x8333:
case 0x8334:
case 0x8335:
case 0x8336:
case 0x8337:
case 0x8530:
case 0x8531:
case 0x8532:
case 0x8533:
case 0x8534:
case 0x8535:
case 0x8536:
case 0x8537:
case 0x8730:
case 0x8731:
case 0x8732:
case 0x8733:
case 0x8734:
case 0x8735:
case 0x8736:
case 0x8737:
case 0x8930:
case 0x8931:
case 0x8932:
case 0x8933:
case 0x8934:
case 0x8935:
case 0x8936:
case 0x8937:
case 0x8b30:
case 0x8b31:
case 0x8b32:
case 0x8b33:
case 0x8b34:
case 0x8b35:
case 0x8b36:
case 0x8b37:
case 0x8d30:
case 0x8d31:
case 0x8d32:
case 0x8d33:
case 0x8d34:
case 0x8d35:
case 0x8d36:
case 0x8d37:
case 0x8f30:
case 0x8f31:
case 0x8f32:
case 0x8f33:
case 0x8f34:
case 0x8f35:
case 0x8f36:
case 0x8f37:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9130:
case 0x9131:
case 0x9132:
case 0x9133:
case 0x9134:
case 0x9135:
case 0x9136:
case 0x9137:
case 0x9330:
case 0x9331:
case 0x9332:
case 0x9333:
case 0x9334:
case 0x9335:
case 0x9336:
case 0x9337:
case 0x9530:
case 0x9531:
case 0x9532:
case 0x9533:
case 0x9534:
case 0x9535:
case 0x9536:
case 0x9537:
case 0x9730:
case 0x9731:
case 0x9732:
case 0x9733:
case 0x9734:
case 0x9735:
case 0x9736:
case 0x9737:
case 0x9930:
case 0x9931:
case 0x9932:
case 0x9933:
case 0x9934:
case 0x9935:
case 0x9936:
case 0x9937:
case 0x9b30:
case 0x9b31:
case 0x9b32:
case 0x9b33:
case 0x9b34:
case 0x9b35:
case 0x9b36:
case 0x9b37:
case 0x9d30:
case 0x9d31:
case 0x9d32:
case 0x9d33:
case 0x9d34:
case 0x9d35:
case 0x9d36:
case 0x9d37:
case 0x9f30:
case 0x9f31:
case 0x9f32:
case 0x9f33:
case 0x9f34:
case 0x9f35:
case 0x9f36:
case 0x9f37:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd118:
case 0xd119:
case 0xd11a:
case 0xd11b:
case 0xd11c:
case 0xd11d:
case 0xd11e:
case 0xd11f:
case 0xd318:
case 0xd319:
case 0xd31a:
case 0xd31b:
case 0xd31c:
case 0xd31d:
case 0xd31e:
case 0xd31f:
case 0xd518:
case 0xd519:
case 0xd51a:
case 0xd51b:
case 0xd51c:
case 0xd51d:
case 0xd51e:
case 0xd51f:
case 0xd718:
case 0xd719:
case 0xd71a:
case 0xd71b:
case 0xd71c:
case 0xd71d:
case 0xd71e:
case 0xd71f:
case 0xd918:
case 0xd919:
case 0xd91a:
case 0xd91b:
case 0xd91c:
case 0xd91d:
case 0xd91e:
case 0xd91f:
case 0xdb18:
case 0xdb19:
case 0xdb1a:
case 0xdb1b:
case 0xdb1c:
case 0xdb1d:
case 0xdb1e:
case 0xdb1f:
case 0xdd18:
case 0xdd19:
case 0xdd1a:
case 0xdd1b:
case 0xdd1c:
case 0xdd1d:
case 0xdd1e:
case 0xdd1f:
case 0xdf18:
case 0xdf19:
case 0xdf1a:
case 0xdf1b:
case 0xdf1c:
case 0xdf1d:
case 0xdf1e:
case 0xdf1f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc118:
case 0xc119:
case 0xc11a:
case 0xc11b:
case 0xc11c:
case 0xc11d:
case 0xc11e:
case 0xc11f:
case 0xc318:
case 0xc319:
case 0xc31a:
case 0xc31b:
case 0xc31c:
case 0xc31d:
case 0xc31e:
case 0xc31f:
case 0xc518:
case 0xc519:
case 0xc51a:
case 0xc51b:
case 0xc51c:
case 0xc51d:
case 0xc51e:
case 0xc51f:
case 0xc718:
case 0xc719:
case 0xc71a:
case 0xc71b:
case 0xc71c:
case 0xc71d:
case 0xc71e:
case 0xc71f:
case 0xc918:
case 0xc919:
case 0xc91a:
case 0xc91b:
case 0xc91c:
case 0xc91d:
case 0xc91e:
case 0xc91f:
case 0xcb18:
case 0xcb19:
case 0xcb1a:
case 0xcb1b:
case 0xcb1c:
case 0xcb1d:
case 0xcb1e:
case 0xcb1f:
case 0xcd18:
case 0xcd19:
case 0xcd1a:
case 0xcd1b:
case 0xcd1c:
case 0xcd1d:
case 0xcd1e:
case 0xcd1f:
case 0xcf18:
case 0xcf19:
case 0xcf1a:
case 0xcf1b:
case 0xcf1c:
case 0xcf1d:
case 0xcf1e:
case 0xcf1f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb118:
case 0xb119:
case 0xb11a:
case 0xb11b:
case 0xb11c:
case 0xb11d:
case 0xb11e:
case 0xb11f:
case 0xb318:
case 0xb319:
case 0xb31a:
case 0xb31b:
case 0xb31c:
case 0xb31d:
case 0xb31e:
case 0xb31f:
case 0xb518:
case 0xb519:
case 0xb51a:
case 0xb51b:
case 0xb51c:
case 0xb51d:
case 0xb51e:
case 0xb51f:
case 0xb718:
case 0xb719:
case 0xb71a:
case 0xb71b:
case 0xb71c:
case 0xb71d:
case 0xb71e:
case 0xb71f:
case 0xb918:
case 0xb919:
case 0xb91a:
case 0xb91b:
case 0xb91c:
case 0xb91d:
case 0xb91e:
case 0xb91f:
case 0xbb18:
case 0xbb19:
case 0xbb1a:
case 0xbb1b:
case 0xbb1c:
case 0xbb1d:
case 0xbb1e:
case 0xbb1f:
case 0xbd18:
case 0xbd19:
case 0xbd1a:
case 0xbd1b:
case 0xbd1c:
case 0xbd1d:
case 0xbd1e:
case 0xbd1f:
case 0xbf18:
case 0xbf19:
case 0xbf1a:
case 0xbf1b:
case 0xbf1c:
case 0xbf1d:
case 0xbf1e:
case 0xbf1f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8118:
case 0x8119:
case 0x811a:
case 0x811b:
case 0x811c:
case 0x811d:
case 0x811e:
case 0x811f:
case 0x8318:
case 0x8319:
case 0x831a:
case 0x831b:
case 0x831c:
case 0x831d:
case 0x831e:
case 0x831f:
case 0x8518:
case 0x8519:
case 0x851a:
case 0x851b:
case 0x851c:
case 0x851d:
case 0x851e:
case 0x851f:
case 0x8718:
case 0x8719:
case 0x871a:
case 0x871b:
case 0x871c:
case 0x871d:
case 0x871e:
case 0x871f:
case 0x8918:
case 0x8919:
case 0x891a:
case 0x891b:
case 0x891c:
case 0x891d:
case 0x891e:
case 0x891f:
case 0x8b18:
case 0x8b19:
case 0x8b1a:
case 0x8b1b:
case 0x8b1c:
case 0x8b1d:
case 0x8b1e:
case 0x8b1f:
case 0x8d18:
case 0x8d19:
case 0x8d1a:
case 0x8d1b:
case 0x8d1c:
case 0x8d1d:
case 0x8d1e:
case 0x8d1f:
case 0x8f18:
case 0x8f19:
case 0x8f1a:
case 0x8f1b:
case 0x8f1c:
case 0x8f1d:
case 0x8f1e:
case 0x8f1f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9118:
case 0x9119:
case 0x911a:
case 0x911b:
case 0x911c:
case 0x911d:
case 0x911e:
case 0x911f:
case 0x9318:
case 0x9319:
case 0x931a:
case 0x931b:
case 0x931c:
case 0x931d:
case 0x931e:
case 0x931f:
case 0x9518:
case 0x9519:
case 0x951a:
case 0x951b:
case 0x951c:
case 0x951d:
case 0x951e:
case 0x951f:
case 0x9718:
case 0x9719:
case 0x971a:
case 0x971b:
case 0x971c:
case 0x971d:
case 0x971e:
case 0x971f:
case 0x9918:
case 0x9919:
case 0x991a:
case 0x991b:
case 0x991c:
case 0x991d:
case 0x991e:
case 0x991f:
case 0x9b18:
case 0x9b19:
case 0x9b1a:
case 0x9b1b:
case 0x9b1c:
case 0x9b1d:
case 0x9b1e:
case 0x9b1f:
case 0x9d18:
case 0x9d19:
case 0x9d1a:
case 0x9d1b:
case 0x9d1c:
case 0x9d1d:
case 0x9d1e:
case 0x9d1f:
case 0x9f18:
case 0x9f19:
case 0x9f1a:
case 0x9f1b:
case 0x9f1c:
case 0x9f1d:
case 0x9f1e:
case 0x9f1f:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd120:
case 0xd121:
case 0xd122:
case 0xd123:
case 0xd124:
case 0xd125:
case 0xd126:
case 0xd127:
case 0xd320:
case 0xd321:
case 0xd322:
case 0xd323:
case 0xd324:
case 0xd325:
case 0xd326:
case 0xd327:
case 0xd520:
case 0xd521:
case 0xd522:
case 0xd523:
case 0xd524:
case 0xd525:
case 0xd526:
case 0xd527:
case 0xd720:
case 0xd721:
case 0xd722:
case 0xd723:
case 0xd724:
case 0xd725:
case 0xd726:
case 0xd727:
case 0xd920:
case 0xd921:
case 0xd922:
case 0xd923:
case 0xd924:
case 0xd925:
case 0xd926:
case 0xd927:
case 0xdb20:
case 0xdb21:
case 0xdb22:
case 0xdb23:
case 0xdb24:
case 0xdb25:
case 0xdb26:
case 0xdb27:
case 0xdd20:
case 0xdd21:
case 0xdd22:
case 0xdd23:
case 0xdd24:
case 0xdd25:
case 0xdd26:
case 0xdd27:
case 0xdf20:
case 0xdf21:
case 0xdf22:
case 0xdf23:
case 0xdf24:
case 0xdf25:
case 0xdf26:
case 0xdf27:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0xc120:
case 0xc121:
case 0xc122:
case 0xc123:
case 0xc124:
case 0xc125:
case 0xc126:
case 0xc127:
case 0xc320:
case 0xc321:
case 0xc322:
case 0xc323:
case 0xc324:
case 0xc325:
case 0xc326:
case 0xc327:
case 0xc520:
case 0xc521:
case 0xc522:
case 0xc523:
case 0xc524:
case 0xc525:
case 0xc526:
case 0xc527:
case 0xc720:
case 0xc721:
case 0xc722:
case 0xc723:
case 0xc724:
case 0xc725:
case 0xc726:
case 0xc727:
case 0xc920:
case 0xc921:
case 0xc922:
case 0xc923:
case 0xc924:
case 0xc925:
case 0xc926:
case 0xc927:
case 0xcb20:
case 0xcb21:
case 0xcb22:
case 0xcb23:
case 0xcb24:
case 0xcb25:
case 0xcb26:
case 0xcb27:
case 0xcd20:
case 0xcd21:
case 0xcd22:
case 0xcd23:
case 0xcd24:
case 0xcd25:
case 0xcd26:
case 0xcd27:
case 0xcf20:
case 0xcf21:
case 0xcf22:
case 0xcf23:
case 0xcf24:
case 0xcf25:
case 0xcf26:
case 0xcf27:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0xb120:
case 0xb121:
case 0xb122:
case 0xb123:
case 0xb124:
case 0xb125:
case 0xb126:
case 0xb127:
case 0xb320:
case 0xb321:
case 0xb322:
case 0xb323:
case 0xb324:
case 0xb325:
case 0xb326:
case 0xb327:
case 0xb520:
case 0xb521:
case 0xb522:
case 0xb523:
case 0xb524:
case 0xb525:
case 0xb526:
case 0xb527:
case 0xb720:
case 0xb721:
case 0xb722:
case 0xb723:
case 0xb724:
case 0xb725:
case 0xb726:
case 0xb727:
case 0xb920:
case 0xb921:
case 0xb922:
case 0xb923:
case 0xb924:
case 0xb925:
case 0xb926:
case 0xb927:
case 0xbb20:
case 0xbb21:
case 0xbb22:
case 0xbb23:
case 0xbb24:
case 0xbb25:
case 0xbb26:
case 0xbb27:
case 0xbd20:
case 0xbd21:
case 0xbd22:
case 0xbd23:
case 0xbd24:
case 0xbd25:
case 0xbd26:
case 0xbd27:
case 0xbf20:
case 0xbf21:
case 0xbf22:
case 0xbf23:
case 0xbf24:
case 0xbf25:
case 0xbf26:
case 0xbf27:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x8120:
case 0x8121:
case 0x8122:
case 0x8123:
case 0x8124:
case 0x8125:
case 0x8126:
case 0x8127:
case 0x8320:
case 0x8321:
case 0x8322:
case 0x8323:
case 0x8324:
case 0x8325:
case 0x8326:
case 0x8327:
case 0x8520:
case 0x8521:
case 0x8522:
case 0x8523:
case 0x8524:
case 0x8525:
case 0x8526:
case 0x8527:
case 0x8720:
case 0x8721:
case 0x8722:
case 0x8723:
case 0x8724:
case 0x8725:
case 0x8726:
case 0x8727:
case 0x8920:
case 0x8921:
case 0x8922:
case 0x8923:
case 0x8924:
case 0x8925:
case 0x8926:
case 0x8927:
case 0x8b20:
case 0x8b21:
case 0x8b22:
case 0x8b23:
case 0x8b24:
case 0x8b25:
case 0x8b26:
case 0x8b27:
case 0x8d20:
case 0x8d21:
case 0x8d22:
case 0x8d23:
case 0x8d24:
case 0x8d25:
case 0x8d26:
case 0x8d27:
case 0x8f20:
case 0x8f21:
case 0x8f22:
case 0x8f23:
case 0x8f24:
case 0x8f25:
case 0x8f26:
case 0x8f27:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x9120:
case 0x9121:
case 0x9122:
case 0x9123:
case 0x9124:
case 0x9125:
case 0x9126:
case 0x9127:
case 0x9320:
case 0x9321:
case 0x9322:
case 0x9323:
case 0x9324:
case 0x9325:
case 0x9326:
case 0x9327:
case 0x9520:
case 0x9521:
case 0x9522:
case 0x9523:
case 0x9524:
case 0x9525:
case 0x9526:
case 0x9527:
case 0x9720:
case 0x9721:
case 0x9722:
case 0x9723:
case 0x9724:
case 0x9725:
case 0x9726:
case 0x9727:
case 0x9920:
case 0x9921:
case 0x9922:
case 0x9923:
case 0x9924:
case 0x9925:
case 0x9926:
case 0x9927:
case 0x9b20:
case 0x9b21:
case 0x9b22:
case 0x9b23:
case 0x9b24:
case 0x9b25:
case 0x9b26:
case 0x9b27:
case 0x9d20:
case 0x9d21:
case 0x9d22:
case 0x9d23:
case 0x9d24:
case 0x9d25:
case 0x9d26:
case 0x9d27:
case 0x9f20:
case 0x9f21:
case 0x9f22:
case 0x9f23:
case 0x9f24:
case 0x9f25:
case 0x9f26:
case 0x9f27:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xb100:
case 0xb101:
case 0xb102:
case 0xb103:
case 0xb104:
case 0xb105:
case 0xb106:
case 0xb107:
case 0xb300:
case 0xb301:
case 0xb302:
case 0xb303:
case 0xb304:
case 0xb305:
case 0xb306:
case 0xb307:
case 0xb500:
case 0xb501:
case 0xb502:
case 0xb503:
case 0xb504:
case 0xb505:
case 0xb506:
case 0xb507:
case 0xb700:
case 0xb701:
case 0xb702:
case 0xb703:
case 0xb704:
case 0xb705:
case 0xb706:
case 0xb707:
case 0xb900:
case 0xb901:
case 0xb902:
case 0xb903:
case 0xb904:
case 0xb905:
case 0xb906:
case 0xb907:
case 0xbb00:
case 0xbb01:
case 0xbb02:
case 0xbb03:
case 0xbb04:
case 0xbb05:
case 0xbb06:
case 0xbb07:
case 0xbd00:
case 0xbd01:
case 0xbd02:
case 0xbd03:
case 0xbd04:
case 0xbd05:
case 0xbd06:
case 0xbd07:
case 0xbf00:
case 0xbf01:
case 0xbf02:
case 0xbf03:
case 0xbf04:
case 0xbf05:
case 0xbf06:
case 0xbf07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b11_b9); HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x13c0:
case 0x13c1:
case 0x13c2:
case 0x13c3:
case 0x13c4:
case 0x13c5:
case 0x13c6:
case 0x13c7:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11c0:
case 0x11c1:
case 0x11c2:
case 0x11c3:
case 0x11c4:
case 0x11c5:
case 0x11c6:
case 0x11c7:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x1080:
case 0x1081:
case 0x1082:
case 0x1083:
case 0x1084:
case 0x1085:
case 0x1086:
case 0x1087:
case 0x1280:
case 0x1281:
case 0x1282:
case 0x1283:
case 0x1284:
case 0x1285:
case 0x1286:
case 0x1287:
case 0x1480:
case 0x1481:
case 0x1482:
case 0x1483:
case 0x1484:
case 0x1485:
case 0x1486:
case 0x1487:
case 0x1680:
case 0x1681:
case 0x1682:
case 0x1683:
case 0x1684:
case 0x1685:
case 0x1686:
case 0x1687:
case 0x1880:
case 0x1881:
case 0x1882:
case 0x1883:
case 0x1884:
case 0x1885:
case 0x1886:
case 0x1887:
case 0x1a80:
case 0x1a81:
case 0x1a82:
case 0x1a83:
case 0x1a84:
case 0x1a85:
case 0x1a86:
case 0x1a87:
case 0x1c80:
case 0x1c81:
case 0x1c82:
case 0x1c83:
case 0x1c84:
case 0x1c85:
case 0x1c86:
case 0x1c87:
case 0x1e80:
case 0x1e81:
case 0x1e82:
case 0x1e83:
case 0x1e84:
case 0x1e85:
case 0x1e86:
case 0x1e87:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1140:
case 0x1141:
case 0x1142:
case 0x1143:
case 0x1144:
case 0x1145:
case 0x1146:
case 0x1147:
case 0x1340:
case 0x1341:
case 0x1342:
case 0x1343:
case 0x1344:
case 0x1345:
case 0x1346:
case 0x1347:
case 0x1540:
case 0x1541:
case 0x1542:
case 0x1543:
case 0x1544:
case 0x1545:
case 0x1546:
case 0x1547:
case 0x1740:
case 0x1741:
case 0x1742:
case 0x1743:
case 0x1744:
case 0x1745:
case 0x1746:
case 0x1747:
case 0x1940:
case 0x1941:
case 0x1942:
case 0x1943:
case 0x1944:
case 0x1945:
case 0x1946:
case 0x1947:
case 0x1b40:
case 0x1b41:
case 0x1b42:
case 0x1b43:
case 0x1b44:
case 0x1b45:
case 0x1b46:
case 0x1b47:
case 0x1d40:
case 0x1d41:
case 0x1d42:
case 0x1d43:
case 0x1d44:
case 0x1d45:
case 0x1d46:
case 0x1d47:
case 0x1f40:
case 0x1f41:
case 0x1f42:
case 0x1f43:
case 0x1f44:
case 0x1f45:
case 0x1f46:
case 0x1f47:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1180:
case 0x1181:
case 0x1182:
case 0x1183:
case 0x1184:
case 0x1185:
case 0x1186:
case 0x1187:
case 0x1380:
case 0x1381:
case 0x1382:
case 0x1383:
case 0x1384:
case 0x1385:
case 0x1386:
case 0x1387:
case 0x1580:
case 0x1581:
case 0x1582:
case 0x1583:
case 0x1584:
case 0x1585:
case 0x1586:
case 0x1587:
case 0x1780:
case 0x1781:
case 0x1782:
case 0x1783:
case 0x1784:
case 0x1785:
case 0x1786:
case 0x1787:
case 0x1980:
case 0x1981:
case 0x1982:
case 0x1983:
case 0x1984:
case 0x1985:
case 0x1986:
case 0x1987:
case 0x1b80:
case 0x1b81:
case 0x1b82:
case 0x1b83:
case 0x1b84:
case 0x1b85:
case 0x1b86:
case 0x1b87:
case 0x1d80:
case 0x1d81:
case 0x1d82:
case 0x1d83:
case 0x1d84:
case 0x1d85:
case 0x1d86:
case 0x1d87:
case 0x1f80:
case 0x1f81:
case 0x1f82:
case 0x1f83:
case 0x1f84:
case 0x1f85:
case 0x1f86:
case 0x1f87:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x10c0:
case 0x10c1:
case 0x10c2:
case 0x10c3:
case 0x10c4:
case 0x10c5:
case 0x10c6:
case 0x10c7:
case 0x12c0:
case 0x12c1:
case 0x12c2:
case 0x12c3:
case 0x12c4:
case 0x12c5:
case 0x12c6:
case 0x12c7:
case 0x14c0:
case 0x14c1:
case 0x14c2:
case 0x14c3:
case 0x14c4:
case 0x14c5:
case 0x14c6:
case 0x14c7:
case 0x16c0:
case 0x16c1:
case 0x16c2:
case 0x16c3:
case 0x16c4:
case 0x16c5:
case 0x16c6:
case 0x16c7:
case 0x18c0:
case 0x18c1:
case 0x18c2:
case 0x18c3:
case 0x18c4:
case 0x18c5:
case 0x18c6:
case 0x18c7:
case 0x1ac0:
case 0x1ac1:
case 0x1ac2:
case 0x1ac3:
case 0x1ac4:
case 0x1ac5:
case 0x1ac6:
case 0x1ac7:
case 0x1cc0:
case 0x1cc1:
case 0x1cc2:
case 0x1cc3:
case 0x1cc4:
case 0x1cc5:
case 0x1cc6:
case 0x1cc7:
case 0x1ec0:
case 0x1ec1:
case 0x1ec2:
case 0x1ec3:
case 0x1ec4:
case 0x1ec5:
case 0x1ec6:
case 0x1ec7:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x1100:
case 0x1101:
case 0x1102:
case 0x1103:
case 0x1104:
case 0x1105:
case 0x1106:
case 0x1107:
case 0x1300:
case 0x1301:
case 0x1302:
case 0x1303:
case 0x1304:
case 0x1305:
case 0x1306:
case 0x1307:
case 0x1500:
case 0x1501:
case 0x1502:
case 0x1503:
case 0x1504:
case 0x1505:
case 0x1506:
case 0x1507:
case 0x1700:
case 0x1701:
case 0x1702:
case 0x1703:
case 0x1704:
case 0x1705:
case 0x1706:
case 0x1707:
case 0x1900:
case 0x1901:
case 0x1902:
case 0x1903:
case 0x1904:
case 0x1905:
case 0x1906:
case 0x1907:
case 0x1b00:
case 0x1b01:
case 0x1b02:
case 0x1b03:
case 0x1b04:
case 0x1b05:
case 0x1b06:
case 0x1b07:
case 0x1d00:
case 0x1d01:
case 0x1d02:
case 0x1d03:
case 0x1d04:
case 0x1d05:
case 0x1d06:
case 0x1d07:
case 0x1f00:
case 0x1f01:
case 0x1f02:
case 0x1f03:
case 0x1f04:
case 0x1f05:
case 0x1f06:
case 0x1f07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xc100:
case 0xc101:
case 0xc102:
case 0xc103:
case 0xc104:
case 0xc105:
case 0xc106:
case 0xc107:
case 0xc300:
case 0xc301:
case 0xc302:
case 0xc303:
case 0xc304:
case 0xc305:
case 0xc306:
case 0xc307:
case 0xc500:
case 0xc501:
case 0xc502:
case 0xc503:
case 0xc504:
case 0xc505:
case 0xc506:
case 0xc507:
case 0xc700:
case 0xc701:
case 0xc702:
case 0xc703:
case 0xc704:
case 0xc705:
case 0xc706:
case 0xc707:
case 0xc900:
case 0xc901:
case 0xc902:
case 0xc903:
case 0xc904:
case 0xc905:
case 0xc906:
case 0xc907:
case 0xcb00:
case 0xcb01:
case 0xcb02:
case 0xcb03:
case 0xcb04:
case 0xcb05:
case 0xcb06:
case 0xcb07:
case 0xcd00:
case 0xcd01:
case 0xcd02:
case 0xcd03:
case 0xcd04:
case 0xcd05:
case 0xcd06:
case 0xcd07:
case 0xcf00:
case 0xcf01:
case 0xcf02:
case 0xcf03:
case 0xcf04:
case 0xcf05:
case 0xcf06:
case 0xcf07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ABCD(src, dst);
	}
	break;

case 0xd000:
case 0xd001:
case 0xd002:
case 0xd003:
case 0xd004:
case 0xd005:
case 0xd006:
case 0xd007:
case 0xd200:
case 0xd201:
case 0xd202:
case 0xd203:
case 0xd204:
case 0xd205:
case 0xd206:
case 0xd207:
case 0xd400:
case 0xd401:
case 0xd402:
case 0xd403:
case 0xd404:
case 0xd405:
case 0xd406:
case 0xd407:
case 0xd600:
case 0xd601:
case 0xd602:
case 0xd603:
case 0xd604:
case 0xd605:
case 0xd606:
case 0xd607:
case 0xd800:
case 0xd801:
case 0xd802:
case 0xd803:
case 0xd804:
case 0xd805:
case 0xd806:
case 0xd807:
case 0xda00:
case 0xda01:
case 0xda02:
case 0xda03:
case 0xda04:
case 0xda05:
case 0xda06:
case 0xda07:
case 0xdc00:
case 0xdc01:
case 0xdc02:
case 0xdc03:
case 0xdc04:
case 0xdc05:
case 0xdc06:
case 0xdc07:
case 0xde00:
case 0xde01:
case 0xde02:
case 0xde03:
case 0xde04:
case 0xde05:
case 0xde06:
case 0xde07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xd100:
case 0xd101:
case 0xd102:
case 0xd103:
case 0xd104:
case 0xd105:
case 0xd106:
case 0xd107:
case 0xd300:
case 0xd301:
case 0xd302:
case 0xd303:
case 0xd304:
case 0xd305:
case 0xd306:
case 0xd307:
case 0xd500:
case 0xd501:
case 0xd502:
case 0xd503:
case 0xd504:
case 0xd505:
case 0xd506:
case 0xd507:
case 0xd700:
case 0xd701:
case 0xd702:
case 0xd703:
case 0xd704:
case 0xd705:
case 0xd706:
case 0xd707:
case 0xd900:
case 0xd901:
case 0xd902:
case 0xd903:
case 0xd904:
case 0xd905:
case 0xd906:
case 0xd907:
case 0xdb00:
case 0xdb01:
case 0xdb02:
case 0xdb03:
case 0xdb04:
case 0xdb05:
case 0xdb06:
case 0xdb07:
case 0xdd00:
case 0xdd01:
case 0xdd02:
case 0xdd03:
case 0xdd04:
case 0xdd05:
case 0xdd06:
case 0xdd07:
case 0xdf00:
case 0xdf01:
case 0xdf02:
case 0xdf03:
case 0xdf04:
case 0xdf05:
case 0xdf06:
case 0xdf07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADDX(src, dst);
	}
	break;

case 0xc000:
case 0xc001:
case 0xc002:
case 0xc003:
case 0xc004:
case 0xc005:
case 0xc006:
case 0xc007:
case 0xc200:
case 0xc201:
case 0xc202:
case 0xc203:
case 0xc204:
case 0xc205:
case 0xc206:
case 0xc207:
case 0xc400:
case 0xc401:
case 0xc402:
case 0xc403:
case 0xc404:
case 0xc405:
case 0xc406:
case 0xc407:
case 0xc600:
case 0xc601:
case 0xc602:
case 0xc603:
case 0xc604:
case 0xc605:
case 0xc606:
case 0xc607:
case 0xc800:
case 0xc801:
case 0xc802:
case 0xc803:
case 0xc804:
case 0xc805:
case 0xc806:
case 0xc807:
case 0xca00:
case 0xca01:
case 0xca02:
case 0xca03:
case 0xca04:
case 0xca05:
case 0xca06:
case 0xca07:
case 0xcc00:
case 0xcc01:
case 0xcc02:
case 0xcc03:
case 0xcc04:
case 0xcc05:
case 0xcc06:
case 0xcc07:
case 0xce00:
case 0xce01:
case 0xce02:
case 0xce03:
case 0xce04:
case 0xce05:
case 0xce06:
case 0xce07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb000:
case 0xb001:
case 0xb002:
case 0xb003:
case 0xb004:
case 0xb005:
case 0xb006:
case 0xb007:
case 0xb200:
case 0xb201:
case 0xb202:
case 0xb203:
case 0xb204:
case 0xb205:
case 0xb206:
case 0xb207:
case 0xb400:
case 0xb401:
case 0xb402:
case 0xb403:
case 0xb404:
case 0xb405:
case 0xb406:
case 0xb407:
case 0xb600:
case 0xb601:
case 0xb602:
case 0xb603:
case 0xb604:
case 0xb605:
case 0xb606:
case 0xb607:
case 0xb800:
case 0xb801:
case 0xb802:
case 0xb803:
case 0xb804:
case 0xb805:
case 0xb806:
case 0xb807:
case 0xba00:
case 0xba01:
case 0xba02:
case 0xba03:
case 0xba04:
case 0xba05:
case 0xba06:
case 0xba07:
case 0xbc00:
case 0xbc01:
case 0xbc02:
case 0xbc03:
case 0xbc04:
case 0xbc05:
case 0xbc06:
case 0xbc07:
case 0xbe00:
case 0xbe01:
case 0xbe02:
case 0xbe03:
case 0xbe04:
case 0xbe05:
case 0xbe06:
case 0xbe07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x1000:
case 0x1001:
case 0x1002:
case 0x1003:
case 0x1004:
case 0x1005:
case 0x1006:
case 0x1007:
case 0x1200:
case 0x1201:
case 0x1202:
case 0x1203:
case 0x1204:
case 0x1205:
case 0x1206:
case 0x1207:
case 0x1400:
case 0x1401:
case 0x1402:
case 0x1403:
case 0x1404:
case 0x1405:
case 0x1406:
case 0x1407:
case 0x1600:
case 0x1601:
case 0x1602:
case 0x1603:
case 0x1604:
case 0x1605:
case 0x1606:
case 0x1607:
case 0x1800:
case 0x1801:
case 0x1802:
case 0x1803:
case 0x1804:
case 0x1805:
case 0x1806:
case 0x1807:
case 0x1a00:
case 0x1a01:
case 0x1a02:
case 0x1a03:
case 0x1a04:
case 0x1a05:
case 0x1a06:
case 0x1a07:
case 0x1c00:
case 0x1c01:
case 0x1c02:
case 0x1c03:
case 0x1c04:
case 0x1c05:
case 0x1c06:
case 0x1c07:
case 0x1e00:
case 0x1e01:
case 0x1e02:
case 0x1e03:
case 0x1e04:
case 0x1e05:
case 0x1e06:
case 0x1e07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x8000:
case 0x8001:
case 0x8002:
case 0x8003:
case 0x8004:
case 0x8005:
case 0x8006:
case 0x8007:
case 0x8200:
case 0x8201:
case 0x8202:
case 0x8203:
case 0x8204:
case 0x8205:
case 0x8206:
case 0x8207:
case 0x8400:
case 0x8401:
case 0x8402:
case 0x8403:
case 0x8404:
case 0x8405:
case 0x8406:
case 0x8407:
case 0x8600:
case 0x8601:
case 0x8602:
case 0x8603:
case 0x8604:
case 0x8605:
case 0x8606:
case 0x8607:
case 0x8800:
case 0x8801:
case 0x8802:
case 0x8803:
case 0x8804:
case 0x8805:
case 0x8806:
case 0x8807:
case 0x8a00:
case 0x8a01:
case 0x8a02:
case 0x8a03:
case 0x8a04:
case 0x8a05:
case 0x8a06:
case 0x8a07:
case 0x8c00:
case 0x8c01:
case 0x8c02:
case 0x8c03:
case 0x8c04:
case 0x8c05:
case 0x8c06:
case 0x8c07:
case 0x8e00:
case 0x8e01:
case 0x8e02:
case 0x8e03:
case 0x8e04:
case 0x8e05:
case 0x8e06:
case 0x8e07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x8100:
case 0x8101:
case 0x8102:
case 0x8103:
case 0x8104:
case 0x8105:
case 0x8106:
case 0x8107:
case 0x8300:
case 0x8301:
case 0x8302:
case 0x8303:
case 0x8304:
case 0x8305:
case 0x8306:
case 0x8307:
case 0x8500:
case 0x8501:
case 0x8502:
case 0x8503:
case 0x8504:
case 0x8505:
case 0x8506:
case 0x8507:
case 0x8700:
case 0x8701:
case 0x8702:
case 0x8703:
case 0x8704:
case 0x8705:
case 0x8706:
case 0x8707:
case 0x8900:
case 0x8901:
case 0x8902:
case 0x8903:
case 0x8904:
case 0x8905:
case 0x8906:
case 0x8907:
case 0x8b00:
case 0x8b01:
case 0x8b02:
case 0x8b03:
case 0x8b04:
case 0x8b05:
case 0x8b06:
case 0x8b07:
case 0x8d00:
case 0x8d01:
case 0x8d02:
case 0x8d03:
case 0x8d04:
case 0x8d05:
case 0x8d06:
case 0x8d07:
case 0x8f00:
case 0x8f01:
case 0x8f02:
case 0x8f03:
case 0x8f04:
case 0x8f05:
case 0x8f06:
case 0x8f07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SBCD(src, dst);
	}
	break;

case 0x9000:
case 0x9001:
case 0x9002:
case 0x9003:
case 0x9004:
case 0x9005:
case 0x9006:
case 0x9007:
case 0x9200:
case 0x9201:
case 0x9202:
case 0x9203:
case 0x9204:
case 0x9205:
case 0x9206:
case 0x9207:
case 0x9400:
case 0x9401:
case 0x9402:
case 0x9403:
case 0x9404:
case 0x9405:
case 0x9406:
case 0x9407:
case 0x9600:
case 0x9601:
case 0x9602:
case 0x9603:
case 0x9604:
case 0x9605:
case 0x9606:
case 0x9607:
case 0x9800:
case 0x9801:
case 0x9802:
case 0x9803:
case 0x9804:
case 0x9805:
case 0x9806:
case 0x9807:
case 0x9a00:
case 0x9a01:
case 0x9a02:
case 0x9a03:
case 0x9a04:
case 0x9a05:
case 0x9a06:
case 0x9a07:
case 0x9c00:
case 0x9c01:
case 0x9c02:
case 0x9c03:
case 0x9c04:
case 0x9c05:
case 0x9c06:
case 0x9c07:
case 0x9e00:
case 0x9e01:
case 0x9e02:
case 0x9e03:
case 0x9e04:
case 0x9e05:
case 0x9e06:
case 0x9e07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x9100:
case 0x9101:
case 0x9102:
case 0x9103:
case 0x9104:
case 0x9105:
case 0x9106:
case 0x9107:
case 0x9300:
case 0x9301:
case 0x9302:
case 0x9303:
case 0x9304:
case 0x9305:
case 0x9306:
case 0x9307:
case 0x9500:
case 0x9501:
case 0x9502:
case 0x9503:
case 0x9504:
case 0x9505:
case 0x9506:
case 0x9507:
case 0x9700:
case 0x9701:
case 0x9702:
case 0x9703:
case 0x9704:
case 0x9705:
case 0x9706:
case 0x9707:
case 0x9900:
case 0x9901:
case 0x9902:
case 0x9903:
case 0x9904:
case 0x9905:
case 0x9906:
case 0x9907:
case 0x9b00:
case 0x9b01:
case 0x9b02:
case 0x9b03:
case 0x9b04:
case 0x9b05:
case 0x9b06:
case 0x9b07:
case 0x9d00:
case 0x9d01:
case 0x9d02:
case 0x9d03:
case 0x9d04:
case 0x9d05:
case 0x9d06:
case 0x9d07:
case 0x9f00:
case 0x9f01:
case 0x9f02:
case 0x9f03:
case 0x9f04:
case 0x9f05:
case 0x9f06:
case 0x9f07:
	{
	 HAM<uint8, DATA_REG_DIR> src(this, instr_b2_b0); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUBX(src, dst);
	}
	break;

case 0xe120:
case 0xe121:
case 0xe122:
case 0xe123:
case 0xe124:
case 0xe125:
case 0xe126:
case 0xe127:
case 0xe320:
case 0xe321:
case 0xe322:
case 0xe323:
case 0xe324:
case 0xe325:
case 0xe326:
case 0xe327:
case 0xe520:
case 0xe521:
case 0xe522:
case 0xe523:
case 0xe524:
case 0xe525:
case 0xe526:
case 0xe527:
case 0xe720:
case 0xe721:
case 0xe722:
case 0xe723:
case 0xe724:
case 0xe725:
case 0xe726:
case 0xe727:
case 0xe920:
case 0xe921:
case 0xe922:
case 0xe923:
case 0xe924:
case 0xe925:
case 0xe926:
case 0xe927:
case 0xeb20:
case 0xeb21:
case 0xeb22:
case 0xeb23:
case 0xeb24:
case 0xeb25:
case 0xeb26:
case 0xeb27:
case 0xed20:
case 0xed21:
case 0xed22:
case 0xed23:
case 0xed24:
case 0xed25:
case 0xed26:
case 0xed27:
case 0xef20:
case 0xef21:
case 0xef22:
case 0xef23:
case 0xef24:
case 0xef25:
case 0xef26:
case 0xef27:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ASL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe100:
case 0xe101:
case 0xe102:
case 0xe103:
case 0xe104:
case 0xe105:
case 0xe106:
case 0xe107:
case 0xe300:
case 0xe301:
case 0xe302:
case 0xe303:
case 0xe304:
case 0xe305:
case 0xe306:
case 0xe307:
case 0xe500:
case 0xe501:
case 0xe502:
case 0xe503:
case 0xe504:
case 0xe505:
case 0xe506:
case 0xe507:
case 0xe700:
case 0xe701:
case 0xe702:
case 0xe703:
case 0xe704:
case 0xe705:
case 0xe706:
case 0xe707:
case 0xe900:
case 0xe901:
case 0xe902:
case 0xe903:
case 0xe904:
case 0xe905:
case 0xe906:
case 0xe907:
case 0xeb00:
case 0xeb01:
case 0xeb02:
case 0xeb03:
case 0xeb04:
case 0xeb05:
case 0xeb06:
case 0xeb07:
case 0xed00:
case 0xed01:
case 0xed02:
case 0xed03:
case 0xed04:
case 0xed05:
case 0xed06:
case 0xed07:
case 0xef00:
case 0xef01:
case 0xef02:
case 0xef03:
case 0xef04:
case 0xef05:
case 0xef06:
case 0xef07:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ASL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe020:
case 0xe021:
case 0xe022:
case 0xe023:
case 0xe024:
case 0xe025:
case 0xe026:
case 0xe027:
case 0xe220:
case 0xe221:
case 0xe222:
case 0xe223:
case 0xe224:
case 0xe225:
case 0xe226:
case 0xe227:
case 0xe420:
case 0xe421:
case 0xe422:
case 0xe423:
case 0xe424:
case 0xe425:
case 0xe426:
case 0xe427:
case 0xe620:
case 0xe621:
case 0xe622:
case 0xe623:
case 0xe624:
case 0xe625:
case 0xe626:
case 0xe627:
case 0xe820:
case 0xe821:
case 0xe822:
case 0xe823:
case 0xe824:
case 0xe825:
case 0xe826:
case 0xe827:
case 0xea20:
case 0xea21:
case 0xea22:
case 0xea23:
case 0xea24:
case 0xea25:
case 0xea26:
case 0xea27:
case 0xec20:
case 0xec21:
case 0xec22:
case 0xec23:
case 0xec24:
case 0xec25:
case 0xec26:
case 0xec27:
case 0xee20:
case 0xee21:
case 0xee22:
case 0xee23:
case 0xee24:
case 0xee25:
case 0xee26:
case 0xee27:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ASR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe000:
case 0xe001:
case 0xe002:
case 0xe003:
case 0xe004:
case 0xe005:
case 0xe006:
case 0xe007:
case 0xe200:
case 0xe201:
case 0xe202:
case 0xe203:
case 0xe204:
case 0xe205:
case 0xe206:
case 0xe207:
case 0xe400:
case 0xe401:
case 0xe402:
case 0xe403:
case 0xe404:
case 0xe405:
case 0xe406:
case 0xe407:
case 0xe600:
case 0xe601:
case 0xe602:
case 0xe603:
case 0xe604:
case 0xe605:
case 0xe606:
case 0xe607:
case 0xe800:
case 0xe801:
case 0xe802:
case 0xe803:
case 0xe804:
case 0xe805:
case 0xe806:
case 0xe807:
case 0xea00:
case 0xea01:
case 0xea02:
case 0xea03:
case 0xea04:
case 0xea05:
case 0xea06:
case 0xea07:
case 0xec00:
case 0xec01:
case 0xec02:
case 0xec03:
case 0xec04:
case 0xec05:
case 0xec06:
case 0xec07:
case 0xee00:
case 0xee01:
case 0xee02:
case 0xee03:
case 0xee04:
case 0xee05:
case 0xee06:
case 0xee07:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ASR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe128:
case 0xe129:
case 0xe12a:
case 0xe12b:
case 0xe12c:
case 0xe12d:
case 0xe12e:
case 0xe12f:
case 0xe328:
case 0xe329:
case 0xe32a:
case 0xe32b:
case 0xe32c:
case 0xe32d:
case 0xe32e:
case 0xe32f:
case 0xe528:
case 0xe529:
case 0xe52a:
case 0xe52b:
case 0xe52c:
case 0xe52d:
case 0xe52e:
case 0xe52f:
case 0xe728:
case 0xe729:
case 0xe72a:
case 0xe72b:
case 0xe72c:
case 0xe72d:
case 0xe72e:
case 0xe72f:
case 0xe928:
case 0xe929:
case 0xe92a:
case 0xe92b:
case 0xe92c:
case 0xe92d:
case 0xe92e:
case 0xe92f:
case 0xeb28:
case 0xeb29:
case 0xeb2a:
case 0xeb2b:
case 0xeb2c:
case 0xeb2d:
case 0xeb2e:
case 0xeb2f:
case 0xed28:
case 0xed29:
case 0xed2a:
case 0xed2b:
case 0xed2c:
case 0xed2d:
case 0xed2e:
case 0xed2f:
case 0xef28:
case 0xef29:
case 0xef2a:
case 0xef2b:
case 0xef2c:
case 0xef2d:
case 0xef2e:
case 0xef2f:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); LSL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe108:
case 0xe109:
case 0xe10a:
case 0xe10b:
case 0xe10c:
case 0xe10d:
case 0xe10e:
case 0xe10f:
case 0xe308:
case 0xe309:
case 0xe30a:
case 0xe30b:
case 0xe30c:
case 0xe30d:
case 0xe30e:
case 0xe30f:
case 0xe508:
case 0xe509:
case 0xe50a:
case 0xe50b:
case 0xe50c:
case 0xe50d:
case 0xe50e:
case 0xe50f:
case 0xe708:
case 0xe709:
case 0xe70a:
case 0xe70b:
case 0xe70c:
case 0xe70d:
case 0xe70e:
case 0xe70f:
case 0xe908:
case 0xe909:
case 0xe90a:
case 0xe90b:
case 0xe90c:
case 0xe90d:
case 0xe90e:
case 0xe90f:
case 0xeb08:
case 0xeb09:
case 0xeb0a:
case 0xeb0b:
case 0xeb0c:
case 0xeb0d:
case 0xeb0e:
case 0xeb0f:
case 0xed08:
case 0xed09:
case 0xed0a:
case 0xed0b:
case 0xed0c:
case 0xed0d:
case 0xed0e:
case 0xed0f:
case 0xef08:
case 0xef09:
case 0xef0a:
case 0xef0b:
case 0xef0c:
case 0xef0d:
case 0xef0e:
case 0xef0f:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); LSL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe028:
case 0xe029:
case 0xe02a:
case 0xe02b:
case 0xe02c:
case 0xe02d:
case 0xe02e:
case 0xe02f:
case 0xe228:
case 0xe229:
case 0xe22a:
case 0xe22b:
case 0xe22c:
case 0xe22d:
case 0xe22e:
case 0xe22f:
case 0xe428:
case 0xe429:
case 0xe42a:
case 0xe42b:
case 0xe42c:
case 0xe42d:
case 0xe42e:
case 0xe42f:
case 0xe628:
case 0xe629:
case 0xe62a:
case 0xe62b:
case 0xe62c:
case 0xe62d:
case 0xe62e:
case 0xe62f:
case 0xe828:
case 0xe829:
case 0xe82a:
case 0xe82b:
case 0xe82c:
case 0xe82d:
case 0xe82e:
case 0xe82f:
case 0xea28:
case 0xea29:
case 0xea2a:
case 0xea2b:
case 0xea2c:
case 0xea2d:
case 0xea2e:
case 0xea2f:
case 0xec28:
case 0xec29:
case 0xec2a:
case 0xec2b:
case 0xec2c:
case 0xec2d:
case 0xec2e:
case 0xec2f:
case 0xee28:
case 0xee29:
case 0xee2a:
case 0xee2b:
case 0xee2c:
case 0xee2d:
case 0xee2e:
case 0xee2f:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); LSR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe008:
case 0xe009:
case 0xe00a:
case 0xe00b:
case 0xe00c:
case 0xe00d:
case 0xe00e:
case 0xe00f:
case 0xe208:
case 0xe209:
case 0xe20a:
case 0xe20b:
case 0xe20c:
case 0xe20d:
case 0xe20e:
case 0xe20f:
case 0xe408:
case 0xe409:
case 0xe40a:
case 0xe40b:
case 0xe40c:
case 0xe40d:
case 0xe40e:
case 0xe40f:
case 0xe608:
case 0xe609:
case 0xe60a:
case 0xe60b:
case 0xe60c:
case 0xe60d:
case 0xe60e:
case 0xe60f:
case 0xe808:
case 0xe809:
case 0xe80a:
case 0xe80b:
case 0xe80c:
case 0xe80d:
case 0xe80e:
case 0xe80f:
case 0xea08:
case 0xea09:
case 0xea0a:
case 0xea0b:
case 0xea0c:
case 0xea0d:
case 0xea0e:
case 0xea0f:
case 0xec08:
case 0xec09:
case 0xec0a:
case 0xec0b:
case 0xec0c:
case 0xec0d:
case 0xec0e:
case 0xec0f:
case 0xee08:
case 0xee09:
case 0xee0a:
case 0xee0b:
case 0xee0c:
case 0xee0d:
case 0xee0e:
case 0xee0f:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); LSR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe138:
case 0xe139:
case 0xe13a:
case 0xe13b:
case 0xe13c:
case 0xe13d:
case 0xe13e:
case 0xe13f:
case 0xe338:
case 0xe339:
case 0xe33a:
case 0xe33b:
case 0xe33c:
case 0xe33d:
case 0xe33e:
case 0xe33f:
case 0xe538:
case 0xe539:
case 0xe53a:
case 0xe53b:
case 0xe53c:
case 0xe53d:
case 0xe53e:
case 0xe53f:
case 0xe738:
case 0xe739:
case 0xe73a:
case 0xe73b:
case 0xe73c:
case 0xe73d:
case 0xe73e:
case 0xe73f:
case 0xe938:
case 0xe939:
case 0xe93a:
case 0xe93b:
case 0xe93c:
case 0xe93d:
case 0xe93e:
case 0xe93f:
case 0xeb38:
case 0xeb39:
case 0xeb3a:
case 0xeb3b:
case 0xeb3c:
case 0xeb3d:
case 0xeb3e:
case 0xeb3f:
case 0xed38:
case 0xed39:
case 0xed3a:
case 0xed3b:
case 0xed3c:
case 0xed3d:
case 0xed3e:
case 0xed3f:
case 0xef38:
case 0xef39:
case 0xef3a:
case 0xef3b:
case 0xef3c:
case 0xef3d:
case 0xef3e:
case 0xef3f:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ROL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe118:
case 0xe119:
case 0xe11a:
case 0xe11b:
case 0xe11c:
case 0xe11d:
case 0xe11e:
case 0xe11f:
case 0xe318:
case 0xe319:
case 0xe31a:
case 0xe31b:
case 0xe31c:
case 0xe31d:
case 0xe31e:
case 0xe31f:
case 0xe518:
case 0xe519:
case 0xe51a:
case 0xe51b:
case 0xe51c:
case 0xe51d:
case 0xe51e:
case 0xe51f:
case 0xe718:
case 0xe719:
case 0xe71a:
case 0xe71b:
case 0xe71c:
case 0xe71d:
case 0xe71e:
case 0xe71f:
case 0xe918:
case 0xe919:
case 0xe91a:
case 0xe91b:
case 0xe91c:
case 0xe91d:
case 0xe91e:
case 0xe91f:
case 0xeb18:
case 0xeb19:
case 0xeb1a:
case 0xeb1b:
case 0xeb1c:
case 0xeb1d:
case 0xeb1e:
case 0xeb1f:
case 0xed18:
case 0xed19:
case 0xed1a:
case 0xed1b:
case 0xed1c:
case 0xed1d:
case 0xed1e:
case 0xed1f:
case 0xef18:
case 0xef19:
case 0xef1a:
case 0xef1b:
case 0xef1c:
case 0xef1d:
case 0xef1e:
case 0xef1f:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ROL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe038:
case 0xe039:
case 0xe03a:
case 0xe03b:
case 0xe03c:
case 0xe03d:
case 0xe03e:
case 0xe03f:
case 0xe238:
case 0xe239:
case 0xe23a:
case 0xe23b:
case 0xe23c:
case 0xe23d:
case 0xe23e:
case 0xe23f:
case 0xe438:
case 0xe439:
case 0xe43a:
case 0xe43b:
case 0xe43c:
case 0xe43d:
case 0xe43e:
case 0xe43f:
case 0xe638:
case 0xe639:
case 0xe63a:
case 0xe63b:
case 0xe63c:
case 0xe63d:
case 0xe63e:
case 0xe63f:
case 0xe838:
case 0xe839:
case 0xe83a:
case 0xe83b:
case 0xe83c:
case 0xe83d:
case 0xe83e:
case 0xe83f:
case 0xea38:
case 0xea39:
case 0xea3a:
case 0xea3b:
case 0xea3c:
case 0xea3d:
case 0xea3e:
case 0xea3f:
case 0xec38:
case 0xec39:
case 0xec3a:
case 0xec3b:
case 0xec3c:
case 0xec3d:
case 0xec3e:
case 0xec3f:
case 0xee38:
case 0xee39:
case 0xee3a:
case 0xee3b:
case 0xee3c:
case 0xee3d:
case 0xee3e:
case 0xee3f:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ROR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe018:
case 0xe019:
case 0xe01a:
case 0xe01b:
case 0xe01c:
case 0xe01d:
case 0xe01e:
case 0xe01f:
case 0xe218:
case 0xe219:
case 0xe21a:
case 0xe21b:
case 0xe21c:
case 0xe21d:
case 0xe21e:
case 0xe21f:
case 0xe418:
case 0xe419:
case 0xe41a:
case 0xe41b:
case 0xe41c:
case 0xe41d:
case 0xe41e:
case 0xe41f:
case 0xe618:
case 0xe619:
case 0xe61a:
case 0xe61b:
case 0xe61c:
case 0xe61d:
case 0xe61e:
case 0xe61f:
case 0xe818:
case 0xe819:
case 0xe81a:
case 0xe81b:
case 0xe81c:
case 0xe81d:
case 0xe81e:
case 0xe81f:
case 0xea18:
case 0xea19:
case 0xea1a:
case 0xea1b:
case 0xea1c:
case 0xea1d:
case 0xea1e:
case 0xea1f:
case 0xec18:
case 0xec19:
case 0xec1a:
case 0xec1b:
case 0xec1c:
case 0xec1d:
case 0xec1e:
case 0xec1f:
case 0xee18:
case 0xee19:
case 0xee1a:
case 0xee1b:
case 0xee1c:
case 0xee1d:
case 0xee1e:
case 0xee1f:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ROR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe130:
case 0xe131:
case 0xe132:
case 0xe133:
case 0xe134:
case 0xe135:
case 0xe136:
case 0xe137:
case 0xe330:
case 0xe331:
case 0xe332:
case 0xe333:
case 0xe334:
case 0xe335:
case 0xe336:
case 0xe337:
case 0xe530:
case 0xe531:
case 0xe532:
case 0xe533:
case 0xe534:
case 0xe535:
case 0xe536:
case 0xe537:
case 0xe730:
case 0xe731:
case 0xe732:
case 0xe733:
case 0xe734:
case 0xe735:
case 0xe736:
case 0xe737:
case 0xe930:
case 0xe931:
case 0xe932:
case 0xe933:
case 0xe934:
case 0xe935:
case 0xe936:
case 0xe937:
case 0xeb30:
case 0xeb31:
case 0xeb32:
case 0xeb33:
case 0xeb34:
case 0xeb35:
case 0xeb36:
case 0xeb37:
case 0xed30:
case 0xed31:
case 0xed32:
case 0xed33:
case 0xed34:
case 0xed35:
case 0xed36:
case 0xed37:
case 0xef30:
case 0xef31:
case 0xef32:
case 0xef33:
case 0xef34:
case 0xef35:
case 0xef36:
case 0xef37:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ROXL(targ, D[instr_b11_b9]);
	}
	break;

case 0xe110:
case 0xe111:
case 0xe112:
case 0xe113:
case 0xe114:
case 0xe115:
case 0xe116:
case 0xe117:
case 0xe310:
case 0xe311:
case 0xe312:
case 0xe313:
case 0xe314:
case 0xe315:
case 0xe316:
case 0xe317:
case 0xe510:
case 0xe511:
case 0xe512:
case 0xe513:
case 0xe514:
case 0xe515:
case 0xe516:
case 0xe517:
case 0xe710:
case 0xe711:
case 0xe712:
case 0xe713:
case 0xe714:
case 0xe715:
case 0xe716:
case 0xe717:
case 0xe910:
case 0xe911:
case 0xe912:
case 0xe913:
case 0xe914:
case 0xe915:
case 0xe916:
case 0xe917:
case 0xeb10:
case 0xeb11:
case 0xeb12:
case 0xeb13:
case 0xeb14:
case 0xeb15:
case 0xeb16:
case 0xeb17:
case 0xed10:
case 0xed11:
case 0xed12:
case 0xed13:
case 0xed14:
case 0xed15:
case 0xed16:
case 0xed17:
case 0xef10:
case 0xef11:
case 0xef12:
case 0xef13:
case 0xef14:
case 0xef15:
case 0xef16:
case 0xef17:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ROXL(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0xe030:
case 0xe031:
case 0xe032:
case 0xe033:
case 0xe034:
case 0xe035:
case 0xe036:
case 0xe037:
case 0xe230:
case 0xe231:
case 0xe232:
case 0xe233:
case 0xe234:
case 0xe235:
case 0xe236:
case 0xe237:
case 0xe430:
case 0xe431:
case 0xe432:
case 0xe433:
case 0xe434:
case 0xe435:
case 0xe436:
case 0xe437:
case 0xe630:
case 0xe631:
case 0xe632:
case 0xe633:
case 0xe634:
case 0xe635:
case 0xe636:
case 0xe637:
case 0xe830:
case 0xe831:
case 0xe832:
case 0xe833:
case 0xe834:
case 0xe835:
case 0xe836:
case 0xe837:
case 0xea30:
case 0xea31:
case 0xea32:
case 0xea33:
case 0xea34:
case 0xea35:
case 0xea36:
case 0xea37:
case 0xec30:
case 0xec31:
case 0xec32:
case 0xec33:
case 0xec34:
case 0xec35:
case 0xec36:
case 0xec37:
case 0xee30:
case 0xee31:
case 0xee32:
case 0xee33:
case 0xee34:
case 0xee35:
case 0xee36:
case 0xee37:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ROXR(targ, D[instr_b11_b9]);
	}
	break;

case 0xe010:
case 0xe011:
case 0xe012:
case 0xe013:
case 0xe014:
case 0xe015:
case 0xe016:
case 0xe017:
case 0xe210:
case 0xe211:
case 0xe212:
case 0xe213:
case 0xe214:
case 0xe215:
case 0xe216:
case 0xe217:
case 0xe410:
case 0xe411:
case 0xe412:
case 0xe413:
case 0xe414:
case 0xe415:
case 0xe416:
case 0xe417:
case 0xe610:
case 0xe611:
case 0xe612:
case 0xe613:
case 0xe614:
case 0xe615:
case 0xe616:
case 0xe617:
case 0xe810:
case 0xe811:
case 0xe812:
case 0xe813:
case 0xe814:
case 0xe815:
case 0xe816:
case 0xe817:
case 0xea10:
case 0xea11:
case 0xea12:
case 0xea13:
case 0xea14:
case 0xea15:
case 0xea16:
case 0xea17:
case 0xec10:
case 0xec11:
case 0xec12:
case 0xec13:
case 0xec14:
case 0xec15:
case 0xec16:
case 0xec17:
case 0xee10:
case 0xee11:
case 0xee12:
case 0xee13:
case 0xee14:
case 0xee15:
case 0xee16:
case 0xee17:
	{
	 HAM<uint8, DATA_REG_DIR> targ(this, instr_b2_b0); ROXR(targ, instr_b11_b9 ? instr_b11_b9 : 8);
	}
	break;

case 0x0639:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_LONG> dst(this); ADD(src, dst);
	}
	break;

case 0x0239:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_LONG> dst(this); AND(src, dst);
	}
	break;

case 0x0c39:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_LONG> dst(this); CMP(src, dst);
	}
	break;

case 0x0a39:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_LONG> dst(this); EOR(src, dst);
	}
	break;

case 0x13fc:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x0039:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_LONG> dst(this); OR(src, dst);
	}
	break;

case 0x0439:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_LONG> dst(this); SUB(src, dst);
	}
	break;

case 0x0638:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_SHORT> dst(this); ADD(src, dst);
	}
	break;

case 0x0238:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_SHORT> dst(this); AND(src, dst);
	}
	break;

case 0x0c38:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_SHORT> dst(this); CMP(src, dst);
	}
	break;

case 0x0a38:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_SHORT> dst(this); EOR(src, dst);
	}
	break;

case 0x11fc:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x0038:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_SHORT> dst(this); OR(src, dst);
	}
	break;

case 0x0438:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ABS_SHORT> dst(this); SUB(src, dst);
	}
	break;

case 0x10bc:
case 0x12bc:
case 0x14bc:
case 0x16bc:
case 0x18bc:
case 0x1abc:
case 0x1cbc:
case 0x1ebc:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0610:
case 0x0611:
case 0x0612:
case 0x0613:
case 0x0614:
case 0x0615:
case 0x0616:
case 0x0617:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0210:
case 0x0211:
case 0x0212:
case 0x0213:
case 0x0214:
case 0x0215:
case 0x0216:
case 0x0217:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c10:
case 0x0c11:
case 0x0c12:
case 0x0c13:
case 0x0c14:
case 0x0c15:
case 0x0c16:
case 0x0c17:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a10:
case 0x0a11:
case 0x0a12:
case 0x0a13:
case 0x0a14:
case 0x0a15:
case 0x0a16:
case 0x0a17:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0010:
case 0x0011:
case 0x0012:
case 0x0013:
case 0x0014:
case 0x0015:
case 0x0016:
case 0x0017:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0410:
case 0x0411:
case 0x0412:
case 0x0413:
case 0x0414:
case 0x0415:
case 0x0416:
case 0x0417:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x117c:
case 0x137c:
case 0x157c:
case 0x177c:
case 0x197c:
case 0x1b7c:
case 0x1d7c:
case 0x1f7c:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0628:
case 0x0629:
case 0x062a:
case 0x062b:
case 0x062c:
case 0x062d:
case 0x062e:
case 0x062f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0228:
case 0x0229:
case 0x022a:
case 0x022b:
case 0x022c:
case 0x022d:
case 0x022e:
case 0x022f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c28:
case 0x0c29:
case 0x0c2a:
case 0x0c2b:
case 0x0c2c:
case 0x0c2d:
case 0x0c2e:
case 0x0c2f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a28:
case 0x0a29:
case 0x0a2a:
case 0x0a2b:
case 0x0a2c:
case 0x0a2d:
case 0x0a2e:
case 0x0a2f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0028:
case 0x0029:
case 0x002a:
case 0x002b:
case 0x002c:
case 0x002d:
case 0x002e:
case 0x002f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0428:
case 0x0429:
case 0x042a:
case 0x042b:
case 0x042c:
case 0x042d:
case 0x042e:
case 0x042f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x11bc:
case 0x13bc:
case 0x15bc:
case 0x17bc:
case 0x19bc:
case 0x1bbc:
case 0x1dbc:
case 0x1fbc:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0630:
case 0x0631:
case 0x0632:
case 0x0633:
case 0x0634:
case 0x0635:
case 0x0636:
case 0x0637:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0230:
case 0x0231:
case 0x0232:
case 0x0233:
case 0x0234:
case 0x0235:
case 0x0236:
case 0x0237:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c30:
case 0x0c31:
case 0x0c32:
case 0x0c33:
case 0x0c34:
case 0x0c35:
case 0x0c36:
case 0x0c37:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a30:
case 0x0a31:
case 0x0a32:
case 0x0a33:
case 0x0a34:
case 0x0a35:
case 0x0a36:
case 0x0a37:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0030:
case 0x0031:
case 0x0032:
case 0x0033:
case 0x0034:
case 0x0035:
case 0x0036:
case 0x0037:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0430:
case 0x0431:
case 0x0432:
case 0x0433:
case 0x0434:
case 0x0435:
case 0x0436:
case 0x0437:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x10fc:
case 0x12fc:
case 0x14fc:
case 0x16fc:
case 0x18fc:
case 0x1afc:
case 0x1cfc:
case 0x1efc:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0618:
case 0x0619:
case 0x061a:
case 0x061b:
case 0x061c:
case 0x061d:
case 0x061e:
case 0x061f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0218:
case 0x0219:
case 0x021a:
case 0x021b:
case 0x021c:
case 0x021d:
case 0x021e:
case 0x021f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c18:
case 0x0c19:
case 0x0c1a:
case 0x0c1b:
case 0x0c1c:
case 0x0c1d:
case 0x0c1e:
case 0x0c1f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a18:
case 0x0a19:
case 0x0a1a:
case 0x0a1b:
case 0x0a1c:
case 0x0a1d:
case 0x0a1e:
case 0x0a1f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0018:
case 0x0019:
case 0x001a:
case 0x001b:
case 0x001c:
case 0x001d:
case 0x001e:
case 0x001f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0418:
case 0x0419:
case 0x041a:
case 0x041b:
case 0x041c:
case 0x041d:
case 0x041e:
case 0x041f:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x113c:
case 0x133c:
case 0x153c:
case 0x173c:
case 0x193c:
case 0x1b3c:
case 0x1d3c:
case 0x1f3c:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x0620:
case 0x0621:
case 0x0622:
case 0x0623:
case 0x0624:
case 0x0625:
case 0x0626:
case 0x0627:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0220:
case 0x0221:
case 0x0222:
case 0x0223:
case 0x0224:
case 0x0225:
case 0x0226:
case 0x0227:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c20:
case 0x0c21:
case 0x0c22:
case 0x0c23:
case 0x0c24:
case 0x0c25:
case 0x0c26:
case 0x0c27:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a20:
case 0x0a21:
case 0x0a22:
case 0x0a23:
case 0x0a24:
case 0x0a25:
case 0x0a26:
case 0x0a27:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0020:
case 0x0021:
case 0x0022:
case 0x0023:
case 0x0024:
case 0x0025:
case 0x0026:
case 0x0027:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0420:
case 0x0421:
case 0x0422:
case 0x0423:
case 0x0424:
case 0x0425:
case 0x0426:
case 0x0427:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0xd03c:
case 0xd23c:
case 0xd43c:
case 0xd63c:
case 0xd83c:
case 0xda3c:
case 0xdc3c:
case 0xde3c:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc03c:
case 0xc23c:
case 0xc43c:
case 0xc63c:
case 0xc83c:
case 0xca3c:
case 0xcc3c:
case 0xce3c:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb03c:
case 0xb23c:
case 0xb43c:
case 0xb63c:
case 0xb83c:
case 0xba3c:
case 0xbc3c:
case 0xbe3c:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x103c:
case 0x123c:
case 0x143c:
case 0x163c:
case 0x183c:
case 0x1a3c:
case 0x1c3c:
case 0x1e3c:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x803c:
case 0x823c:
case 0x843c:
case 0x863c:
case 0x883c:
case 0x8a3c:
case 0x8c3c:
case 0x8e3c:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x903c:
case 0x923c:
case 0x943c:
case 0x963c:
case 0x983c:
case 0x9a3c:
case 0x9c3c:
case 0x9e3c:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x0600:
case 0x0601:
case 0x0602:
case 0x0603:
case 0x0604:
case 0x0605:
case 0x0606:
case 0x0607:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x0200:
case 0x0201:
case 0x0202:
case 0x0203:
case 0x0204:
case 0x0205:
case 0x0206:
case 0x0207:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); AND(src, dst);
	}
	break;

case 0x0c00:
case 0x0c01:
case 0x0c02:
case 0x0c03:
case 0x0c04:
case 0x0c05:
case 0x0c06:
case 0x0c07:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); CMP(src, dst);
	}
	break;

case 0x0a00:
case 0x0a01:
case 0x0a02:
case 0x0a03:
case 0x0a04:
case 0x0a05:
case 0x0a06:
case 0x0a07:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); EOR(src, dst);
	}
	break;

case 0x0000:
case 0x0001:
case 0x0002:
case 0x0003:
case 0x0004:
case 0x0005:
case 0x0006:
case 0x0007:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); OR(src, dst);
	}
	break;

case 0x0400:
case 0x0401:
case 0x0402:
case 0x0403:
case 0x0404:
case 0x0405:
case 0x0406:
case 0x0407:
	{
	 HAM<uint8, IMMEDIATE> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5008:
case 0x5009:
case 0x500a:
case 0x500b:
case 0x500c:
case 0x500d:
case 0x500e:
case 0x500f:
case 0x5208:
case 0x5209:
case 0x520a:
case 0x520b:
case 0x520c:
case 0x520d:
case 0x520e:
case 0x520f:
case 0x5408:
case 0x5409:
case 0x540a:
case 0x540b:
case 0x540c:
case 0x540d:
case 0x540e:
case 0x540f:
case 0x5608:
case 0x5609:
case 0x560a:
case 0x560b:
case 0x560c:
case 0x560d:
case 0x560e:
case 0x560f:
case 0x5808:
case 0x5809:
case 0x580a:
case 0x580b:
case 0x580c:
case 0x580d:
case 0x580e:
case 0x580f:
case 0x5a08:
case 0x5a09:
case 0x5a0a:
case 0x5a0b:
case 0x5a0c:
case 0x5a0d:
case 0x5a0e:
case 0x5a0f:
case 0x5c08:
case 0x5c09:
case 0x5c0a:
case 0x5c0b:
case 0x5c0c:
case 0x5c0d:
case 0x5c0e:
case 0x5c0f:
case 0x5e08:
case 0x5e09:
case 0x5e0a:
case 0x5e0b:
case 0x5e0c:
case 0x5e0d:
case 0x5e0e:
case 0x5e0f:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5108:
case 0x5109:
case 0x510a:
case 0x510b:
case 0x510c:
case 0x510d:
case 0x510e:
case 0x510f:
case 0x5308:
case 0x5309:
case 0x530a:
case 0x530b:
case 0x530c:
case 0x530d:
case 0x530e:
case 0x530f:
case 0x5508:
case 0x5509:
case 0x550a:
case 0x550b:
case 0x550c:
case 0x550d:
case 0x550e:
case 0x550f:
case 0x5708:
case 0x5709:
case 0x570a:
case 0x570b:
case 0x570c:
case 0x570d:
case 0x570e:
case 0x570f:
case 0x5908:
case 0x5909:
case 0x590a:
case 0x590b:
case 0x590c:
case 0x590d:
case 0x590e:
case 0x590f:
case 0x5b08:
case 0x5b09:
case 0x5b0a:
case 0x5b0b:
case 0x5b0c:
case 0x5b0d:
case 0x5b0e:
case 0x5b0f:
case 0x5d08:
case 0x5d09:
case 0x5d0a:
case 0x5d0b:
case 0x5d0c:
case 0x5d0d:
case 0x5d0e:
case 0x5d0f:
case 0x5f08:
case 0x5f09:
case 0x5f0a:
case 0x5f0b:
case 0x5f0c:
case 0x5f0d:
case 0x5f0e:
case 0x5f0f:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint32, ADDR_REG_DIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5039:
case 0x5239:
case 0x5439:
case 0x5639:
case 0x5839:
case 0x5a39:
case 0x5c39:
case 0x5e39:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ABS_LONG> dst(this); ADD(src, dst);
	}
	break;

case 0x5139:
case 0x5339:
case 0x5539:
case 0x5739:
case 0x5939:
case 0x5b39:
case 0x5d39:
case 0x5f39:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ABS_LONG> dst(this); SUB(src, dst);
	}
	break;

case 0x5038:
case 0x5238:
case 0x5438:
case 0x5638:
case 0x5838:
case 0x5a38:
case 0x5c38:
case 0x5e38:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ABS_SHORT> dst(this); ADD(src, dst);
	}
	break;

case 0x5138:
case 0x5338:
case 0x5538:
case 0x5738:
case 0x5938:
case 0x5b38:
case 0x5d38:
case 0x5f38:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ABS_SHORT> dst(this); SUB(src, dst);
	}
	break;

case 0x5010:
case 0x5011:
case 0x5012:
case 0x5013:
case 0x5014:
case 0x5015:
case 0x5016:
case 0x5017:
case 0x5210:
case 0x5211:
case 0x5212:
case 0x5213:
case 0x5214:
case 0x5215:
case 0x5216:
case 0x5217:
case 0x5410:
case 0x5411:
case 0x5412:
case 0x5413:
case 0x5414:
case 0x5415:
case 0x5416:
case 0x5417:
case 0x5610:
case 0x5611:
case 0x5612:
case 0x5613:
case 0x5614:
case 0x5615:
case 0x5616:
case 0x5617:
case 0x5810:
case 0x5811:
case 0x5812:
case 0x5813:
case 0x5814:
case 0x5815:
case 0x5816:
case 0x5817:
case 0x5a10:
case 0x5a11:
case 0x5a12:
case 0x5a13:
case 0x5a14:
case 0x5a15:
case 0x5a16:
case 0x5a17:
case 0x5c10:
case 0x5c11:
case 0x5c12:
case 0x5c13:
case 0x5c14:
case 0x5c15:
case 0x5c16:
case 0x5c17:
case 0x5e10:
case 0x5e11:
case 0x5e12:
case 0x5e13:
case 0x5e14:
case 0x5e15:
case 0x5e16:
case 0x5e17:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5110:
case 0x5111:
case 0x5112:
case 0x5113:
case 0x5114:
case 0x5115:
case 0x5116:
case 0x5117:
case 0x5310:
case 0x5311:
case 0x5312:
case 0x5313:
case 0x5314:
case 0x5315:
case 0x5316:
case 0x5317:
case 0x5510:
case 0x5511:
case 0x5512:
case 0x5513:
case 0x5514:
case 0x5515:
case 0x5516:
case 0x5517:
case 0x5710:
case 0x5711:
case 0x5712:
case 0x5713:
case 0x5714:
case 0x5715:
case 0x5716:
case 0x5717:
case 0x5910:
case 0x5911:
case 0x5912:
case 0x5913:
case 0x5914:
case 0x5915:
case 0x5916:
case 0x5917:
case 0x5b10:
case 0x5b11:
case 0x5b12:
case 0x5b13:
case 0x5b14:
case 0x5b15:
case 0x5b16:
case 0x5b17:
case 0x5d10:
case 0x5d11:
case 0x5d12:
case 0x5d13:
case 0x5d14:
case 0x5d15:
case 0x5d16:
case 0x5d17:
case 0x5f10:
case 0x5f11:
case 0x5f12:
case 0x5f13:
case 0x5f14:
case 0x5f15:
case 0x5f16:
case 0x5f17:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5028:
case 0x5029:
case 0x502a:
case 0x502b:
case 0x502c:
case 0x502d:
case 0x502e:
case 0x502f:
case 0x5228:
case 0x5229:
case 0x522a:
case 0x522b:
case 0x522c:
case 0x522d:
case 0x522e:
case 0x522f:
case 0x5428:
case 0x5429:
case 0x542a:
case 0x542b:
case 0x542c:
case 0x542d:
case 0x542e:
case 0x542f:
case 0x5628:
case 0x5629:
case 0x562a:
case 0x562b:
case 0x562c:
case 0x562d:
case 0x562e:
case 0x562f:
case 0x5828:
case 0x5829:
case 0x582a:
case 0x582b:
case 0x582c:
case 0x582d:
case 0x582e:
case 0x582f:
case 0x5a28:
case 0x5a29:
case 0x5a2a:
case 0x5a2b:
case 0x5a2c:
case 0x5a2d:
case 0x5a2e:
case 0x5a2f:
case 0x5c28:
case 0x5c29:
case 0x5c2a:
case 0x5c2b:
case 0x5c2c:
case 0x5c2d:
case 0x5c2e:
case 0x5c2f:
case 0x5e28:
case 0x5e29:
case 0x5e2a:
case 0x5e2b:
case 0x5e2c:
case 0x5e2d:
case 0x5e2e:
case 0x5e2f:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5128:
case 0x5129:
case 0x512a:
case 0x512b:
case 0x512c:
case 0x512d:
case 0x512e:
case 0x512f:
case 0x5328:
case 0x5329:
case 0x532a:
case 0x532b:
case 0x532c:
case 0x532d:
case 0x532e:
case 0x532f:
case 0x5528:
case 0x5529:
case 0x552a:
case 0x552b:
case 0x552c:
case 0x552d:
case 0x552e:
case 0x552f:
case 0x5728:
case 0x5729:
case 0x572a:
case 0x572b:
case 0x572c:
case 0x572d:
case 0x572e:
case 0x572f:
case 0x5928:
case 0x5929:
case 0x592a:
case 0x592b:
case 0x592c:
case 0x592d:
case 0x592e:
case 0x592f:
case 0x5b28:
case 0x5b29:
case 0x5b2a:
case 0x5b2b:
case 0x5b2c:
case 0x5b2d:
case 0x5b2e:
case 0x5b2f:
case 0x5d28:
case 0x5d29:
case 0x5d2a:
case 0x5d2b:
case 0x5d2c:
case 0x5d2d:
case 0x5d2e:
case 0x5d2f:
case 0x5f28:
case 0x5f29:
case 0x5f2a:
case 0x5f2b:
case 0x5f2c:
case 0x5f2d:
case 0x5f2e:
case 0x5f2f:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5030:
case 0x5031:
case 0x5032:
case 0x5033:
case 0x5034:
case 0x5035:
case 0x5036:
case 0x5037:
case 0x5230:
case 0x5231:
case 0x5232:
case 0x5233:
case 0x5234:
case 0x5235:
case 0x5236:
case 0x5237:
case 0x5430:
case 0x5431:
case 0x5432:
case 0x5433:
case 0x5434:
case 0x5435:
case 0x5436:
case 0x5437:
case 0x5630:
case 0x5631:
case 0x5632:
case 0x5633:
case 0x5634:
case 0x5635:
case 0x5636:
case 0x5637:
case 0x5830:
case 0x5831:
case 0x5832:
case 0x5833:
case 0x5834:
case 0x5835:
case 0x5836:
case 0x5837:
case 0x5a30:
case 0x5a31:
case 0x5a32:
case 0x5a33:
case 0x5a34:
case 0x5a35:
case 0x5a36:
case 0x5a37:
case 0x5c30:
case 0x5c31:
case 0x5c32:
case 0x5c33:
case 0x5c34:
case 0x5c35:
case 0x5c36:
case 0x5c37:
case 0x5e30:
case 0x5e31:
case 0x5e32:
case 0x5e33:
case 0x5e34:
case 0x5e35:
case 0x5e36:
case 0x5e37:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5130:
case 0x5131:
case 0x5132:
case 0x5133:
case 0x5134:
case 0x5135:
case 0x5136:
case 0x5137:
case 0x5330:
case 0x5331:
case 0x5332:
case 0x5333:
case 0x5334:
case 0x5335:
case 0x5336:
case 0x5337:
case 0x5530:
case 0x5531:
case 0x5532:
case 0x5533:
case 0x5534:
case 0x5535:
case 0x5536:
case 0x5537:
case 0x5730:
case 0x5731:
case 0x5732:
case 0x5733:
case 0x5734:
case 0x5735:
case 0x5736:
case 0x5737:
case 0x5930:
case 0x5931:
case 0x5932:
case 0x5933:
case 0x5934:
case 0x5935:
case 0x5936:
case 0x5937:
case 0x5b30:
case 0x5b31:
case 0x5b32:
case 0x5b33:
case 0x5b34:
case 0x5b35:
case 0x5b36:
case 0x5b37:
case 0x5d30:
case 0x5d31:
case 0x5d32:
case 0x5d33:
case 0x5d34:
case 0x5d35:
case 0x5d36:
case 0x5d37:
case 0x5f30:
case 0x5f31:
case 0x5f32:
case 0x5f33:
case 0x5f34:
case 0x5f35:
case 0x5f36:
case 0x5f37:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5018:
case 0x5019:
case 0x501a:
case 0x501b:
case 0x501c:
case 0x501d:
case 0x501e:
case 0x501f:
case 0x5218:
case 0x5219:
case 0x521a:
case 0x521b:
case 0x521c:
case 0x521d:
case 0x521e:
case 0x521f:
case 0x5418:
case 0x5419:
case 0x541a:
case 0x541b:
case 0x541c:
case 0x541d:
case 0x541e:
case 0x541f:
case 0x5618:
case 0x5619:
case 0x561a:
case 0x561b:
case 0x561c:
case 0x561d:
case 0x561e:
case 0x561f:
case 0x5818:
case 0x5819:
case 0x581a:
case 0x581b:
case 0x581c:
case 0x581d:
case 0x581e:
case 0x581f:
case 0x5a18:
case 0x5a19:
case 0x5a1a:
case 0x5a1b:
case 0x5a1c:
case 0x5a1d:
case 0x5a1e:
case 0x5a1f:
case 0x5c18:
case 0x5c19:
case 0x5c1a:
case 0x5c1b:
case 0x5c1c:
case 0x5c1d:
case 0x5c1e:
case 0x5c1f:
case 0x5e18:
case 0x5e19:
case 0x5e1a:
case 0x5e1b:
case 0x5e1c:
case 0x5e1d:
case 0x5e1e:
case 0x5e1f:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5118:
case 0x5119:
case 0x511a:
case 0x511b:
case 0x511c:
case 0x511d:
case 0x511e:
case 0x511f:
case 0x5318:
case 0x5319:
case 0x531a:
case 0x531b:
case 0x531c:
case 0x531d:
case 0x531e:
case 0x531f:
case 0x5518:
case 0x5519:
case 0x551a:
case 0x551b:
case 0x551c:
case 0x551d:
case 0x551e:
case 0x551f:
case 0x5718:
case 0x5719:
case 0x571a:
case 0x571b:
case 0x571c:
case 0x571d:
case 0x571e:
case 0x571f:
case 0x5918:
case 0x5919:
case 0x591a:
case 0x591b:
case 0x591c:
case 0x591d:
case 0x591e:
case 0x591f:
case 0x5b18:
case 0x5b19:
case 0x5b1a:
case 0x5b1b:
case 0x5b1c:
case 0x5b1d:
case 0x5b1e:
case 0x5b1f:
case 0x5d18:
case 0x5d19:
case 0x5d1a:
case 0x5d1b:
case 0x5d1c:
case 0x5d1d:
case 0x5d1e:
case 0x5d1f:
case 0x5f18:
case 0x5f19:
case 0x5f1a:
case 0x5f1b:
case 0x5f1c:
case 0x5f1d:
case 0x5f1e:
case 0x5f1f:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5020:
case 0x5021:
case 0x5022:
case 0x5023:
case 0x5024:
case 0x5025:
case 0x5026:
case 0x5027:
case 0x5220:
case 0x5221:
case 0x5222:
case 0x5223:
case 0x5224:
case 0x5225:
case 0x5226:
case 0x5227:
case 0x5420:
case 0x5421:
case 0x5422:
case 0x5423:
case 0x5424:
case 0x5425:
case 0x5426:
case 0x5427:
case 0x5620:
case 0x5621:
case 0x5622:
case 0x5623:
case 0x5624:
case 0x5625:
case 0x5626:
case 0x5627:
case 0x5820:
case 0x5821:
case 0x5822:
case 0x5823:
case 0x5824:
case 0x5825:
case 0x5826:
case 0x5827:
case 0x5a20:
case 0x5a21:
case 0x5a22:
case 0x5a23:
case 0x5a24:
case 0x5a25:
case 0x5a26:
case 0x5a27:
case 0x5c20:
case 0x5c21:
case 0x5c22:
case 0x5c23:
case 0x5c24:
case 0x5c25:
case 0x5c26:
case 0x5c27:
case 0x5e20:
case 0x5e21:
case 0x5e22:
case 0x5e23:
case 0x5e24:
case 0x5e25:
case 0x5e26:
case 0x5e27:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5120:
case 0x5121:
case 0x5122:
case 0x5123:
case 0x5124:
case 0x5125:
case 0x5126:
case 0x5127:
case 0x5320:
case 0x5321:
case 0x5322:
case 0x5323:
case 0x5324:
case 0x5325:
case 0x5326:
case 0x5327:
case 0x5520:
case 0x5521:
case 0x5522:
case 0x5523:
case 0x5524:
case 0x5525:
case 0x5526:
case 0x5527:
case 0x5720:
case 0x5721:
case 0x5722:
case 0x5723:
case 0x5724:
case 0x5725:
case 0x5726:
case 0x5727:
case 0x5920:
case 0x5921:
case 0x5922:
case 0x5923:
case 0x5924:
case 0x5925:
case 0x5926:
case 0x5927:
case 0x5b20:
case 0x5b21:
case 0x5b22:
case 0x5b23:
case 0x5b24:
case 0x5b25:
case 0x5b26:
case 0x5b27:
case 0x5d20:
case 0x5d21:
case 0x5d22:
case 0x5d23:
case 0x5d24:
case 0x5d25:
case 0x5d26:
case 0x5d27:
case 0x5f20:
case 0x5f21:
case 0x5f22:
case 0x5f23:
case 0x5f24:
case 0x5f25:
case 0x5f26:
case 0x5f27:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x5000:
case 0x5001:
case 0x5002:
case 0x5003:
case 0x5004:
case 0x5005:
case 0x5006:
case 0x5007:
case 0x5200:
case 0x5201:
case 0x5202:
case 0x5203:
case 0x5204:
case 0x5205:
case 0x5206:
case 0x5207:
case 0x5400:
case 0x5401:
case 0x5402:
case 0x5403:
case 0x5404:
case 0x5405:
case 0x5406:
case 0x5407:
case 0x5600:
case 0x5601:
case 0x5602:
case 0x5603:
case 0x5604:
case 0x5605:
case 0x5606:
case 0x5607:
case 0x5800:
case 0x5801:
case 0x5802:
case 0x5803:
case 0x5804:
case 0x5805:
case 0x5806:
case 0x5807:
case 0x5a00:
case 0x5a01:
case 0x5a02:
case 0x5a03:
case 0x5a04:
case 0x5a05:
case 0x5a06:
case 0x5a07:
case 0x5c00:
case 0x5c01:
case 0x5c02:
case 0x5c03:
case 0x5c04:
case 0x5c05:
case 0x5c06:
case 0x5c07:
case 0x5e00:
case 0x5e01:
case 0x5e02:
case 0x5e03:
case 0x5e04:
case 0x5e05:
case 0x5e06:
case 0x5e07:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); ADD(src, dst);
	}
	break;

case 0x5100:
case 0x5101:
case 0x5102:
case 0x5103:
case 0x5104:
case 0x5105:
case 0x5106:
case 0x5107:
case 0x5300:
case 0x5301:
case 0x5302:
case 0x5303:
case 0x5304:
case 0x5305:
case 0x5306:
case 0x5307:
case 0x5500:
case 0x5501:
case 0x5502:
case 0x5503:
case 0x5504:
case 0x5505:
case 0x5506:
case 0x5507:
case 0x5700:
case 0x5701:
case 0x5702:
case 0x5703:
case 0x5704:
case 0x5705:
case 0x5706:
case 0x5707:
case 0x5900:
case 0x5901:
case 0x5902:
case 0x5903:
case 0x5904:
case 0x5905:
case 0x5906:
case 0x5907:
case 0x5b00:
case 0x5b01:
case 0x5b02:
case 0x5b03:
case 0x5b04:
case 0x5b05:
case 0x5b06:
case 0x5b07:
case 0x5d00:
case 0x5d01:
case 0x5d02:
case 0x5d03:
case 0x5d04:
case 0x5d05:
case 0x5d06:
case 0x5d07:
case 0x5f00:
case 0x5f01:
case 0x5f02:
case 0x5f03:
case 0x5f04:
case 0x5f05:
case 0x5f06:
case 0x5f07:
	{
	 HAM<uint8, IMMEDIATE> src(this, instr_b11_b9 ? instr_b11_b9 : 8); HAM<uint8, DATA_REG_DIR> dst(this, instr_b2_b0); SUB(src, dst);
	}
	break;

case 0x013c:
case 0x033c:
case 0x053c:
case 0x073c:
case 0x093c:
case 0x0b3c:
case 0x0d3c:
case 0x0f3c:
	{
	 HAM<uint8, IMMEDIATE> targ(this); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0x13fa:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11fa:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x10ba:
case 0x12ba:
case 0x14ba:
case 0x16ba:
case 0x18ba:
case 0x1aba:
case 0x1cba:
case 0x1eba:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x117a:
case 0x137a:
case 0x157a:
case 0x177a:
case 0x197a:
case 0x1b7a:
case 0x1d7a:
case 0x1f7a:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x11ba:
case 0x13ba:
case 0x15ba:
case 0x17ba:
case 0x19ba:
case 0x1bba:
case 0x1dba:
case 0x1fba:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x10fa:
case 0x12fa:
case 0x14fa:
case 0x16fa:
case 0x18fa:
case 0x1afa:
case 0x1cfa:
case 0x1efa:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x113a:
case 0x133a:
case 0x153a:
case 0x173a:
case 0x193a:
case 0x1b3a:
case 0x1d3a:
case 0x1f3a:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd03a:
case 0xd23a:
case 0xd43a:
case 0xd63a:
case 0xd83a:
case 0xda3a:
case 0xdc3a:
case 0xde3a:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc03a:
case 0xc23a:
case 0xc43a:
case 0xc63a:
case 0xc83a:
case 0xca3a:
case 0xcc3a:
case 0xce3a:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb03a:
case 0xb23a:
case 0xb43a:
case 0xb63a:
case 0xb83a:
case 0xba3a:
case 0xbc3a:
case 0xbe3a:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x103a:
case 0x123a:
case 0x143a:
case 0x163a:
case 0x183a:
case 0x1a3a:
case 0x1c3a:
case 0x1e3a:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x803a:
case 0x823a:
case 0x843a:
case 0x863a:
case 0x883a:
case 0x8a3a:
case 0x8c3a:
case 0x8e3a:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x903a:
case 0x923a:
case 0x943a:
case 0x963a:
case 0x983a:
case 0x9a3a:
case 0x9c3a:
case 0x9e3a:
	{
	 HAM<uint8, PC_DISP> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x013a:
case 0x033a:
case 0x053a:
case 0x073a:
case 0x093a:
case 0x0b3a:
case 0x0d3a:
case 0x0f3a:
	{
	 HAM<uint8, PC_DISP> targ(this); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0x13fb:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, ABS_LONG> dst(this); MOVE(src, dst);
	}
	break;

case 0x11fb:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, ABS_SHORT> dst(this); MOVE(src, dst);
	}
	break;

case 0x10bb:
case 0x12bb:
case 0x14bb:
case 0x16bb:
case 0x18bb:
case 0x1abb:
case 0x1cbb:
case 0x1ebb:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, ADDR_REG_INDIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x117b:
case 0x137b:
case 0x157b:
case 0x177b:
case 0x197b:
case 0x1b7b:
case 0x1d7b:
case 0x1f7b:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, ADDR_REG_INDIR_DISP> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x11bb:
case 0x13bb:
case 0x15bb:
case 0x17bb:
case 0x19bb:
case 0x1bbb:
case 0x1dbb:
case 0x1fbb:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, ADDR_REG_INDIR_INDX> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x10fb:
case 0x12fb:
case 0x14fb:
case 0x16fb:
case 0x18fb:
case 0x1afb:
case 0x1cfb:
case 0x1efb:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, ADDR_REG_INDIR_POST> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x113b:
case 0x133b:
case 0x153b:
case 0x173b:
case 0x193b:
case 0x1b3b:
case 0x1d3b:
case 0x1f3b:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, ADDR_REG_INDIR_PRE> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0xd03b:
case 0xd23b:
case 0xd43b:
case 0xd63b:
case 0xd83b:
case 0xda3b:
case 0xdc3b:
case 0xde3b:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); ADD(src, dst);
	}
	break;

case 0xc03b:
case 0xc23b:
case 0xc43b:
case 0xc63b:
case 0xc83b:
case 0xca3b:
case 0xcc3b:
case 0xce3b:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); AND(src, dst);
	}
	break;

case 0xb03b:
case 0xb23b:
case 0xb43b:
case 0xb63b:
case 0xb83b:
case 0xba3b:
case 0xbc3b:
case 0xbe3b:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); CMP(src, dst);
	}
	break;

case 0x103b:
case 0x123b:
case 0x143b:
case 0x163b:
case 0x183b:
case 0x1a3b:
case 0x1c3b:
case 0x1e3b:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); MOVE(src, dst);
	}
	break;

case 0x803b:
case 0x823b:
case 0x843b:
case 0x863b:
case 0x883b:
case 0x8a3b:
case 0x8c3b:
case 0x8e3b:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); OR(src, dst);
	}
	break;

case 0x903b:
case 0x923b:
case 0x943b:
case 0x963b:
case 0x983b:
case 0x9a3b:
case 0x9c3b:
case 0x9e3b:
	{
	 HAM<uint8, PC_INDEX> src(this); HAM<uint8, DATA_REG_DIR> dst(this, instr_b11_b9); SUB(src, dst);
	}
	break;

case 0x013b:
case 0x033b:
case 0x053b:
case 0x073b:
case 0x093b:
case 0x0b3b:
case 0x0d3b:
case 0x0f3b:
	{
	 HAM<uint8, PC_INDEX> targ(this); BTST(targ, D[instr_b11_b9]);
	}
	break;

case 0xa000:
case 0xa001:
case 0xa002:
case 0xa003:
case 0xa004:
case 0xa005:
case 0xa006:
case 0xa007:
case 0xa008:
case 0xa009:
case 0xa00a:
case 0xa00b:
case 0xa00c:
case 0xa00d:
case 0xa00e:
case 0xa00f:
case 0xa010:
case 0xa011:
case 0xa012:
case 0xa013:
case 0xa014:
case 0xa015:
case 0xa016:
case 0xa017:
case 0xa018:
case 0xa019:
case 0xa01a:
case 0xa01b:
case 0xa01c:
case 0xa01d:
case 0xa01e:
case 0xa01f:
case 0xa020:
case 0xa021:
case 0xa022:
case 0xa023:
case 0xa024:
case 0xa025:
case 0xa026:
case 0xa027:
case 0xa028:
case 0xa029:
case 0xa02a:
case 0xa02b:
case 0xa02c:
case 0xa02d:
case 0xa02e:
case 0xa02f:
case 0xa030:
case 0xa031:
case 0xa032:
case 0xa033:
case 0xa034:
case 0xa035:
case 0xa036:
case 0xa037:
case 0xa038:
case 0xa039:
case 0xa03a:
case 0xa03b:
case 0xa03c:
case 0xa03d:
case 0xa03e:
case 0xa03f:
case 0xa040:
case 0xa041:
case 0xa042:
case 0xa043:
case 0xa044:
case 0xa045:
case 0xa046:
case 0xa047:
case 0xa048:
case 0xa049:
case 0xa04a:
case 0xa04b:
case 0xa04c:
case 0xa04d:
case 0xa04e:
case 0xa04f:
case 0xa050:
case 0xa051:
case 0xa052:
case 0xa053:
case 0xa054:
case 0xa055:
case 0xa056:
case 0xa057:
case 0xa058:
case 0xa059:
case 0xa05a:
case 0xa05b:
case 0xa05c:
case 0xa05d:
case 0xa05e:
case 0xa05f:
case 0xa060:
case 0xa061:
case 0xa062:
case 0xa063:
case 0xa064:
case 0xa065:
case 0xa066:
case 0xa067:
case 0xa068:
case 0xa069:
case 0xa06a:
case 0xa06b:
case 0xa06c:
case 0xa06d:
case 0xa06e:
case 0xa06f:
case 0xa070:
case 0xa071:
case 0xa072:
case 0xa073:
case 0xa074:
case 0xa075:
case 0xa076:
case 0xa077:
case 0xa078:
case 0xa079:
case 0xa07a:
case 0xa07b:
case 0xa07c:
case 0xa07d:
case 0xa07e:
case 0xa07f:
case 0xa080:
case 0xa081:
case 0xa082:
case 0xa083:
case 0xa084:
case 0xa085:
case 0xa086:
case 0xa087:
case 0xa088:
case 0xa089:
case 0xa08a:
case 0xa08b:
case 0xa08c:
case 0xa08d:
case 0xa08e:
case 0xa08f:
case 0xa090:
case 0xa091:
case 0xa092:
case 0xa093:
case 0xa094:
case 0xa095:
case 0xa096:
case 0xa097:
case 0xa098:
case 0xa099:
case 0xa09a:
case 0xa09b:
case 0xa09c:
case 0xa09d:
case 0xa09e:
case 0xa09f:
case 0xa0a0:
case 0xa0a1:
case 0xa0a2:
case 0xa0a3:
case 0xa0a4:
case 0xa0a5:
case 0xa0a6:
case 0xa0a7:
case 0xa0a8:
case 0xa0a9:
case 0xa0aa:
case 0xa0ab:
case 0xa0ac:
case 0xa0ad:
case 0xa0ae:
case 0xa0af:
case 0xa0b0:
case 0xa0b1:
case 0xa0b2:
case 0xa0b3:
case 0xa0b4:
case 0xa0b5:
case 0xa0b6:
case 0xa0b7:
case 0xa0b8:
case 0xa0b9:
case 0xa0ba:
case 0xa0bb:
case 0xa0bc:
case 0xa0bd:
case 0xa0be:
case 0xa0bf:
case 0xa0c0:
case 0xa0c1:
case 0xa0c2:
case 0xa0c3:
case 0xa0c4:
case 0xa0c5:
case 0xa0c6:
case 0xa0c7:
case 0xa0c8:
case 0xa0c9:
case 0xa0ca:
case 0xa0cb:
case 0xa0cc:
case 0xa0cd:
case 0xa0ce:
case 0xa0cf:
case 0xa0d0:
case 0xa0d1:
case 0xa0d2:
case 0xa0d3:
case 0xa0d4:
case 0xa0d5:
case 0xa0d6:
case 0xa0d7:
case 0xa0d8:
case 0xa0d9:
case 0xa0da:
case 0xa0db:
case 0xa0dc:
case 0xa0dd:
case 0xa0de:
case 0xa0df:
case 0xa0e0:
case 0xa0e1:
case 0xa0e2:
case 0xa0e3:
case 0xa0e4:
case 0xa0e5:
case 0xa0e6:
case 0xa0e7:
case 0xa0e8:
case 0xa0e9:
case 0xa0ea:
case 0xa0eb:
case 0xa0ec:
case 0xa0ed:
case 0xa0ee:
case 0xa0ef:
case 0xa0f0:
case 0xa0f1:
case 0xa0f2:
case 0xa0f3:
case 0xa0f4:
case 0xa0f5:
case 0xa0f6:
case 0xa0f7:
case 0xa0f8:
case 0xa0f9:
case 0xa0fa:
case 0xa0fb:
case 0xa0fc:
case 0xa0fd:
case 0xa0fe:
case 0xa0ff:
case 0xa100:
case 0xa101:
case 0xa102:
case 0xa103:
case 0xa104:
case 0xa105:
case 0xa106:
case 0xa107:
case 0xa108:
case 0xa109:
case 0xa10a:
case 0xa10b:
case 0xa10c:
case 0xa10d:
case 0xa10e:
case 0xa10f:
case 0xa110:
case 0xa111:
case 0xa112:
case 0xa113:
case 0xa114:
case 0xa115:
case 0xa116:
case 0xa117:
case 0xa118:
case 0xa119:
case 0xa11a:
case 0xa11b:
case 0xa11c:
case 0xa11d:
case 0xa11e:
case 0xa11f:
case 0xa120:
case 0xa121:
case 0xa122:
case 0xa123:
case 0xa124:
case 0xa125:
case 0xa126:
case 0xa127:
case 0xa128:
case 0xa129:
case 0xa12a:
case 0xa12b:
case 0xa12c:
case 0xa12d:
case 0xa12e:
case 0xa12f:
case 0xa130:
case 0xa131:
case 0xa132:
case 0xa133:
case 0xa134:
case 0xa135:
case 0xa136:
case 0xa137:
case 0xa138:
case 0xa139:
case 0xa13a:
case 0xa13b:
case 0xa13c:
case 0xa13d:
case 0xa13e:
case 0xa13f:
case 0xa140:
case 0xa141:
case 0xa142:
case 0xa143:
case 0xa144:
case 0xa145:
case 0xa146:
case 0xa147:
case 0xa148:
case 0xa149:
case 0xa14a:
case 0xa14b:
case 0xa14c:
case 0xa14d:
case 0xa14e:
case 0xa14f:
case 0xa150:
case 0xa151:
case 0xa152:
case 0xa153:
case 0xa154:
case 0xa155:
case 0xa156:
case 0xa157:
case 0xa158:
case 0xa159:
case 0xa15a:
case 0xa15b:
case 0xa15c:
case 0xa15d:
case 0xa15e:
case 0xa15f:
case 0xa160:
case 0xa161:
case 0xa162:
case 0xa163:
case 0xa164:
case 0xa165:
case 0xa166:
case 0xa167:
case 0xa168:
case 0xa169:
case 0xa16a:
case 0xa16b:
case 0xa16c:
case 0xa16d:
case 0xa16e:
case 0xa16f:
case 0xa170:
case 0xa171:
case 0xa172:
case 0xa173:
case 0xa174:
case 0xa175:
case 0xa176:
case 0xa177:
case 0xa178:
case 0xa179:
case 0xa17a:
case 0xa17b:
case 0xa17c:
case 0xa17d:
case 0xa17e:
case 0xa17f:
case 0xa180:
case 0xa181:
case 0xa182:
case 0xa183:
case 0xa184:
case 0xa185:
case 0xa186:
case 0xa187:
case 0xa188:
case 0xa189:
case 0xa18a:
case 0xa18b:
case 0xa18c:
case 0xa18d:
case 0xa18e:
case 0xa18f:
case 0xa190:
case 0xa191:
case 0xa192:
case 0xa193:
case 0xa194:
case 0xa195:
case 0xa196:
case 0xa197:
case 0xa198:
case 0xa199:
case 0xa19a:
case 0xa19b:
case 0xa19c:
case 0xa19d:
case 0xa19e:
case 0xa19f:
case 0xa1a0:
case 0xa1a1:
case 0xa1a2:
case 0xa1a3:
case 0xa1a4:
case 0xa1a5:
case 0xa1a6:
case 0xa1a7:
case 0xa1a8:
case 0xa1a9:
case 0xa1aa:
case 0xa1ab:
case 0xa1ac:
case 0xa1ad:
case 0xa1ae:
case 0xa1af:
case 0xa1b0:
case 0xa1b1:
case 0xa1b2:
case 0xa1b3:
case 0xa1b4:
case 0xa1b5:
case 0xa1b6:
case 0xa1b7:
case 0xa1b8:
case 0xa1b9:
case 0xa1ba:
case 0xa1bb:
case 0xa1bc:
case 0xa1bd:
case 0xa1be:
case 0xa1bf:
case 0xa1c0:
case 0xa1c1:
case 0xa1c2:
case 0xa1c3:
case 0xa1c4:
case 0xa1c5:
case 0xa1c6:
case 0xa1c7:
case 0xa1c8:
case 0xa1c9:
case 0xa1ca:
case 0xa1cb:
case 0xa1cc:
case 0xa1cd:
case 0xa1ce:
case 0xa1cf:
case 0xa1d0:
case 0xa1d1:
case 0xa1d2:
case 0xa1d3:
case 0xa1d4:
case 0xa1d5:
case 0xa1d6:
case 0xa1d7:
case 0xa1d8:
case 0xa1d9:
case 0xa1da:
case 0xa1db:
case 0xa1dc:
case 0xa1dd:
case 0xa1de:
case 0xa1df:
case 0xa1e0:
case 0xa1e1:
case 0xa1e2:
case 0xa1e3:
case 0xa1e4:
case 0xa1e5:
case 0xa1e6:
case 0xa1e7:
case 0xa1e8:
case 0xa1e9:
case 0xa1ea:
case 0xa1eb:
case 0xa1ec:
case 0xa1ed:
case 0xa1ee:
case 0xa1ef:
case 0xa1f0:
case 0xa1f1:
case 0xa1f2:
case 0xa1f3:
case 0xa1f4:
case 0xa1f5:
case 0xa1f6:
case 0xa1f7:
case 0xa1f8:
case 0xa1f9:
case 0xa1fa:
case 0xa1fb:
case 0xa1fc:
case 0xa1fd:
case 0xa1fe:
case 0xa1ff:
case 0xa200:
case 0xa201:
case 0xa202:
case 0xa203:
case 0xa204:
case 0xa205:
case 0xa206:
case 0xa207:
case 0xa208:
case 0xa209:
case 0xa20a:
case 0xa20b:
case 0xa20c:
case 0xa20d:
case 0xa20e:
case 0xa20f:
case 0xa210:
case 0xa211:
case 0xa212:
case 0xa213:
case 0xa214:
case 0xa215:
case 0xa216:
case 0xa217:
case 0xa218:
case 0xa219:
case 0xa21a:
case 0xa21b:
case 0xa21c:
case 0xa21d:
case 0xa21e:
case 0xa21f:
case 0xa220:
case 0xa221:
case 0xa222:
case 0xa223:
case 0xa224:
case 0xa225:
case 0xa226:
case 0xa227:
case 0xa228:
case 0xa229:
case 0xa22a:
case 0xa22b:
case 0xa22c:
case 0xa22d:
case 0xa22e:
case 0xa22f:
case 0xa230:
case 0xa231:
case 0xa232:
case 0xa233:
case 0xa234:
case 0xa235:
case 0xa236:
case 0xa237:
case 0xa238:
case 0xa239:
case 0xa23a:
case 0xa23b:
case 0xa23c:
case 0xa23d:
case 0xa23e:
case 0xa23f:
case 0xa240:
case 0xa241:
case 0xa242:
case 0xa243:
case 0xa244:
case 0xa245:
case 0xa246:
case 0xa247:
case 0xa248:
case 0xa249:
case 0xa24a:
case 0xa24b:
case 0xa24c:
case 0xa24d:
case 0xa24e:
case 0xa24f:
case 0xa250:
case 0xa251:
case 0xa252:
case 0xa253:
case 0xa254:
case 0xa255:
case 0xa256:
case 0xa257:
case 0xa258:
case 0xa259:
case 0xa25a:
case 0xa25b:
case 0xa25c:
case 0xa25d:
case 0xa25e:
case 0xa25f:
case 0xa260:
case 0xa261:
case 0xa262:
case 0xa263:
case 0xa264:
case 0xa265:
case 0xa266:
case 0xa267:
case 0xa268:
case 0xa269:
case 0xa26a:
case 0xa26b:
case 0xa26c:
case 0xa26d:
case 0xa26e:
case 0xa26f:
case 0xa270:
case 0xa271:
case 0xa272:
case 0xa273:
case 0xa274:
case 0xa275:
case 0xa276:
case 0xa277:
case 0xa278:
case 0xa279:
case 0xa27a:
case 0xa27b:
case 0xa27c:
case 0xa27d:
case 0xa27e:
case 0xa27f:
case 0xa280:
case 0xa281:
case 0xa282:
case 0xa283:
case 0xa284:
case 0xa285:
case 0xa286:
case 0xa287:
case 0xa288:
case 0xa289:
case 0xa28a:
case 0xa28b:
case 0xa28c:
case 0xa28d:
case 0xa28e:
case 0xa28f:
case 0xa290:
case 0xa291:
case 0xa292:
case 0xa293:
case 0xa294:
case 0xa295:
case 0xa296:
case 0xa297:
case 0xa298:
case 0xa299:
case 0xa29a:
case 0xa29b:
case 0xa29c:
case 0xa29d:
case 0xa29e:
case 0xa29f:
case 0xa2a0:
case 0xa2a1:
case 0xa2a2:
case 0xa2a3:
case 0xa2a4:
case 0xa2a5:
case 0xa2a6:
case 0xa2a7:
case 0xa2a8:
case 0xa2a9:
case 0xa2aa:
case 0xa2ab:
case 0xa2ac:
case 0xa2ad:
case 0xa2ae:
case 0xa2af:
case 0xa2b0:
case 0xa2b1:
case 0xa2b2:
case 0xa2b3:
case 0xa2b4:
case 0xa2b5:
case 0xa2b6:
case 0xa2b7:
case 0xa2b8:
case 0xa2b9:
case 0xa2ba:
case 0xa2bb:
case 0xa2bc:
case 0xa2bd:
case 0xa2be:
case 0xa2bf:
case 0xa2c0:
case 0xa2c1:
case 0xa2c2:
case 0xa2c3:
case 0xa2c4:
case 0xa2c5:
case 0xa2c6:
case 0xa2c7:
case 0xa2c8:
case 0xa2c9:
case 0xa2ca:
case 0xa2cb:
case 0xa2cc:
case 0xa2cd:
case 0xa2ce:
case 0xa2cf:
case 0xa2d0:
case 0xa2d1:
case 0xa2d2:
case 0xa2d3:
case 0xa2d4:
case 0xa2d5:
case 0xa2d6:
case 0xa2d7:
case 0xa2d8:
case 0xa2d9:
case 0xa2da:
case 0xa2db:
case 0xa2dc:
case 0xa2dd:
case 0xa2de:
case 0xa2df:
case 0xa2e0:
case 0xa2e1:
case 0xa2e2:
case 0xa2e3:
case 0xa2e4:
case 0xa2e5:
case 0xa2e6:
case 0xa2e7:
case 0xa2e8:
case 0xa2e9:
case 0xa2ea:
case 0xa2eb:
case 0xa2ec:
case 0xa2ed:
case 0xa2ee:
case 0xa2ef:
case 0xa2f0:
case 0xa2f1:
case 0xa2f2:
case 0xa2f3:
case 0xa2f4:
case 0xa2f5:
case 0xa2f6:
case 0xa2f7:
case 0xa2f8:
case 0xa2f9:
case 0xa2fa:
case 0xa2fb:
case 0xa2fc:
case 0xa2fd:
case 0xa2fe:
case 0xa2ff:
case 0xa300:
case 0xa301:
case 0xa302:
case 0xa303:
case 0xa304:
case 0xa305:
case 0xa306:
case 0xa307:
case 0xa308:
case 0xa309:
case 0xa30a:
case 0xa30b:
case 0xa30c:
case 0xa30d:
case 0xa30e:
case 0xa30f:
case 0xa310:
case 0xa311:
case 0xa312:
case 0xa313:
case 0xa314:
case 0xa315:
case 0xa316:
case 0xa317:
case 0xa318:
case 0xa319:
case 0xa31a:
case 0xa31b:
case 0xa31c:
case 0xa31d:
case 0xa31e:
case 0xa31f:
case 0xa320:
case 0xa321:
case 0xa322:
case 0xa323:
case 0xa324:
case 0xa325:
case 0xa326:
case 0xa327:
case 0xa328:
case 0xa329:
case 0xa32a:
case 0xa32b:
case 0xa32c:
case 0xa32d:
case 0xa32e:
case 0xa32f:
case 0xa330:
case 0xa331:
case 0xa332:
case 0xa333:
case 0xa334:
case 0xa335:
case 0xa336:
case 0xa337:
case 0xa338:
case 0xa339:
case 0xa33a:
case 0xa33b:
case 0xa33c:
case 0xa33d:
case 0xa33e:
case 0xa33f:
case 0xa340:
case 0xa341:
case 0xa342:
case 0xa343:
case 0xa344:
case 0xa345:
case 0xa346:
case 0xa347:
case 0xa348:
case 0xa349:
case 0xa34a:
case 0xa34b:
case 0xa34c:
case 0xa34d:
case 0xa34e:
case 0xa34f:
case 0xa350:
case 0xa351:
case 0xa352:
case 0xa353:
case 0xa354:
case 0xa355:
case 0xa356:
case 0xa357:
case 0xa358:
case 0xa359:
case 0xa35a:
case 0xa35b:
case 0xa35c:
case 0xa35d:
case 0xa35e:
case 0xa35f:
case 0xa360:
case 0xa361:
case 0xa362:
case 0xa363:
case 0xa364:
case 0xa365:
case 0xa366:
case 0xa367:
case 0xa368:
case 0xa369:
case 0xa36a:
case 0xa36b:
case 0xa36c:
case 0xa36d:
case 0xa36e:
case 0xa36f:
case 0xa370:
case 0xa371:
case 0xa372:
case 0xa373:
case 0xa374:
case 0xa375:
case 0xa376:
case 0xa377:
case 0xa378:
case 0xa379:
case 0xa37a:
case 0xa37b:
case 0xa37c:
case 0xa37d:
case 0xa37e:
case 0xa37f:
case 0xa380:
case 0xa381:
case 0xa382:
case 0xa383:
case 0xa384:
case 0xa385:
case 0xa386:
case 0xa387:
case 0xa388:
case 0xa389:
case 0xa38a:
case 0xa38b:
case 0xa38c:
case 0xa38d:
case 0xa38e:
case 0xa38f:
case 0xa390:
case 0xa391:
case 0xa392:
case 0xa393:
case 0xa394:
case 0xa395:
case 0xa396:
case 0xa397:
case 0xa398:
case 0xa399:
case 0xa39a:
case 0xa39b:
case 0xa39c:
case 0xa39d:
case 0xa39e:
case 0xa39f:
case 0xa3a0:
case 0xa3a1:
case 0xa3a2:
case 0xa3a3:
case 0xa3a4:
case 0xa3a5:
case 0xa3a6:
case 0xa3a7:
case 0xa3a8:
case 0xa3a9:
case 0xa3aa:
case 0xa3ab:
case 0xa3ac:
case 0xa3ad:
case 0xa3ae:
case 0xa3af:
case 0xa3b0:
case 0xa3b1:
case 0xa3b2:
case 0xa3b3:
case 0xa3b4:
case 0xa3b5:
case 0xa3b6:
case 0xa3b7:
case 0xa3b8:
case 0xa3b9:
case 0xa3ba:
case 0xa3bb:
case 0xa3bc:
case 0xa3bd:
case 0xa3be:
case 0xa3bf:
case 0xa3c0:
case 0xa3c1:
case 0xa3c2:
case 0xa3c3:
case 0xa3c4:
case 0xa3c5:
case 0xa3c6:
case 0xa3c7:
case 0xa3c8:
case 0xa3c9:
case 0xa3ca:
case 0xa3cb:
case 0xa3cc:
case 0xa3cd:
case 0xa3ce:
case 0xa3cf:
case 0xa3d0:
case 0xa3d1:
case 0xa3d2:
case 0xa3d3:
case 0xa3d4:
case 0xa3d5:
case 0xa3d6:
case 0xa3d7:
case 0xa3d8:
case 0xa3d9:
case 0xa3da:
case 0xa3db:
case 0xa3dc:
case 0xa3dd:
case 0xa3de:
case 0xa3df:
case 0xa3e0:
case 0xa3e1:
case 0xa3e2:
case 0xa3e3:
case 0xa3e4:
case 0xa3e5:
case 0xa3e6:
case 0xa3e7:
case 0xa3e8:
case 0xa3e9:
case 0xa3ea:
case 0xa3eb:
case 0xa3ec:
case 0xa3ed:
case 0xa3ee:
case 0xa3ef:
case 0xa3f0:
case 0xa3f1:
case 0xa3f2:
case 0xa3f3:
case 0xa3f4:
case 0xa3f5:
case 0xa3f6:
case 0xa3f7:
case 0xa3f8:
case 0xa3f9:
case 0xa3fa:
case 0xa3fb:
case 0xa3fc:
case 0xa3fd:
case 0xa3fe:
case 0xa3ff:
case 0xa400:
case 0xa401:
case 0xa402:
case 0xa403:
case 0xa404:
case 0xa405:
case 0xa406:
case 0xa407:
case 0xa408:
case 0xa409:
case 0xa40a:
case 0xa40b:
case 0xa40c:
case 0xa40d:
case 0xa40e:
case 0xa40f:
case 0xa410:
case 0xa411:
case 0xa412:
case 0xa413:
case 0xa414:
case 0xa415:
case 0xa416:
case 0xa417:
case 0xa418:
case 0xa419:
case 0xa41a:
case 0xa41b:
case 0xa41c:
case 0xa41d:
case 0xa41e:
case 0xa41f:
case 0xa420:
case 0xa421:
case 0xa422:
case 0xa423:
case 0xa424:
case 0xa425:
case 0xa426:
case 0xa427:
case 0xa428:
case 0xa429:
case 0xa42a:
case 0xa42b:
case 0xa42c:
case 0xa42d:
case 0xa42e:
case 0xa42f:
case 0xa430:
case 0xa431:
case 0xa432:
case 0xa433:
case 0xa434:
case 0xa435:
case 0xa436:
case 0xa437:
case 0xa438:
case 0xa439:
case 0xa43a:
case 0xa43b:
case 0xa43c:
case 0xa43d:
case 0xa43e:
case 0xa43f:
case 0xa440:
case 0xa441:
case 0xa442:
case 0xa443:
case 0xa444:
case 0xa445:
case 0xa446:
case 0xa447:
case 0xa448:
case 0xa449:
case 0xa44a:
case 0xa44b:
case 0xa44c:
case 0xa44d:
case 0xa44e:
case 0xa44f:
case 0xa450:
case 0xa451:
case 0xa452:
case 0xa453:
case 0xa454:
case 0xa455:
case 0xa456:
case 0xa457:
case 0xa458:
case 0xa459:
case 0xa45a:
case 0xa45b:
case 0xa45c:
case 0xa45d:
case 0xa45e:
case 0xa45f:
case 0xa460:
case 0xa461:
case 0xa462:
case 0xa463:
case 0xa464:
case 0xa465:
case 0xa466:
case 0xa467:
case 0xa468:
case 0xa469:
case 0xa46a:
case 0xa46b:
case 0xa46c:
case 0xa46d:
case 0xa46e:
case 0xa46f:
case 0xa470:
case 0xa471:
case 0xa472:
case 0xa473:
case 0xa474:
case 0xa475:
case 0xa476:
case 0xa477:
case 0xa478:
case 0xa479:
case 0xa47a:
case 0xa47b:
case 0xa47c:
case 0xa47d:
case 0xa47e:
case 0xa47f:
case 0xa480:
case 0xa481:
case 0xa482:
case 0xa483:
case 0xa484:
case 0xa485:
case 0xa486:
case 0xa487:
case 0xa488:
case 0xa489:
case 0xa48a:
case 0xa48b:
case 0xa48c:
case 0xa48d:
case 0xa48e:
case 0xa48f:
case 0xa490:
case 0xa491:
case 0xa492:
case 0xa493:
case 0xa494:
case 0xa495:
case 0xa496:
case 0xa497:
case 0xa498:
case 0xa499:
case 0xa49a:
case 0xa49b:
case 0xa49c:
case 0xa49d:
case 0xa49e:
case 0xa49f:
case 0xa4a0:
case 0xa4a1:
case 0xa4a2:
case 0xa4a3:
case 0xa4a4:
case 0xa4a5:
case 0xa4a6:
case 0xa4a7:
case 0xa4a8:
case 0xa4a9:
case 0xa4aa:
case 0xa4ab:
case 0xa4ac:
case 0xa4ad:
case 0xa4ae:
case 0xa4af:
case 0xa4b0:
case 0xa4b1:
case 0xa4b2:
case 0xa4b3:
case 0xa4b4:
case 0xa4b5:
case 0xa4b6:
case 0xa4b7:
case 0xa4b8:
case 0xa4b9:
case 0xa4ba:
case 0xa4bb:
case 0xa4bc:
case 0xa4bd:
case 0xa4be:
case 0xa4bf:
case 0xa4c0:
case 0xa4c1:
case 0xa4c2:
case 0xa4c3:
case 0xa4c4:
case 0xa4c5:
case 0xa4c6:
case 0xa4c7:
case 0xa4c8:
case 0xa4c9:
case 0xa4ca:
case 0xa4cb:
case 0xa4cc:
case 0xa4cd:
case 0xa4ce:
case 0xa4cf:
case 0xa4d0:
case 0xa4d1:
case 0xa4d2:
case 0xa4d3:
case 0xa4d4:
case 0xa4d5:
case 0xa4d6:
case 0xa4d7:
case 0xa4d8:
case 0xa4d9:
case 0xa4da:
case 0xa4db:
case 0xa4dc:
case 0xa4dd:
case 0xa4de:
case 0xa4df:
case 0xa4e0:
case 0xa4e1:
case 0xa4e2:
case 0xa4e3:
case 0xa4e4:
case 0xa4e5:
case 0xa4e6:
case 0xa4e7:
case 0xa4e8:
case 0xa4e9:
case 0xa4ea:
case 0xa4eb:
case 0xa4ec:
case 0xa4ed:
case 0xa4ee:
case 0xa4ef:
case 0xa4f0:
case 0xa4f1:
case 0xa4f2:
case 0xa4f3:
case 0xa4f4:
case 0xa4f5:
case 0xa4f6:
case 0xa4f7:
case 0xa4f8:
case 0xa4f9:
case 0xa4fa:
case 0xa4fb:
case 0xa4fc:
case 0xa4fd:
case 0xa4fe:
case 0xa4ff:
case 0xa500:
case 0xa501:
case 0xa502:
case 0xa503:
case 0xa504:
case 0xa505:
case 0xa506:
case 0xa507:
case 0xa508:
case 0xa509:
case 0xa50a:
case 0xa50b:
case 0xa50c:
case 0xa50d:
case 0xa50e:
case 0xa50f:
case 0xa510:
case 0xa511:
case 0xa512:
case 0xa513:
case 0xa514:
case 0xa515:
case 0xa516:
case 0xa517:
case 0xa518:
case 0xa519:
case 0xa51a:
case 0xa51b:
case 0xa51c:
case 0xa51d:
case 0xa51e:
case 0xa51f:
case 0xa520:
case 0xa521:
case 0xa522:
case 0xa523:
case 0xa524:
case 0xa525:
case 0xa526:
case 0xa527:
case 0xa528:
case 0xa529:
case 0xa52a:
case 0xa52b:
case 0xa52c:
case 0xa52d:
case 0xa52e:
case 0xa52f:
case 0xa530:
case 0xa531:
case 0xa532:
case 0xa533:
case 0xa534:
case 0xa535:
case 0xa536:
case 0xa537:
case 0xa538:
case 0xa539:
case 0xa53a:
case 0xa53b:
case 0xa53c:
case 0xa53d:
case 0xa53e:
case 0xa53f:
case 0xa540:
case 0xa541:
case 0xa542:
case 0xa543:
case 0xa544:
case 0xa545:
case 0xa546:
case 0xa547:
case 0xa548:
case 0xa549:
case 0xa54a:
case 0xa54b:
case 0xa54c:
case 0xa54d:
case 0xa54e:
case 0xa54f:
case 0xa550:
case 0xa551:
case 0xa552:
case 0xa553:
case 0xa554:
case 0xa555:
case 0xa556:
case 0xa557:
case 0xa558:
case 0xa559:
case 0xa55a:
case 0xa55b:
case 0xa55c:
case 0xa55d:
case 0xa55e:
case 0xa55f:
case 0xa560:
case 0xa561:
case 0xa562:
case 0xa563:
case 0xa564:
case 0xa565:
case 0xa566:
case 0xa567:
case 0xa568:
case 0xa569:
case 0xa56a:
case 0xa56b:
case 0xa56c:
case 0xa56d:
case 0xa56e:
case 0xa56f:
case 0xa570:
case 0xa571:
case 0xa572:
case 0xa573:
case 0xa574:
case 0xa575:
case 0xa576:
case 0xa577:
case 0xa578:
case 0xa579:
case 0xa57a:
case 0xa57b:
case 0xa57c:
case 0xa57d:
case 0xa57e:
case 0xa57f:
case 0xa580:
case 0xa581:
case 0xa582:
case 0xa583:
case 0xa584:
case 0xa585:
case 0xa586:
case 0xa587:
case 0xa588:
case 0xa589:
case 0xa58a:
case 0xa58b:
case 0xa58c:
case 0xa58d:
case 0xa58e:
case 0xa58f:
case 0xa590:
case 0xa591:
case 0xa592:
case 0xa593:
case 0xa594:
case 0xa595:
case 0xa596:
case 0xa597:
case 0xa598:
case 0xa599:
case 0xa59a:
case 0xa59b:
case 0xa59c:
case 0xa59d:
case 0xa59e:
case 0xa59f:
case 0xa5a0:
case 0xa5a1:
case 0xa5a2:
case 0xa5a3:
case 0xa5a4:
case 0xa5a5:
case 0xa5a6:
case 0xa5a7:
case 0xa5a8:
case 0xa5a9:
case 0xa5aa:
case 0xa5ab:
case 0xa5ac:
case 0xa5ad:
case 0xa5ae:
case 0xa5af:
case 0xa5b0:
case 0xa5b1:
case 0xa5b2:
case 0xa5b3:
case 0xa5b4:
case 0xa5b5:
case 0xa5b6:
case 0xa5b7:
case 0xa5b8:
case 0xa5b9:
case 0xa5ba:
case 0xa5bb:
case 0xa5bc:
case 0xa5bd:
case 0xa5be:
case 0xa5bf:
case 0xa5c0:
case 0xa5c1:
case 0xa5c2:
case 0xa5c3:
case 0xa5c4:
case 0xa5c5:
case 0xa5c6:
case 0xa5c7:
case 0xa5c8:
case 0xa5c9:
case 0xa5ca:
case 0xa5cb:
case 0xa5cc:
case 0xa5cd:
case 0xa5ce:
case 0xa5cf:
case 0xa5d0:
case 0xa5d1:
case 0xa5d2:
case 0xa5d3:
case 0xa5d4:
case 0xa5d5:
case 0xa5d6:
case 0xa5d7:
case 0xa5d8:
case 0xa5d9:
case 0xa5da:
case 0xa5db:
case 0xa5dc:
case 0xa5dd:
case 0xa5de:
case 0xa5df:
case 0xa5e0:
case 0xa5e1:
case 0xa5e2:
case 0xa5e3:
case 0xa5e4:
case 0xa5e5:
case 0xa5e6:
case 0xa5e7:
case 0xa5e8:
case 0xa5e9:
case 0xa5ea:
case 0xa5eb:
case 0xa5ec:
case 0xa5ed:
case 0xa5ee:
case 0xa5ef:
case 0xa5f0:
case 0xa5f1:
case 0xa5f2:
case 0xa5f3:
case 0xa5f4:
case 0xa5f5:
case 0xa5f6:
case 0xa5f7:
case 0xa5f8:
case 0xa5f9:
case 0xa5fa:
case 0xa5fb:
case 0xa5fc:
case 0xa5fd:
case 0xa5fe:
case 0xa5ff:
case 0xa600:
case 0xa601:
case 0xa602:
case 0xa603:
case 0xa604:
case 0xa605:
case 0xa606:
case 0xa607:
case 0xa608:
case 0xa609:
case 0xa60a:
case 0xa60b:
case 0xa60c:
case 0xa60d:
case 0xa60e:
case 0xa60f:
case 0xa610:
case 0xa611:
case 0xa612:
case 0xa613:
case 0xa614:
case 0xa615:
case 0xa616:
case 0xa617:
case 0xa618:
case 0xa619:
case 0xa61a:
case 0xa61b:
case 0xa61c:
case 0xa61d:
case 0xa61e:
case 0xa61f:
case 0xa620:
case 0xa621:
case 0xa622:
case 0xa623:
case 0xa624:
case 0xa625:
case 0xa626:
case 0xa627:
case 0xa628:
case 0xa629:
case 0xa62a:
case 0xa62b:
case 0xa62c:
case 0xa62d:
case 0xa62e:
case 0xa62f:
case 0xa630:
case 0xa631:
case 0xa632:
case 0xa633:
case 0xa634:
case 0xa635:
case 0xa636:
case 0xa637:
case 0xa638:
case 0xa639:
case 0xa63a:
case 0xa63b:
case 0xa63c:
case 0xa63d:
case 0xa63e:
case 0xa63f:
case 0xa640:
case 0xa641:
case 0xa642:
case 0xa643:
case 0xa644:
case 0xa645:
case 0xa646:
case 0xa647:
case 0xa648:
case 0xa649:
case 0xa64a:
case 0xa64b:
case 0xa64c:
case 0xa64d:
case 0xa64e:
case 0xa64f:
case 0xa650:
case 0xa651:
case 0xa652:
case 0xa653:
case 0xa654:
case 0xa655:
case 0xa656:
case 0xa657:
case 0xa658:
case 0xa659:
case 0xa65a:
case 0xa65b:
case 0xa65c:
case 0xa65d:
case 0xa65e:
case 0xa65f:
case 0xa660:
case 0xa661:
case 0xa662:
case 0xa663:
case 0xa664:
case 0xa665:
case 0xa666:
case 0xa667:
case 0xa668:
case 0xa669:
case 0xa66a:
case 0xa66b:
case 0xa66c:
case 0xa66d:
case 0xa66e:
case 0xa66f:
case 0xa670:
case 0xa671:
case 0xa672:
case 0xa673:
case 0xa674:
case 0xa675:
case 0xa676:
case 0xa677:
case 0xa678:
case 0xa679:
case 0xa67a:
case 0xa67b:
case 0xa67c:
case 0xa67d:
case 0xa67e:
case 0xa67f:
case 0xa680:
case 0xa681:
case 0xa682:
case 0xa683:
case 0xa684:
case 0xa685:
case 0xa686:
case 0xa687:
case 0xa688:
case 0xa689:
case 0xa68a:
case 0xa68b:
case 0xa68c:
case 0xa68d:
case 0xa68e:
case 0xa68f:
case 0xa690:
case 0xa691:
case 0xa692:
case 0xa693:
case 0xa694:
case 0xa695:
case 0xa696:
case 0xa697:
case 0xa698:
case 0xa699:
case 0xa69a:
case 0xa69b:
case 0xa69c:
case 0xa69d:
case 0xa69e:
case 0xa69f:
case 0xa6a0:
case 0xa6a1:
case 0xa6a2:
case 0xa6a3:
case 0xa6a4:
case 0xa6a5:
case 0xa6a6:
case 0xa6a7:
case 0xa6a8:
case 0xa6a9:
case 0xa6aa:
case 0xa6ab:
case 0xa6ac:
case 0xa6ad:
case 0xa6ae:
case 0xa6af:
case 0xa6b0:
case 0xa6b1:
case 0xa6b2:
case 0xa6b3:
case 0xa6b4:
case 0xa6b5:
case 0xa6b6:
case 0xa6b7:
case 0xa6b8:
case 0xa6b9:
case 0xa6ba:
case 0xa6bb:
case 0xa6bc:
case 0xa6bd:
case 0xa6be:
case 0xa6bf:
case 0xa6c0:
case 0xa6c1:
case 0xa6c2:
case 0xa6c3:
case 0xa6c4:
case 0xa6c5:
case 0xa6c6:
case 0xa6c7:
case 0xa6c8:
case 0xa6c9:
case 0xa6ca:
case 0xa6cb:
case 0xa6cc:
case 0xa6cd:
case 0xa6ce:
case 0xa6cf:
case 0xa6d0:
case 0xa6d1:
case 0xa6d2:
case 0xa6d3:
case 0xa6d4:
case 0xa6d5:
case 0xa6d6:
case 0xa6d7:
case 0xa6d8:
case 0xa6d9:
case 0xa6da:
case 0xa6db:
case 0xa6dc:
case 0xa6dd:
case 0xa6de:
case 0xa6df:
case 0xa6e0:
case 0xa6e1:
case 0xa6e2:
case 0xa6e3:
case 0xa6e4:
case 0xa6e5:
case 0xa6e6:
case 0xa6e7:
case 0xa6e8:
case 0xa6e9:
case 0xa6ea:
case 0xa6eb:
case 0xa6ec:
case 0xa6ed:
case 0xa6ee:
case 0xa6ef:
case 0xa6f0:
case 0xa6f1:
case 0xa6f2:
case 0xa6f3:
case 0xa6f4:
case 0xa6f5:
case 0xa6f6:
case 0xa6f7:
case 0xa6f8:
case 0xa6f9:
case 0xa6fa:
case 0xa6fb:
case 0xa6fc:
case 0xa6fd:
case 0xa6fe:
case 0xa6ff:
case 0xa700:
case 0xa701:
case 0xa702:
case 0xa703:
case 0xa704:
case 0xa705:
case 0xa706:
case 0xa707:
case 0xa708:
case 0xa709:
case 0xa70a:
case 0xa70b:
case 0xa70c:
case 0xa70d:
case 0xa70e:
case 0xa70f:
case 0xa710:
case 0xa711:
case 0xa712:
case 0xa713:
case 0xa714:
case 0xa715:
case 0xa716:
case 0xa717:
case 0xa718:
case 0xa719:
case 0xa71a:
case 0xa71b:
case 0xa71c:
case 0xa71d:
case 0xa71e:
case 0xa71f:
case 0xa720:
case 0xa721:
case 0xa722:
case 0xa723:
case 0xa724:
case 0xa725:
case 0xa726:
case 0xa727:
case 0xa728:
case 0xa729:
case 0xa72a:
case 0xa72b:
case 0xa72c:
case 0xa72d:
case 0xa72e:
case 0xa72f:
case 0xa730:
case 0xa731:
case 0xa732:
case 0xa733:
case 0xa734:
case 0xa735:
case 0xa736:
case 0xa737:
case 0xa738:
case 0xa739:
case 0xa73a:
case 0xa73b:
case 0xa73c:
case 0xa73d:
case 0xa73e:
case 0xa73f:
case 0xa740:
case 0xa741:
case 0xa742:
case 0xa743:
case 0xa744:
case 0xa745:
case 0xa746:
case 0xa747:
case 0xa748:
case 0xa749:
case 0xa74a:
case 0xa74b:
case 0xa74c:
case 0xa74d:
case 0xa74e:
case 0xa74f:
case 0xa750:
case 0xa751:
case 0xa752:
case 0xa753:
case 0xa754:
case 0xa755:
case 0xa756:
case 0xa757:
case 0xa758:
case 0xa759:
case 0xa75a:
case 0xa75b:
case 0xa75c:
case 0xa75d:
case 0xa75e:
case 0xa75f:
case 0xa760:
case 0xa761:
case 0xa762:
case 0xa763:
case 0xa764:
case 0xa765:
case 0xa766:
case 0xa767:
case 0xa768:
case 0xa769:
case 0xa76a:
case 0xa76b:
case 0xa76c:
case 0xa76d:
case 0xa76e:
case 0xa76f:
case 0xa770:
case 0xa771:
case 0xa772:
case 0xa773:
case 0xa774:
case 0xa775:
case 0xa776:
case 0xa777:
case 0xa778:
case 0xa779:
case 0xa77a:
case 0xa77b:
case 0xa77c:
case 0xa77d:
case 0xa77e:
case 0xa77f:
case 0xa780:
case 0xa781:
case 0xa782:
case 0xa783:
case 0xa784:
case 0xa785:
case 0xa786:
case 0xa787:
case 0xa788:
case 0xa789:
case 0xa78a:
case 0xa78b:
case 0xa78c:
case 0xa78d:
case 0xa78e:
case 0xa78f:
case 0xa790:
case 0xa791:
case 0xa792:
case 0xa793:
case 0xa794:
case 0xa795:
case 0xa796:
case 0xa797:
case 0xa798:
case 0xa799:
case 0xa79a:
case 0xa79b:
case 0xa79c:
case 0xa79d:
case 0xa79e:
case 0xa79f:
case 0xa7a0:
case 0xa7a1:
case 0xa7a2:
case 0xa7a3:
case 0xa7a4:
case 0xa7a5:
case 0xa7a6:
case 0xa7a7:
case 0xa7a8:
case 0xa7a9:
case 0xa7aa:
case 0xa7ab:
case 0xa7ac:
case 0xa7ad:
case 0xa7ae:
case 0xa7af:
case 0xa7b0:
case 0xa7b1:
case 0xa7b2:
case 0xa7b3:
case 0xa7b4:
case 0xa7b5:
case 0xa7b6:
case 0xa7b7:
case 0xa7b8:
case 0xa7b9:
case 0xa7ba:
case 0xa7bb:
case 0xa7bc:
case 0xa7bd:
case 0xa7be:
case 0xa7bf:
case 0xa7c0:
case 0xa7c1:
case 0xa7c2:
case 0xa7c3:
case 0xa7c4:
case 0xa7c5:
case 0xa7c6:
case 0xa7c7:
case 0xa7c8:
case 0xa7c9:
case 0xa7ca:
case 0xa7cb:
case 0xa7cc:
case 0xa7cd:
case 0xa7ce:
case 0xa7cf:
case 0xa7d0:
case 0xa7d1:
case 0xa7d2:
case 0xa7d3:
case 0xa7d4:
case 0xa7d5:
case 0xa7d6:
case 0xa7d7:
case 0xa7d8:
case 0xa7d9:
case 0xa7da:
case 0xa7db:
case 0xa7dc:
case 0xa7dd:
case 0xa7de:
case 0xa7df:
case 0xa7e0:
case 0xa7e1:
case 0xa7e2:
case 0xa7e3:
case 0xa7e4:
case 0xa7e5:
case 0xa7e6:
case 0xa7e7:
case 0xa7e8:
case 0xa7e9:
case 0xa7ea:
case 0xa7eb:
case 0xa7ec:
case 0xa7ed:
case 0xa7ee:
case 0xa7ef:
case 0xa7f0:
case 0xa7f1:
case 0xa7f2:
case 0xa7f3:
case 0xa7f4:
case 0xa7f5:
case 0xa7f6:
case 0xa7f7:
case 0xa7f8:
case 0xa7f9:
case 0xa7fa:
case 0xa7fb:
case 0xa7fc:
case 0xa7fd:
case 0xa7fe:
case 0xa7ff:
case 0xa800:
case 0xa801:
case 0xa802:
case 0xa803:
case 0xa804:
case 0xa805:
case 0xa806:
case 0xa807:
case 0xa808:
case 0xa809:
case 0xa80a:
case 0xa80b:
case 0xa80c:
case 0xa80d:
case 0xa80e:
case 0xa80f:
case 0xa810:
case 0xa811:
case 0xa812:
case 0xa813:
case 0xa814:
case 0xa815:
case 0xa816:
case 0xa817:
case 0xa818:
case 0xa819:
case 0xa81a:
case 0xa81b:
case 0xa81c:
case 0xa81d:
case 0xa81e:
case 0xa81f:
case 0xa820:
case 0xa821:
case 0xa822:
case 0xa823:
case 0xa824:
case 0xa825:
case 0xa826:
case 0xa827:
case 0xa828:
case 0xa829:
case 0xa82a:
case 0xa82b:
case 0xa82c:
case 0xa82d:
case 0xa82e:
case 0xa82f:
case 0xa830:
case 0xa831:
case 0xa832:
case 0xa833:
case 0xa834:
case 0xa835:
case 0xa836:
case 0xa837:
case 0xa838:
case 0xa839:
case 0xa83a:
case 0xa83b:
case 0xa83c:
case 0xa83d:
case 0xa83e:
case 0xa83f:
case 0xa840:
case 0xa841:
case 0xa842:
case 0xa843:
case 0xa844:
case 0xa845:
case 0xa846:
case 0xa847:
case 0xa848:
case 0xa849:
case 0xa84a:
case 0xa84b:
case 0xa84c:
case 0xa84d:
case 0xa84e:
case 0xa84f:
case 0xa850:
case 0xa851:
case 0xa852:
case 0xa853:
case 0xa854:
case 0xa855:
case 0xa856:
case 0xa857:
case 0xa858:
case 0xa859:
case 0xa85a:
case 0xa85b:
case 0xa85c:
case 0xa85d:
case 0xa85e:
case 0xa85f:
case 0xa860:
case 0xa861:
case 0xa862:
case 0xa863:
case 0xa864:
case 0xa865:
case 0xa866:
case 0xa867:
case 0xa868:
case 0xa869:
case 0xa86a:
case 0xa86b:
case 0xa86c:
case 0xa86d:
case 0xa86e:
case 0xa86f:
case 0xa870:
case 0xa871:
case 0xa872:
case 0xa873:
case 0xa874:
case 0xa875:
case 0xa876:
case 0xa877:
case 0xa878:
case 0xa879:
case 0xa87a:
case 0xa87b:
case 0xa87c:
case 0xa87d:
case 0xa87e:
case 0xa87f:
case 0xa880:
case 0xa881:
case 0xa882:
case 0xa883:
case 0xa884:
case 0xa885:
case 0xa886:
case 0xa887:
case 0xa888:
case 0xa889:
case 0xa88a:
case 0xa88b:
case 0xa88c:
case 0xa88d:
case 0xa88e:
case 0xa88f:
case 0xa890:
case 0xa891:
case 0xa892:
case 0xa893:
case 0xa894:
case 0xa895:
case 0xa896:
case 0xa897:
case 0xa898:
case 0xa899:
case 0xa89a:
case 0xa89b:
case 0xa89c:
case 0xa89d:
case 0xa89e:
case 0xa89f:
case 0xa8a0:
case 0xa8a1:
case 0xa8a2:
case 0xa8a3:
case 0xa8a4:
case 0xa8a5:
case 0xa8a6:
case 0xa8a7:
case 0xa8a8:
case 0xa8a9:
case 0xa8aa:
case 0xa8ab:
case 0xa8ac:
case 0xa8ad:
case 0xa8ae:
case 0xa8af:
case 0xa8b0:
case 0xa8b1:
case 0xa8b2:
case 0xa8b3:
case 0xa8b4:
case 0xa8b5:
case 0xa8b6:
case 0xa8b7:
case 0xa8b8:
case 0xa8b9:
case 0xa8ba:
case 0xa8bb:
case 0xa8bc:
case 0xa8bd:
case 0xa8be:
case 0xa8bf:
case 0xa8c0:
case 0xa8c1:
case 0xa8c2:
case 0xa8c3:
case 0xa8c4:
case 0xa8c5:
case 0xa8c6:
case 0xa8c7:
case 0xa8c8:
case 0xa8c9:
case 0xa8ca:
case 0xa8cb:
case 0xa8cc:
case 0xa8cd:
case 0xa8ce:
case 0xa8cf:
case 0xa8d0:
case 0xa8d1:
case 0xa8d2:
case 0xa8d3:
case 0xa8d4:
case 0xa8d5:
case 0xa8d6:
case 0xa8d7:
case 0xa8d8:
case 0xa8d9:
case 0xa8da:
case 0xa8db:
case 0xa8dc:
case 0xa8dd:
case 0xa8de:
case 0xa8df:
case 0xa8e0:
case 0xa8e1:
case 0xa8e2:
case 0xa8e3:
case 0xa8e4:
case 0xa8e5:
case 0xa8e6:
case 0xa8e7:
case 0xa8e8:
case 0xa8e9:
case 0xa8ea:
case 0xa8eb:
case 0xa8ec:
case 0xa8ed:
case 0xa8ee:
case 0xa8ef:
case 0xa8f0:
case 0xa8f1:
case 0xa8f2:
case 0xa8f3:
case 0xa8f4:
case 0xa8f5:
case 0xa8f6:
case 0xa8f7:
case 0xa8f8:
case 0xa8f9:
case 0xa8fa:
case 0xa8fb:
case 0xa8fc:
case 0xa8fd:
case 0xa8fe:
case 0xa8ff:
case 0xa900:
case 0xa901:
case 0xa902:
case 0xa903:
case 0xa904:
case 0xa905:
case 0xa906:
case 0xa907:
case 0xa908:
case 0xa909:
case 0xa90a:
case 0xa90b:
case 0xa90c:
case 0xa90d:
case 0xa90e:
case 0xa90f:
case 0xa910:
case 0xa911:
case 0xa912:
case 0xa913:
case 0xa914:
case 0xa915:
case 0xa916:
case 0xa917:
case 0xa918:
case 0xa919:
case 0xa91a:
case 0xa91b:
case 0xa91c:
case 0xa91d:
case 0xa91e:
case 0xa91f:
case 0xa920:
case 0xa921:
case 0xa922:
case 0xa923:
case 0xa924:
case 0xa925:
case 0xa926:
case 0xa927:
case 0xa928:
case 0xa929:
case 0xa92a:
case 0xa92b:
case 0xa92c:
case 0xa92d:
case 0xa92e:
case 0xa92f:
case 0xa930:
case 0xa931:
case 0xa932:
case 0xa933:
case 0xa934:
case 0xa935:
case 0xa936:
case 0xa937:
case 0xa938:
case 0xa939:
case 0xa93a:
case 0xa93b:
case 0xa93c:
case 0xa93d:
case 0xa93e:
case 0xa93f:
case 0xa940:
case 0xa941:
case 0xa942:
case 0xa943:
case 0xa944:
case 0xa945:
case 0xa946:
case 0xa947:
case 0xa948:
case 0xa949:
case 0xa94a:
case 0xa94b:
case 0xa94c:
case 0xa94d:
case 0xa94e:
case 0xa94f:
case 0xa950:
case 0xa951:
case 0xa952:
case 0xa953:
case 0xa954:
case 0xa955:
case 0xa956:
case 0xa957:
case 0xa958:
case 0xa959:
case 0xa95a:
case 0xa95b:
case 0xa95c:
case 0xa95d:
case 0xa95e:
case 0xa95f:
case 0xa960:
case 0xa961:
case 0xa962:
case 0xa963:
case 0xa964:
case 0xa965:
case 0xa966:
case 0xa967:
case 0xa968:
case 0xa969:
case 0xa96a:
case 0xa96b:
case 0xa96c:
case 0xa96d:
case 0xa96e:
case 0xa96f:
case 0xa970:
case 0xa971:
case 0xa972:
case 0xa973:
case 0xa974:
case 0xa975:
case 0xa976:
case 0xa977:
case 0xa978:
case 0xa979:
case 0xa97a:
case 0xa97b:
case 0xa97c:
case 0xa97d:
case 0xa97e:
case 0xa97f:
case 0xa980:
case 0xa981:
case 0xa982:
case 0xa983:
case 0xa984:
case 0xa985:
case 0xa986:
case 0xa987:
case 0xa988:
case 0xa989:
case 0xa98a:
case 0xa98b:
case 0xa98c:
case 0xa98d:
case 0xa98e:
case 0xa98f:
case 0xa990:
case 0xa991:
case 0xa992:
case 0xa993:
case 0xa994:
case 0xa995:
case 0xa996:
case 0xa997:
case 0xa998:
case 0xa999:
case 0xa99a:
case 0xa99b:
case 0xa99c:
case 0xa99d:
case 0xa99e:
case 0xa99f:
case 0xa9a0:
case 0xa9a1:
case 0xa9a2:
case 0xa9a3:
case 0xa9a4:
case 0xa9a5:
case 0xa9a6:
case 0xa9a7:
case 0xa9a8:
case 0xa9a9:
case 0xa9aa:
case 0xa9ab:
case 0xa9ac:
case 0xa9ad:
case 0xa9ae:
case 0xa9af:
case 0xa9b0:
case 0xa9b1:
case 0xa9b2:
case 0xa9b3:
case 0xa9b4:
case 0xa9b5:
case 0xa9b6:
case 0xa9b7:
case 0xa9b8:
case 0xa9b9:
case 0xa9ba:
case 0xa9bb:
case 0xa9bc:
case 0xa9bd:
case 0xa9be:
case 0xa9bf:
case 0xa9c0:
case 0xa9c1:
case 0xa9c2:
case 0xa9c3:
case 0xa9c4:
case 0xa9c5:
case 0xa9c6:
case 0xa9c7:
case 0xa9c8:
case 0xa9c9:
case 0xa9ca:
case 0xa9cb:
case 0xa9cc:
case 0xa9cd:
case 0xa9ce:
case 0xa9cf:
case 0xa9d0:
case 0xa9d1:
case 0xa9d2:
case 0xa9d3:
case 0xa9d4:
case 0xa9d5:
case 0xa9d6:
case 0xa9d7:
case 0xa9d8:
case 0xa9d9:
case 0xa9da:
case 0xa9db:
case 0xa9dc:
case 0xa9dd:
case 0xa9de:
case 0xa9df:
case 0xa9e0:
case 0xa9e1:
case 0xa9e2:
case 0xa9e3:
case 0xa9e4:
case 0xa9e5:
case 0xa9e6:
case 0xa9e7:
case 0xa9e8:
case 0xa9e9:
case 0xa9ea:
case 0xa9eb:
case 0xa9ec:
case 0xa9ed:
case 0xa9ee:
case 0xa9ef:
case 0xa9f0:
case 0xa9f1:
case 0xa9f2:
case 0xa9f3:
case 0xa9f4:
case 0xa9f5:
case 0xa9f6:
case 0xa9f7:
case 0xa9f8:
case 0xa9f9:
case 0xa9fa:
case 0xa9fb:
case 0xa9fc:
case 0xa9fd:
case 0xa9fe:
case 0xa9ff:
case 0xaa00:
case 0xaa01:
case 0xaa02:
case 0xaa03:
case 0xaa04:
case 0xaa05:
case 0xaa06:
case 0xaa07:
case 0xaa08:
case 0xaa09:
case 0xaa0a:
case 0xaa0b:
case 0xaa0c:
case 0xaa0d:
case 0xaa0e:
case 0xaa0f:
case 0xaa10:
case 0xaa11:
case 0xaa12:
case 0xaa13:
case 0xaa14:
case 0xaa15:
case 0xaa16:
case 0xaa17:
case 0xaa18:
case 0xaa19:
case 0xaa1a:
case 0xaa1b:
case 0xaa1c:
case 0xaa1d:
case 0xaa1e:
case 0xaa1f:
case 0xaa20:
case 0xaa21:
case 0xaa22:
case 0xaa23:
case 0xaa24:
case 0xaa25:
case 0xaa26:
case 0xaa27:
case 0xaa28:
case 0xaa29:
case 0xaa2a:
case 0xaa2b:
case 0xaa2c:
case 0xaa2d:
case 0xaa2e:
case 0xaa2f:
case 0xaa30:
case 0xaa31:
case 0xaa32:
case 0xaa33:
case 0xaa34:
case 0xaa35:
case 0xaa36:
case 0xaa37:
case 0xaa38:
case 0xaa39:
case 0xaa3a:
case 0xaa3b:
case 0xaa3c:
case 0xaa3d:
case 0xaa3e:
case 0xaa3f:
case 0xaa40:
case 0xaa41:
case 0xaa42:
case 0xaa43:
case 0xaa44:
case 0xaa45:
case 0xaa46:
case 0xaa47:
case 0xaa48:
case 0xaa49:
case 0xaa4a:
case 0xaa4b:
case 0xaa4c:
case 0xaa4d:
case 0xaa4e:
case 0xaa4f:
case 0xaa50:
case 0xaa51:
case 0xaa52:
case 0xaa53:
case 0xaa54:
case 0xaa55:
case 0xaa56:
case 0xaa57:
case 0xaa58:
case 0xaa59:
case 0xaa5a:
case 0xaa5b:
case 0xaa5c:
case 0xaa5d:
case 0xaa5e:
case 0xaa5f:
case 0xaa60:
case 0xaa61:
case 0xaa62:
case 0xaa63:
case 0xaa64:
case 0xaa65:
case 0xaa66:
case 0xaa67:
case 0xaa68:
case 0xaa69:
case 0xaa6a:
case 0xaa6b:
case 0xaa6c:
case 0xaa6d:
case 0xaa6e:
case 0xaa6f:
case 0xaa70:
case 0xaa71:
case 0xaa72:
case 0xaa73:
case 0xaa74:
case 0xaa75:
case 0xaa76:
case 0xaa77:
case 0xaa78:
case 0xaa79:
case 0xaa7a:
case 0xaa7b:
case 0xaa7c:
case 0xaa7d:
case 0xaa7e:
case 0xaa7f:
case 0xaa80:
case 0xaa81:
case 0xaa82:
case 0xaa83:
case 0xaa84:
case 0xaa85:
case 0xaa86:
case 0xaa87:
case 0xaa88:
case 0xaa89:
case 0xaa8a:
case 0xaa8b:
case 0xaa8c:
case 0xaa8d:
case 0xaa8e:
case 0xaa8f:
case 0xaa90:
case 0xaa91:
case 0xaa92:
case 0xaa93:
case 0xaa94:
case 0xaa95:
case 0xaa96:
case 0xaa97:
case 0xaa98:
case 0xaa99:
case 0xaa9a:
case 0xaa9b:
case 0xaa9c:
case 0xaa9d:
case 0xaa9e:
case 0xaa9f:
case 0xaaa0:
case 0xaaa1:
case 0xaaa2:
case 0xaaa3:
case 0xaaa4:
case 0xaaa5:
case 0xaaa6:
case 0xaaa7:
case 0xaaa8:
case 0xaaa9:
case 0xaaaa:
case 0xaaab:
case 0xaaac:
case 0xaaad:
case 0xaaae:
case 0xaaaf:
case 0xaab0:
case 0xaab1:
case 0xaab2:
case 0xaab3:
case 0xaab4:
case 0xaab5:
case 0xaab6:
case 0xaab7:
case 0xaab8:
case 0xaab9:
case 0xaaba:
case 0xaabb:
case 0xaabc:
case 0xaabd:
case 0xaabe:
case 0xaabf:
case 0xaac0:
case 0xaac1:
case 0xaac2:
case 0xaac3:
case 0xaac4:
case 0xaac5:
case 0xaac6:
case 0xaac7:
case 0xaac8:
case 0xaac9:
case 0xaaca:
case 0xaacb:
case 0xaacc:
case 0xaacd:
case 0xaace:
case 0xaacf:
case 0xaad0:
case 0xaad1:
case 0xaad2:
case 0xaad3:
case 0xaad4:
case 0xaad5:
case 0xaad6:
case 0xaad7:
case 0xaad8:
case 0xaad9:
case 0xaada:
case 0xaadb:
case 0xaadc:
case 0xaadd:
case 0xaade:
case 0xaadf:
case 0xaae0:
case 0xaae1:
case 0xaae2:
case 0xaae3:
case 0xaae4:
case 0xaae5:
case 0xaae6:
case 0xaae7:
case 0xaae8:
case 0xaae9:
case 0xaaea:
case 0xaaeb:
case 0xaaec:
case 0xaaed:
case 0xaaee:
case 0xaaef:
case 0xaaf0:
case 0xaaf1:
case 0xaaf2:
case 0xaaf3:
case 0xaaf4:
case 0xaaf5:
case 0xaaf6:
case 0xaaf7:
case 0xaaf8:
case 0xaaf9:
case 0xaafa:
case 0xaafb:
case 0xaafc:
case 0xaafd:
case 0xaafe:
case 0xaaff:
case 0xab00:
case 0xab01:
case 0xab02:
case 0xab03:
case 0xab04:
case 0xab05:
case 0xab06:
case 0xab07:
case 0xab08:
case 0xab09:
case 0xab0a:
case 0xab0b:
case 0xab0c:
case 0xab0d:
case 0xab0e:
case 0xab0f:
case 0xab10:
case 0xab11:
case 0xab12:
case 0xab13:
case 0xab14:
case 0xab15:
case 0xab16:
case 0xab17:
case 0xab18:
case 0xab19:
case 0xab1a:
case 0xab1b:
case 0xab1c:
case 0xab1d:
case 0xab1e:
case 0xab1f:
case 0xab20:
case 0xab21:
case 0xab22:
case 0xab23:
case 0xab24:
case 0xab25:
case 0xab26:
case 0xab27:
case 0xab28:
case 0xab29:
case 0xab2a:
case 0xab2b:
case 0xab2c:
case 0xab2d:
case 0xab2e:
case 0xab2f:
case 0xab30:
case 0xab31:
case 0xab32:
case 0xab33:
case 0xab34:
case 0xab35:
case 0xab36:
case 0xab37:
case 0xab38:
case 0xab39:
case 0xab3a:
case 0xab3b:
case 0xab3c:
case 0xab3d:
case 0xab3e:
case 0xab3f:
case 0xab40:
case 0xab41:
case 0xab42:
case 0xab43:
case 0xab44:
case 0xab45:
case 0xab46:
case 0xab47:
case 0xab48:
case 0xab49:
case 0xab4a:
case 0xab4b:
case 0xab4c:
case 0xab4d:
case 0xab4e:
case 0xab4f:
case 0xab50:
case 0xab51:
case 0xab52:
case 0xab53:
case 0xab54:
case 0xab55:
case 0xab56:
case 0xab57:
case 0xab58:
case 0xab59:
case 0xab5a:
case 0xab5b:
case 0xab5c:
case 0xab5d:
case 0xab5e:
case 0xab5f:
case 0xab60:
case 0xab61:
case 0xab62:
case 0xab63:
case 0xab64:
case 0xab65:
case 0xab66:
case 0xab67:
case 0xab68:
case 0xab69:
case 0xab6a:
case 0xab6b:
case 0xab6c:
case 0xab6d:
case 0xab6e:
case 0xab6f:
case 0xab70:
case 0xab71:
case 0xab72:
case 0xab73:
case 0xab74:
case 0xab75:
case 0xab76:
case 0xab77:
case 0xab78:
case 0xab79:
case 0xab7a:
case 0xab7b:
case 0xab7c:
case 0xab7d:
case 0xab7e:
case 0xab7f:
case 0xab80:
case 0xab81:
case 0xab82:
case 0xab83:
case 0xab84:
case 0xab85:
case 0xab86:
case 0xab87:
case 0xab88:
case 0xab89:
case 0xab8a:
case 0xab8b:
case 0xab8c:
case 0xab8d:
case 0xab8e:
case 0xab8f:
case 0xab90:
case 0xab91:
case 0xab92:
case 0xab93:
case 0xab94:
case 0xab95:
case 0xab96:
case 0xab97:
case 0xab98:
case 0xab99:
case 0xab9a:
case 0xab9b:
case 0xab9c:
case 0xab9d:
case 0xab9e:
case 0xab9f:
case 0xaba0:
case 0xaba1:
case 0xaba2:
case 0xaba3:
case 0xaba4:
case 0xaba5:
case 0xaba6:
case 0xaba7:
case 0xaba8:
case 0xaba9:
case 0xabaa:
case 0xabab:
case 0xabac:
case 0xabad:
case 0xabae:
case 0xabaf:
case 0xabb0:
case 0xabb1:
case 0xabb2:
case 0xabb3:
case 0xabb4:
case 0xabb5:
case 0xabb6:
case 0xabb7:
case 0xabb8:
case 0xabb9:
case 0xabba:
case 0xabbb:
case 0xabbc:
case 0xabbd:
case 0xabbe:
case 0xabbf:
case 0xabc0:
case 0xabc1:
case 0xabc2:
case 0xabc3:
case 0xabc4:
case 0xabc5:
case 0xabc6:
case 0xabc7:
case 0xabc8:
case 0xabc9:
case 0xabca:
case 0xabcb:
case 0xabcc:
case 0xabcd:
case 0xabce:
case 0xabcf:
case 0xabd0:
case 0xabd1:
case 0xabd2:
case 0xabd3:
case 0xabd4:
case 0xabd5:
case 0xabd6:
case 0xabd7:
case 0xabd8:
case 0xabd9:
case 0xabda:
case 0xabdb:
case 0xabdc:
case 0xabdd:
case 0xabde:
case 0xabdf:
case 0xabe0:
case 0xabe1:
case 0xabe2:
case 0xabe3:
case 0xabe4:
case 0xabe5:
case 0xabe6:
case 0xabe7:
case 0xabe8:
case 0xabe9:
case 0xabea:
case 0xabeb:
case 0xabec:
case 0xabed:
case 0xabee:
case 0xabef:
case 0xabf0:
case 0xabf1:
case 0xabf2:
case 0xabf3:
case 0xabf4:
case 0xabf5:
case 0xabf6:
case 0xabf7:
case 0xabf8:
case 0xabf9:
case 0xabfa:
case 0xabfb:
case 0xabfc:
case 0xabfd:
case 0xabfe:
case 0xabff:
case 0xac00:
case 0xac01:
case 0xac02:
case 0xac03:
case 0xac04:
case 0xac05:
case 0xac06:
case 0xac07:
case 0xac08:
case 0xac09:
case 0xac0a:
case 0xac0b:
case 0xac0c:
case 0xac0d:
case 0xac0e:
case 0xac0f:
case 0xac10:
case 0xac11:
case 0xac12:
case 0xac13:
case 0xac14:
case 0xac15:
case 0xac16:
case 0xac17:
case 0xac18:
case 0xac19:
case 0xac1a:
case 0xac1b:
case 0xac1c:
case 0xac1d:
case 0xac1e:
case 0xac1f:
case 0xac20:
case 0xac21:
case 0xac22:
case 0xac23:
case 0xac24:
case 0xac25:
case 0xac26:
case 0xac27:
case 0xac28:
case 0xac29:
case 0xac2a:
case 0xac2b:
case 0xac2c:
case 0xac2d:
case 0xac2e:
case 0xac2f:
case 0xac30:
case 0xac31:
case 0xac32:
case 0xac33:
case 0xac34:
case 0xac35:
case 0xac36:
case 0xac37:
case 0xac38:
case 0xac39:
case 0xac3a:
case 0xac3b:
case 0xac3c:
case 0xac3d:
case 0xac3e:
case 0xac3f:
case 0xac40:
case 0xac41:
case 0xac42:
case 0xac43:
case 0xac44:
case 0xac45:
case 0xac46:
case 0xac47:
case 0xac48:
case 0xac49:
case 0xac4a:
case 0xac4b:
case 0xac4c:
case 0xac4d:
case 0xac4e:
case 0xac4f:
case 0xac50:
case 0xac51:
case 0xac52:
case 0xac53:
case 0xac54:
case 0xac55:
case 0xac56:
case 0xac57:
case 0xac58:
case 0xac59:
case 0xac5a:
case 0xac5b:
case 0xac5c:
case 0xac5d:
case 0xac5e:
case 0xac5f:
case 0xac60:
case 0xac61:
case 0xac62:
case 0xac63:
case 0xac64:
case 0xac65:
case 0xac66:
case 0xac67:
case 0xac68:
case 0xac69:
case 0xac6a:
case 0xac6b:
case 0xac6c:
case 0xac6d:
case 0xac6e:
case 0xac6f:
case 0xac70:
case 0xac71:
case 0xac72:
case 0xac73:
case 0xac74:
case 0xac75:
case 0xac76:
case 0xac77:
case 0xac78:
case 0xac79:
case 0xac7a:
case 0xac7b:
case 0xac7c:
case 0xac7d:
case 0xac7e:
case 0xac7f:
case 0xac80:
case 0xac81:
case 0xac82:
case 0xac83:
case 0xac84:
case 0xac85:
case 0xac86:
case 0xac87:
case 0xac88:
case 0xac89:
case 0xac8a:
case 0xac8b:
case 0xac8c:
case 0xac8d:
case 0xac8e:
case 0xac8f:
case 0xac90:
case 0xac91:
case 0xac92:
case 0xac93:
case 0xac94:
case 0xac95:
case 0xac96:
case 0xac97:
case 0xac98:
case 0xac99:
case 0xac9a:
case 0xac9b:
case 0xac9c:
case 0xac9d:
case 0xac9e:
case 0xac9f:
case 0xaca0:
case 0xaca1:
case 0xaca2:
case 0xaca3:
case 0xaca4:
case 0xaca5:
case 0xaca6:
case 0xaca7:
case 0xaca8:
case 0xaca9:
case 0xacaa:
case 0xacab:
case 0xacac:
case 0xacad:
case 0xacae:
case 0xacaf:
case 0xacb0:
case 0xacb1:
case 0xacb2:
case 0xacb3:
case 0xacb4:
case 0xacb5:
case 0xacb6:
case 0xacb7:
case 0xacb8:
case 0xacb9:
case 0xacba:
case 0xacbb:
case 0xacbc:
case 0xacbd:
case 0xacbe:
case 0xacbf:
case 0xacc0:
case 0xacc1:
case 0xacc2:
case 0xacc3:
case 0xacc4:
case 0xacc5:
case 0xacc6:
case 0xacc7:
case 0xacc8:
case 0xacc9:
case 0xacca:
case 0xaccb:
case 0xaccc:
case 0xaccd:
case 0xacce:
case 0xaccf:
case 0xacd0:
case 0xacd1:
case 0xacd2:
case 0xacd3:
case 0xacd4:
case 0xacd5:
case 0xacd6:
case 0xacd7:
case 0xacd8:
case 0xacd9:
case 0xacda:
case 0xacdb:
case 0xacdc:
case 0xacdd:
case 0xacde:
case 0xacdf:
case 0xace0:
case 0xace1:
case 0xace2:
case 0xace3:
case 0xace4:
case 0xace5:
case 0xace6:
case 0xace7:
case 0xace8:
case 0xace9:
case 0xacea:
case 0xaceb:
case 0xacec:
case 0xaced:
case 0xacee:
case 0xacef:
case 0xacf0:
case 0xacf1:
case 0xacf2:
case 0xacf3:
case 0xacf4:
case 0xacf5:
case 0xacf6:
case 0xacf7:
case 0xacf8:
case 0xacf9:
case 0xacfa:
case 0xacfb:
case 0xacfc:
case 0xacfd:
case 0xacfe:
case 0xacff:
case 0xad00:
case 0xad01:
case 0xad02:
case 0xad03:
case 0xad04:
case 0xad05:
case 0xad06:
case 0xad07:
case 0xad08:
case 0xad09:
case 0xad0a:
case 0xad0b:
case 0xad0c:
case 0xad0d:
case 0xad0e:
case 0xad0f:
case 0xad10:
case 0xad11:
case 0xad12:
case 0xad13:
case 0xad14:
case 0xad15:
case 0xad16:
case 0xad17:
case 0xad18:
case 0xad19:
case 0xad1a:
case 0xad1b:
case 0xad1c:
case 0xad1d:
case 0xad1e:
case 0xad1f:
case 0xad20:
case 0xad21:
case 0xad22:
case 0xad23:
case 0xad24:
case 0xad25:
case 0xad26:
case 0xad27:
case 0xad28:
case 0xad29:
case 0xad2a:
case 0xad2b:
case 0xad2c:
case 0xad2d:
case 0xad2e:
case 0xad2f:
case 0xad30:
case 0xad31:
case 0xad32:
case 0xad33:
case 0xad34:
case 0xad35:
case 0xad36:
case 0xad37:
case 0xad38:
case 0xad39:
case 0xad3a:
case 0xad3b:
case 0xad3c:
case 0xad3d:
case 0xad3e:
case 0xad3f:
case 0xad40:
case 0xad41:
case 0xad42:
case 0xad43:
case 0xad44:
case 0xad45:
case 0xad46:
case 0xad47:
case 0xad48:
case 0xad49:
case 0xad4a:
case 0xad4b:
case 0xad4c:
case 0xad4d:
case 0xad4e:
case 0xad4f:
case 0xad50:
case 0xad51:
case 0xad52:
case 0xad53:
case 0xad54:
case 0xad55:
case 0xad56:
case 0xad57:
case 0xad58:
case 0xad59:
case 0xad5a:
case 0xad5b:
case 0xad5c:
case 0xad5d:
case 0xad5e:
case 0xad5f:
case 0xad60:
case 0xad61:
case 0xad62:
case 0xad63:
case 0xad64:
case 0xad65:
case 0xad66:
case 0xad67:
case 0xad68:
case 0xad69:
case 0xad6a:
case 0xad6b:
case 0xad6c:
case 0xad6d:
case 0xad6e:
case 0xad6f:
case 0xad70:
case 0xad71:
case 0xad72:
case 0xad73:
case 0xad74:
case 0xad75:
case 0xad76:
case 0xad77:
case 0xad78:
case 0xad79:
case 0xad7a:
case 0xad7b:
case 0xad7c:
case 0xad7d:
case 0xad7e:
case 0xad7f:
case 0xad80:
case 0xad81:
case 0xad82:
case 0xad83:
case 0xad84:
case 0xad85:
case 0xad86:
case 0xad87:
case 0xad88:
case 0xad89:
case 0xad8a:
case 0xad8b:
case 0xad8c:
case 0xad8d:
case 0xad8e:
case 0xad8f:
case 0xad90:
case 0xad91:
case 0xad92:
case 0xad93:
case 0xad94:
case 0xad95:
case 0xad96:
case 0xad97:
case 0xad98:
case 0xad99:
case 0xad9a:
case 0xad9b:
case 0xad9c:
case 0xad9d:
case 0xad9e:
case 0xad9f:
case 0xada0:
case 0xada1:
case 0xada2:
case 0xada3:
case 0xada4:
case 0xada5:
case 0xada6:
case 0xada7:
case 0xada8:
case 0xada9:
case 0xadaa:
case 0xadab:
case 0xadac:
case 0xadad:
case 0xadae:
case 0xadaf:
case 0xadb0:
case 0xadb1:
case 0xadb2:
case 0xadb3:
case 0xadb4:
case 0xadb5:
case 0xadb6:
case 0xadb7:
case 0xadb8:
case 0xadb9:
case 0xadba:
case 0xadbb:
case 0xadbc:
case 0xadbd:
case 0xadbe:
case 0xadbf:
case 0xadc0:
case 0xadc1:
case 0xadc2:
case 0xadc3:
case 0xadc4:
case 0xadc5:
case 0xadc6:
case 0xadc7:
case 0xadc8:
case 0xadc9:
case 0xadca:
case 0xadcb:
case 0xadcc:
case 0xadcd:
case 0xadce:
case 0xadcf:
case 0xadd0:
case 0xadd1:
case 0xadd2:
case 0xadd3:
case 0xadd4:
case 0xadd5:
case 0xadd6:
case 0xadd7:
case 0xadd8:
case 0xadd9:
case 0xadda:
case 0xaddb:
case 0xaddc:
case 0xaddd:
case 0xadde:
case 0xaddf:
case 0xade0:
case 0xade1:
case 0xade2:
case 0xade3:
case 0xade4:
case 0xade5:
case 0xade6:
case 0xade7:
case 0xade8:
case 0xade9:
case 0xadea:
case 0xadeb:
case 0xadec:
case 0xaded:
case 0xadee:
case 0xadef:
case 0xadf0:
case 0xadf1:
case 0xadf2:
case 0xadf3:
case 0xadf4:
case 0xadf5:
case 0xadf6:
case 0xadf7:
case 0xadf8:
case 0xadf9:
case 0xadfa:
case 0xadfb:
case 0xadfc:
case 0xadfd:
case 0xadfe:
case 0xadff:
case 0xae00:
case 0xae01:
case 0xae02:
case 0xae03:
case 0xae04:
case 0xae05:
case 0xae06:
case 0xae07:
case 0xae08:
case 0xae09:
case 0xae0a:
case 0xae0b:
case 0xae0c:
case 0xae0d:
case 0xae0e:
case 0xae0f:
case 0xae10:
case 0xae11:
case 0xae12:
case 0xae13:
case 0xae14:
case 0xae15:
case 0xae16:
case 0xae17:
case 0xae18:
case 0xae19:
case 0xae1a:
case 0xae1b:
case 0xae1c:
case 0xae1d:
case 0xae1e:
case 0xae1f:
case 0xae20:
case 0xae21:
case 0xae22:
case 0xae23:
case 0xae24:
case 0xae25:
case 0xae26:
case 0xae27:
case 0xae28:
case 0xae29:
case 0xae2a:
case 0xae2b:
case 0xae2c:
case 0xae2d:
case 0xae2e:
case 0xae2f:
case 0xae30:
case 0xae31:
case 0xae32:
case 0xae33:
case 0xae34:
case 0xae35:
case 0xae36:
case 0xae37:
case 0xae38:
case 0xae39:
case 0xae3a:
case 0xae3b:
case 0xae3c:
case 0xae3d:
case 0xae3e:
case 0xae3f:
case 0xae40:
case 0xae41:
case 0xae42:
case 0xae43:
case 0xae44:
case 0xae45:
case 0xae46:
case 0xae47:
case 0xae48:
case 0xae49:
case 0xae4a:
case 0xae4b:
case 0xae4c:
case 0xae4d:
case 0xae4e:
case 0xae4f:
case 0xae50:
case 0xae51:
case 0xae52:
case 0xae53:
case 0xae54:
case 0xae55:
case 0xae56:
case 0xae57:
case 0xae58:
case 0xae59:
case 0xae5a:
case 0xae5b:
case 0xae5c:
case 0xae5d:
case 0xae5e:
case 0xae5f:
case 0xae60:
case 0xae61:
case 0xae62:
case 0xae63:
case 0xae64:
case 0xae65:
case 0xae66:
case 0xae67:
case 0xae68:
case 0xae69:
case 0xae6a:
case 0xae6b:
case 0xae6c:
case 0xae6d:
case 0xae6e:
case 0xae6f:
case 0xae70:
case 0xae71:
case 0xae72:
case 0xae73:
case 0xae74:
case 0xae75:
case 0xae76:
case 0xae77:
case 0xae78:
case 0xae79:
case 0xae7a:
case 0xae7b:
case 0xae7c:
case 0xae7d:
case 0xae7e:
case 0xae7f:
case 0xae80:
case 0xae81:
case 0xae82:
case 0xae83:
case 0xae84:
case 0xae85:
case 0xae86:
case 0xae87:
case 0xae88:
case 0xae89:
case 0xae8a:
case 0xae8b:
case 0xae8c:
case 0xae8d:
case 0xae8e:
case 0xae8f:
case 0xae90:
case 0xae91:
case 0xae92:
case 0xae93:
case 0xae94:
case 0xae95:
case 0xae96:
case 0xae97:
case 0xae98:
case 0xae99:
case 0xae9a:
case 0xae9b:
case 0xae9c:
case 0xae9d:
case 0xae9e:
case 0xae9f:
case 0xaea0:
case 0xaea1:
case 0xaea2:
case 0xaea3:
case 0xaea4:
case 0xaea5:
case 0xaea6:
case 0xaea7:
case 0xaea8:
case 0xaea9:
case 0xaeaa:
case 0xaeab:
case 0xaeac:
case 0xaead:
case 0xaeae:
case 0xaeaf:
case 0xaeb0:
case 0xaeb1:
case 0xaeb2:
case 0xaeb3:
case 0xaeb4:
case 0xaeb5:
case 0xaeb6:
case 0xaeb7:
case 0xaeb8:
case 0xaeb9:
case 0xaeba:
case 0xaebb:
case 0xaebc:
case 0xaebd:
case 0xaebe:
case 0xaebf:
case 0xaec0:
case 0xaec1:
case 0xaec2:
case 0xaec3:
case 0xaec4:
case 0xaec5:
case 0xaec6:
case 0xaec7:
case 0xaec8:
case 0xaec9:
case 0xaeca:
case 0xaecb:
case 0xaecc:
case 0xaecd:
case 0xaece:
case 0xaecf:
case 0xaed0:
case 0xaed1:
case 0xaed2:
case 0xaed3:
case 0xaed4:
case 0xaed5:
case 0xaed6:
case 0xaed7:
case 0xaed8:
case 0xaed9:
case 0xaeda:
case 0xaedb:
case 0xaedc:
case 0xaedd:
case 0xaede:
case 0xaedf:
case 0xaee0:
case 0xaee1:
case 0xaee2:
case 0xaee3:
case 0xaee4:
case 0xaee5:
case 0xaee6:
case 0xaee7:
case 0xaee8:
case 0xaee9:
case 0xaeea:
case 0xaeeb:
case 0xaeec:
case 0xaeed:
case 0xaeee:
case 0xaeef:
case 0xaef0:
case 0xaef1:
case 0xaef2:
case 0xaef3:
case 0xaef4:
case 0xaef5:
case 0xaef6:
case 0xaef7:
case 0xaef8:
case 0xaef9:
case 0xaefa:
case 0xaefb:
case 0xaefc:
case 0xaefd:
case 0xaefe:
case 0xaeff:
case 0xaf00:
case 0xaf01:
case 0xaf02:
case 0xaf03:
case 0xaf04:
case 0xaf05:
case 0xaf06:
case 0xaf07:
case 0xaf08:
case 0xaf09:
case 0xaf0a:
case 0xaf0b:
case 0xaf0c:
case 0xaf0d:
case 0xaf0e:
case 0xaf0f:
case 0xaf10:
case 0xaf11:
case 0xaf12:
case 0xaf13:
case 0xaf14:
case 0xaf15:
case 0xaf16:
case 0xaf17:
case 0xaf18:
case 0xaf19:
case 0xaf1a:
case 0xaf1b:
case 0xaf1c:
case 0xaf1d:
case 0xaf1e:
case 0xaf1f:
case 0xaf20:
case 0xaf21:
case 0xaf22:
case 0xaf23:
case 0xaf24:
case 0xaf25:
case 0xaf26:
case 0xaf27:
case 0xaf28:
case 0xaf29:
case 0xaf2a:
case 0xaf2b:
case 0xaf2c:
case 0xaf2d:
case 0xaf2e:
case 0xaf2f:
case 0xaf30:
case 0xaf31:
case 0xaf32:
case 0xaf33:
case 0xaf34:
case 0xaf35:
case 0xaf36:
case 0xaf37:
case 0xaf38:
case 0xaf39:
case 0xaf3a:
case 0xaf3b:
case 0xaf3c:
case 0xaf3d:
case 0xaf3e:
case 0xaf3f:
case 0xaf40:
case 0xaf41:
case 0xaf42:
case 0xaf43:
case 0xaf44:
case 0xaf45:
case 0xaf46:
case 0xaf47:
case 0xaf48:
case 0xaf49:
case 0xaf4a:
case 0xaf4b:
case 0xaf4c:
case 0xaf4d:
case 0xaf4e:
case 0xaf4f:
case 0xaf50:
case 0xaf51:
case 0xaf52:
case 0xaf53:
case 0xaf54:
case 0xaf55:
case 0xaf56:
case 0xaf57:
case 0xaf58:
case 0xaf59:
case 0xaf5a:
case 0xaf5b:
case 0xaf5c:
case 0xaf5d:
case 0xaf5e:
case 0xaf5f:
case 0xaf60:
case 0xaf61:
case 0xaf62:
case 0xaf63:
case 0xaf64:
case 0xaf65:
case 0xaf66:
case 0xaf67:
case 0xaf68:
case 0xaf69:
case 0xaf6a:
case 0xaf6b:
case 0xaf6c:
case 0xaf6d:
case 0xaf6e:
case 0xaf6f:
case 0xaf70:
case 0xaf71:
case 0xaf72:
case 0xaf73:
case 0xaf74:
case 0xaf75:
case 0xaf76:
case 0xaf77:
case 0xaf78:
case 0xaf79:
case 0xaf7a:
case 0xaf7b:
case 0xaf7c:
case 0xaf7d:
case 0xaf7e:
case 0xaf7f:
case 0xaf80:
case 0xaf81:
case 0xaf82:
case 0xaf83:
case 0xaf84:
case 0xaf85:
case 0xaf86:
case 0xaf87:
case 0xaf88:
case 0xaf89:
case 0xaf8a:
case 0xaf8b:
case 0xaf8c:
case 0xaf8d:
case 0xaf8e:
case 0xaf8f:
case 0xaf90:
case 0xaf91:
case 0xaf92:
case 0xaf93:
case 0xaf94:
case 0xaf95:
case 0xaf96:
case 0xaf97:
case 0xaf98:
case 0xaf99:
case 0xaf9a:
case 0xaf9b:
case 0xaf9c:
case 0xaf9d:
case 0xaf9e:
case 0xaf9f:
case 0xafa0:
case 0xafa1:
case 0xafa2:
case 0xafa3:
case 0xafa4:
case 0xafa5:
case 0xafa6:
case 0xafa7:
case 0xafa8:
case 0xafa9:
case 0xafaa:
case 0xafab:
case 0xafac:
case 0xafad:
case 0xafae:
case 0xafaf:
case 0xafb0:
case 0xafb1:
case 0xafb2:
case 0xafb3:
case 0xafb4:
case 0xafb5:
case 0xafb6:
case 0xafb7:
case 0xafb8:
case 0xafb9:
case 0xafba:
case 0xafbb:
case 0xafbc:
case 0xafbd:
case 0xafbe:
case 0xafbf:
case 0xafc0:
case 0xafc1:
case 0xafc2:
case 0xafc3:
case 0xafc4:
case 0xafc5:
case 0xafc6:
case 0xafc7:
case 0xafc8:
case 0xafc9:
case 0xafca:
case 0xafcb:
case 0xafcc:
case 0xafcd:
case 0xafce:
case 0xafcf:
case 0xafd0:
case 0xafd1:
case 0xafd2:
case 0xafd3:
case 0xafd4:
case 0xafd5:
case 0xafd6:
case 0xafd7:
case 0xafd8:
case 0xafd9:
case 0xafda:
case 0xafdb:
case 0xafdc:
case 0xafdd:
case 0xafde:
case 0xafdf:
case 0xafe0:
case 0xafe1:
case 0xafe2:
case 0xafe3:
case 0xafe4:
case 0xafe5:
case 0xafe6:
case 0xafe7:
case 0xafe8:
case 0xafe9:
case 0xafea:
case 0xafeb:
case 0xafec:
case 0xafed:
case 0xafee:
case 0xafef:
case 0xaff0:
case 0xaff1:
case 0xaff2:
case 0xaff3:
case 0xaff4:
case 0xaff5:
case 0xaff6:
case 0xaff7:
case 0xaff8:
case 0xaff9:
case 0xaffa:
case 0xaffb:
case 0xaffc:
case 0xaffd:
case 0xaffe:
case 0xafff:
	{
	 LINEA();
	}
	break;

case 0xf000:
case 0xf001:
case 0xf002:
case 0xf003:
case 0xf004:
case 0xf005:
case 0xf006:
case 0xf007:
case 0xf008:
case 0xf009:
case 0xf00a:
case 0xf00b:
case 0xf00c:
case 0xf00d:
case 0xf00e:
case 0xf00f:
case 0xf010:
case 0xf011:
case 0xf012:
case 0xf013:
case 0xf014:
case 0xf015:
case 0xf016:
case 0xf017:
case 0xf018:
case 0xf019:
case 0xf01a:
case 0xf01b:
case 0xf01c:
case 0xf01d:
case 0xf01e:
case 0xf01f:
case 0xf020:
case 0xf021:
case 0xf022:
case 0xf023:
case 0xf024:
case 0xf025:
case 0xf026:
case 0xf027:
case 0xf028:
case 0xf029:
case 0xf02a:
case 0xf02b:
case 0xf02c:
case 0xf02d:
case 0xf02e:
case 0xf02f:
case 0xf030:
case 0xf031:
case 0xf032:
case 0xf033:
case 0xf034:
case 0xf035:
case 0xf036:
case 0xf037:
case 0xf038:
case 0xf039:
case 0xf03a:
case 0xf03b:
case 0xf03c:
case 0xf03d:
case 0xf03e:
case 0xf03f:
case 0xf040:
case 0xf041:
case 0xf042:
case 0xf043:
case 0xf044:
case 0xf045:
case 0xf046:
case 0xf047:
case 0xf048:
case 0xf049:
case 0xf04a:
case 0xf04b:
case 0xf04c:
case 0xf04d:
case 0xf04e:
case 0xf04f:
case 0xf050:
case 0xf051:
case 0xf052:
case 0xf053:
case 0xf054:
case 0xf055:
case 0xf056:
case 0xf057:
case 0xf058:
case 0xf059:
case 0xf05a:
case 0xf05b:
case 0xf05c:
case 0xf05d:
case 0xf05e:
case 0xf05f:
case 0xf060:
case 0xf061:
case 0xf062:
case 0xf063:
case 0xf064:
case 0xf065:
case 0xf066:
case 0xf067:
case 0xf068:
case 0xf069:
case 0xf06a:
case 0xf06b:
case 0xf06c:
case 0xf06d:
case 0xf06e:
case 0xf06f:
case 0xf070:
case 0xf071:
case 0xf072:
case 0xf073:
case 0xf074:
case 0xf075:
case 0xf076:
case 0xf077:
case 0xf078:
case 0xf079:
case 0xf07a:
case 0xf07b:
case 0xf07c:
case 0xf07d:
case 0xf07e:
case 0xf07f:
case 0xf080:
case 0xf081:
case 0xf082:
case 0xf083:
case 0xf084:
case 0xf085:
case 0xf086:
case 0xf087:
case 0xf088:
case 0xf089:
case 0xf08a:
case 0xf08b:
case 0xf08c:
case 0xf08d:
case 0xf08e:
case 0xf08f:
case 0xf090:
case 0xf091:
case 0xf092:
case 0xf093:
case 0xf094:
case 0xf095:
case 0xf096:
case 0xf097:
case 0xf098:
case 0xf099:
case 0xf09a:
case 0xf09b:
case 0xf09c:
case 0xf09d:
case 0xf09e:
case 0xf09f:
case 0xf0a0:
case 0xf0a1:
case 0xf0a2:
case 0xf0a3:
case 0xf0a4:
case 0xf0a5:
case 0xf0a6:
case 0xf0a7:
case 0xf0a8:
case 0xf0a9:
case 0xf0aa:
case 0xf0ab:
case 0xf0ac:
case 0xf0ad:
case 0xf0ae:
case 0xf0af:
case 0xf0b0:
case 0xf0b1:
case 0xf0b2:
case 0xf0b3:
case 0xf0b4:
case 0xf0b5:
case 0xf0b6:
case 0xf0b7:
case 0xf0b8:
case 0xf0b9:
case 0xf0ba:
case 0xf0bb:
case 0xf0bc:
case 0xf0bd:
case 0xf0be:
case 0xf0bf:
case 0xf0c0:
case 0xf0c1:
case 0xf0c2:
case 0xf0c3:
case 0xf0c4:
case 0xf0c5:
case 0xf0c6:
case 0xf0c7:
case 0xf0c8:
case 0xf0c9:
case 0xf0ca:
case 0xf0cb:
case 0xf0cc:
case 0xf0cd:
case 0xf0ce:
case 0xf0cf:
case 0xf0d0:
case 0xf0d1:
case 0xf0d2:
case 0xf0d3:
case 0xf0d4:
case 0xf0d5:
case 0xf0d6:
case 0xf0d7:
case 0xf0d8:
case 0xf0d9:
case 0xf0da:
case 0xf0db:
case 0xf0dc:
case 0xf0dd:
case 0xf0de:
case 0xf0df:
case 0xf0e0:
case 0xf0e1:
case 0xf0e2:
case 0xf0e3:
case 0xf0e4:
case 0xf0e5:
case 0xf0e6:
case 0xf0e7:
case 0xf0e8:
case 0xf0e9:
case 0xf0ea:
case 0xf0eb:
case 0xf0ec:
case 0xf0ed:
case 0xf0ee:
case 0xf0ef:
case 0xf0f0:
case 0xf0f1:
case 0xf0f2:
case 0xf0f3:
case 0xf0f4:
case 0xf0f5:
case 0xf0f6:
case 0xf0f7:
case 0xf0f8:
case 0xf0f9:
case 0xf0fa:
case 0xf0fb:
case 0xf0fc:
case 0xf0fd:
case 0xf0fe:
case 0xf0ff:
case 0xf100:
case 0xf101:
case 0xf102:
case 0xf103:
case 0xf104:
case 0xf105:
case 0xf106:
case 0xf107:
case 0xf108:
case 0xf109:
case 0xf10a:
case 0xf10b:
case 0xf10c:
case 0xf10d:
case 0xf10e:
case 0xf10f:
case 0xf110:
case 0xf111:
case 0xf112:
case 0xf113:
case 0xf114:
case 0xf115:
case 0xf116:
case 0xf117:
case 0xf118:
case 0xf119:
case 0xf11a:
case 0xf11b:
case 0xf11c:
case 0xf11d:
case 0xf11e:
case 0xf11f:
case 0xf120:
case 0xf121:
case 0xf122:
case 0xf123:
case 0xf124:
case 0xf125:
case 0xf126:
case 0xf127:
case 0xf128:
case 0xf129:
case 0xf12a:
case 0xf12b:
case 0xf12c:
case 0xf12d:
case 0xf12e:
case 0xf12f:
case 0xf130:
case 0xf131:
case 0xf132:
case 0xf133:
case 0xf134:
case 0xf135:
case 0xf136:
case 0xf137:
case 0xf138:
case 0xf139:
case 0xf13a:
case 0xf13b:
case 0xf13c:
case 0xf13d:
case 0xf13e:
case 0xf13f:
case 0xf140:
case 0xf141:
case 0xf142:
case 0xf143:
case 0xf144:
case 0xf145:
case 0xf146:
case 0xf147:
case 0xf148:
case 0xf149:
case 0xf14a:
case 0xf14b:
case 0xf14c:
case 0xf14d:
case 0xf14e:
case 0xf14f:
case 0xf150:
case 0xf151:
case 0xf152:
case 0xf153:
case 0xf154:
case 0xf155:
case 0xf156:
case 0xf157:
case 0xf158:
case 0xf159:
case 0xf15a:
case 0xf15b:
case 0xf15c:
case 0xf15d:
case 0xf15e:
case 0xf15f:
case 0xf160:
case 0xf161:
case 0xf162:
case 0xf163:
case 0xf164:
case 0xf165:
case 0xf166:
case 0xf167:
case 0xf168:
case 0xf169:
case 0xf16a:
case 0xf16b:
case 0xf16c:
case 0xf16d:
case 0xf16e:
case 0xf16f:
case 0xf170:
case 0xf171:
case 0xf172:
case 0xf173:
case 0xf174:
case 0xf175:
case 0xf176:
case 0xf177:
case 0xf178:
case 0xf179:
case 0xf17a:
case 0xf17b:
case 0xf17c:
case 0xf17d:
case 0xf17e:
case 0xf17f:
case 0xf180:
case 0xf181:
case 0xf182:
case 0xf183:
case 0xf184:
case 0xf185:
case 0xf186:
case 0xf187:
case 0xf188:
case 0xf189:
case 0xf18a:
case 0xf18b:
case 0xf18c:
case 0xf18d:
case 0xf18e:
case 0xf18f:
case 0xf190:
case 0xf191:
case 0xf192:
case 0xf193:
case 0xf194:
case 0xf195:
case 0xf196:
case 0xf197:
case 0xf198:
case 0xf199:
case 0xf19a:
case 0xf19b:
case 0xf19c:
case 0xf19d:
case 0xf19e:
case 0xf19f:
case 0xf1a0:
case 0xf1a1:
case 0xf1a2:
case 0xf1a3:
case 0xf1a4:
case 0xf1a5:
case 0xf1a6:
case 0xf1a7:
case 0xf1a8:
case 0xf1a9:
case 0xf1aa:
case 0xf1ab:
case 0xf1ac:
case 0xf1ad:
case 0xf1ae:
case 0xf1af:
case 0xf1b0:
case 0xf1b1:
case 0xf1b2:
case 0xf1b3:
case 0xf1b4:
case 0xf1b5:
case 0xf1b6:
case 0xf1b7:
case 0xf1b8:
case 0xf1b9:
case 0xf1ba:
case 0xf1bb:
case 0xf1bc:
case 0xf1bd:
case 0xf1be:
case 0xf1bf:
case 0xf1c0:
case 0xf1c1:
case 0xf1c2:
case 0xf1c3:
case 0xf1c4:
case 0xf1c5:
case 0xf1c6:
case 0xf1c7:
case 0xf1c8:
case 0xf1c9:
case 0xf1ca:
case 0xf1cb:
case 0xf1cc:
case 0xf1cd:
case 0xf1ce:
case 0xf1cf:
case 0xf1d0:
case 0xf1d1:
case 0xf1d2:
case 0xf1d3:
case 0xf1d4:
case 0xf1d5:
case 0xf1d6:
case 0xf1d7:
case 0xf1d8:
case 0xf1d9:
case 0xf1da:
case 0xf1db:
case 0xf1dc:
case 0xf1dd:
case 0xf1de:
case 0xf1df:
case 0xf1e0:
case 0xf1e1:
case 0xf1e2:
case 0xf1e3:
case 0xf1e4:
case 0xf1e5:
case 0xf1e6:
case 0xf1e7:
case 0xf1e8:
case 0xf1e9:
case 0xf1ea:
case 0xf1eb:
case 0xf1ec:
case 0xf1ed:
case 0xf1ee:
case 0xf1ef:
case 0xf1f0:
case 0xf1f1:
case 0xf1f2:
case 0xf1f3:
case 0xf1f4:
case 0xf1f5:
case 0xf1f6:
case 0xf1f7:
case 0xf1f8:
case 0xf1f9:
case 0xf1fa:
case 0xf1fb:
case 0xf1fc:
case 0xf1fd:
case 0xf1fe:
case 0xf1ff:
case 0xf200:
case 0xf201:
case 0xf202:
case 0xf203:
case 0xf204:
case 0xf205:
case 0xf206:
case 0xf207:
case 0xf208:
case 0xf209:
case 0xf20a:
case 0xf20b:
case 0xf20c:
case 0xf20d:
case 0xf20e:
case 0xf20f:
case 0xf210:
case 0xf211:
case 0xf212:
case 0xf213:
case 0xf214:
case 0xf215:
case 0xf216:
case 0xf217:
case 0xf218:
case 0xf219:
case 0xf21a:
case 0xf21b:
case 0xf21c:
case 0xf21d:
case 0xf21e:
case 0xf21f:
case 0xf220:
case 0xf221:
case 0xf222:
case 0xf223:
case 0xf224:
case 0xf225:
case 0xf226:
case 0xf227:
case 0xf228:
case 0xf229:
case 0xf22a:
case 0xf22b:
case 0xf22c:
case 0xf22d:
case 0xf22e:
case 0xf22f:
case 0xf230:
case 0xf231:
case 0xf232:
case 0xf233:
case 0xf234:
case 0xf235:
case 0xf236:
case 0xf237:
case 0xf238:
case 0xf239:
case 0xf23a:
case 0xf23b:
case 0xf23c:
case 0xf23d:
case 0xf23e:
case 0xf23f:
case 0xf240:
case 0xf241:
case 0xf242:
case 0xf243:
case 0xf244:
case 0xf245:
case 0xf246:
case 0xf247:
case 0xf248:
case 0xf249:
case 0xf24a:
case 0xf24b:
case 0xf24c:
case 0xf24d:
case 0xf24e:
case 0xf24f:
case 0xf250:
case 0xf251:
case 0xf252:
case 0xf253:
case 0xf254:
case 0xf255:
case 0xf256:
case 0xf257:
case 0xf258:
case 0xf259:
case 0xf25a:
case 0xf25b:
case 0xf25c:
case 0xf25d:
case 0xf25e:
case 0xf25f:
case 0xf260:
case 0xf261:
case 0xf262:
case 0xf263:
case 0xf264:
case 0xf265:
case 0xf266:
case 0xf267:
case 0xf268:
case 0xf269:
case 0xf26a:
case 0xf26b:
case 0xf26c:
case 0xf26d:
case 0xf26e:
case 0xf26f:
case 0xf270:
case 0xf271:
case 0xf272:
case 0xf273:
case 0xf274:
case 0xf275:
case 0xf276:
case 0xf277:
case 0xf278:
case 0xf279:
case 0xf27a:
case 0xf27b:
case 0xf27c:
case 0xf27d:
case 0xf27e:
case 0xf27f:
case 0xf280:
case 0xf281:
case 0xf282:
case 0xf283:
case 0xf284:
case 0xf285:
case 0xf286:
case 0xf287:
case 0xf288:
case 0xf289:
case 0xf28a:
case 0xf28b:
case 0xf28c:
case 0xf28d:
case 0xf28e:
case 0xf28f:
case 0xf290:
case 0xf291:
case 0xf292:
case 0xf293:
case 0xf294:
case 0xf295:
case 0xf296:
case 0xf297:
case 0xf298:
case 0xf299:
case 0xf29a:
case 0xf29b:
case 0xf29c:
case 0xf29d:
case 0xf29e:
case 0xf29f:
case 0xf2a0:
case 0xf2a1:
case 0xf2a2:
case 0xf2a3:
case 0xf2a4:
case 0xf2a5:
case 0xf2a6:
case 0xf2a7:
case 0xf2a8:
case 0xf2a9:
case 0xf2aa:
case 0xf2ab:
case 0xf2ac:
case 0xf2ad:
case 0xf2ae:
case 0xf2af:
case 0xf2b0:
case 0xf2b1:
case 0xf2b2:
case 0xf2b3:
case 0xf2b4:
case 0xf2b5:
case 0xf2b6:
case 0xf2b7:
case 0xf2b8:
case 0xf2b9:
case 0xf2ba:
case 0xf2bb:
case 0xf2bc:
case 0xf2bd:
case 0xf2be:
case 0xf2bf:
case 0xf2c0:
case 0xf2c1:
case 0xf2c2:
case 0xf2c3:
case 0xf2c4:
case 0xf2c5:
case 0xf2c6:
case 0xf2c7:
case 0xf2c8:
case 0xf2c9:
case 0xf2ca:
case 0xf2cb:
case 0xf2cc:
case 0xf2cd:
case 0xf2ce:
case 0xf2cf:
case 0xf2d0:
case 0xf2d1:
case 0xf2d2:
case 0xf2d3:
case 0xf2d4:
case 0xf2d5:
case 0xf2d6:
case 0xf2d7:
case 0xf2d8:
case 0xf2d9:
case 0xf2da:
case 0xf2db:
case 0xf2dc:
case 0xf2dd:
case 0xf2de:
case 0xf2df:
case 0xf2e0:
case 0xf2e1:
case 0xf2e2:
case 0xf2e3:
case 0xf2e4:
case 0xf2e5:
case 0xf2e6:
case 0xf2e7:
case 0xf2e8:
case 0xf2e9:
case 0xf2ea:
case 0xf2eb:
case 0xf2ec:
case 0xf2ed:
case 0xf2ee:
case 0xf2ef:
case 0xf2f0:
case 0xf2f1:
case 0xf2f2:
case 0xf2f3:
case 0xf2f4:
case 0xf2f5:
case 0xf2f6:
case 0xf2f7:
case 0xf2f8:
case 0xf2f9:
case 0xf2fa:
case 0xf2fb:
case 0xf2fc:
case 0xf2fd:
case 0xf2fe:
case 0xf2ff:
case 0xf300:
case 0xf301:
case 0xf302:
case 0xf303:
case 0xf304:
case 0xf305:
case 0xf306:
case 0xf307:
case 0xf308:
case 0xf309:
case 0xf30a:
case 0xf30b:
case 0xf30c:
case 0xf30d:
case 0xf30e:
case 0xf30f:
case 0xf310:
case 0xf311:
case 0xf312:
case 0xf313:
case 0xf314:
case 0xf315:
case 0xf316:
case 0xf317:
case 0xf318:
case 0xf319:
case 0xf31a:
case 0xf31b:
case 0xf31c:
case 0xf31d:
case 0xf31e:
case 0xf31f:
case 0xf320:
case 0xf321:
case 0xf322:
case 0xf323:
case 0xf324:
case 0xf325:
case 0xf326:
case 0xf327:
case 0xf328:
case 0xf329:
case 0xf32a:
case 0xf32b:
case 0xf32c:
case 0xf32d:
case 0xf32e:
case 0xf32f:
case 0xf330:
case 0xf331:
case 0xf332:
case 0xf333:
case 0xf334:
case 0xf335:
case 0xf336:
case 0xf337:
case 0xf338:
case 0xf339:
case 0xf33a:
case 0xf33b:
case 0xf33c:
case 0xf33d:
case 0xf33e:
case 0xf33f:
case 0xf340:
case 0xf341:
case 0xf342:
case 0xf343:
case 0xf344:
case 0xf345:
case 0xf346:
case 0xf347:
case 0xf348:
case 0xf349:
case 0xf34a:
case 0xf34b:
case 0xf34c:
case 0xf34d:
case 0xf34e:
case 0xf34f:
case 0xf350:
case 0xf351:
case 0xf352:
case 0xf353:
case 0xf354:
case 0xf355:
case 0xf356:
case 0xf357:
case 0xf358:
case 0xf359:
case 0xf35a:
case 0xf35b:
case 0xf35c:
case 0xf35d:
case 0xf35e:
case 0xf35f:
case 0xf360:
case 0xf361:
case 0xf362:
case 0xf363:
case 0xf364:
case 0xf365:
case 0xf366:
case 0xf367:
case 0xf368:
case 0xf369:
case 0xf36a:
case 0xf36b:
case 0xf36c:
case 0xf36d:
case 0xf36e:
case 0xf36f:
case 0xf370:
case 0xf371:
case 0xf372:
case 0xf373:
case 0xf374:
case 0xf375:
case 0xf376:
case 0xf377:
case 0xf378:
case 0xf379:
case 0xf37a:
case 0xf37b:
case 0xf37c:
case 0xf37d:
case 0xf37e:
case 0xf37f:
case 0xf380:
case 0xf381:
case 0xf382:
case 0xf383:
case 0xf384:
case 0xf385:
case 0xf386:
case 0xf387:
case 0xf388:
case 0xf389:
case 0xf38a:
case 0xf38b:
case 0xf38c:
case 0xf38d:
case 0xf38e:
case 0xf38f:
case 0xf390:
case 0xf391:
case 0xf392:
case 0xf393:
case 0xf394:
case 0xf395:
case 0xf396:
case 0xf397:
case 0xf398:
case 0xf399:
case 0xf39a:
case 0xf39b:
case 0xf39c:
case 0xf39d:
case 0xf39e:
case 0xf39f:
case 0xf3a0:
case 0xf3a1:
case 0xf3a2:
case 0xf3a3:
case 0xf3a4:
case 0xf3a5:
case 0xf3a6:
case 0xf3a7:
case 0xf3a8:
case 0xf3a9:
case 0xf3aa:
case 0xf3ab:
case 0xf3ac:
case 0xf3ad:
case 0xf3ae:
case 0xf3af:
case 0xf3b0:
case 0xf3b1:
case 0xf3b2:
case 0xf3b3:
case 0xf3b4:
case 0xf3b5:
case 0xf3b6:
case 0xf3b7:
case 0xf3b8:
case 0xf3b9:
case 0xf3ba:
case 0xf3bb:
case 0xf3bc:
case 0xf3bd:
case 0xf3be:
case 0xf3bf:
case 0xf3c0:
case 0xf3c1:
case 0xf3c2:
case 0xf3c3:
case 0xf3c4:
case 0xf3c5:
case 0xf3c6:
case 0xf3c7:
case 0xf3c8:
case 0xf3c9:
case 0xf3ca:
case 0xf3cb:
case 0xf3cc:
case 0xf3cd:
case 0xf3ce:
case 0xf3cf:
case 0xf3d0:
case 0xf3d1:
case 0xf3d2:
case 0xf3d3:
case 0xf3d4:
case 0xf3d5:
case 0xf3d6:
case 0xf3d7:
case 0xf3d8:
case 0xf3d9:
case 0xf3da:
case 0xf3db:
case 0xf3dc:
case 0xf3dd:
case 0xf3de:
case 0xf3df:
case 0xf3e0:
case 0xf3e1:
case 0xf3e2:
case 0xf3e3:
case 0xf3e4:
case 0xf3e5:
case 0xf3e6:
case 0xf3e7:
case 0xf3e8:
case 0xf3e9:
case 0xf3ea:
case 0xf3eb:
case 0xf3ec:
case 0xf3ed:
case 0xf3ee:
case 0xf3ef:
case 0xf3f0:
case 0xf3f1:
case 0xf3f2:
case 0xf3f3:
case 0xf3f4:
case 0xf3f5:
case 0xf3f6:
case 0xf3f7:
case 0xf3f8:
case 0xf3f9:
case 0xf3fa:
case 0xf3fb:
case 0xf3fc:
case 0xf3fd:
case 0xf3fe:
case 0xf3ff:
case 0xf400:
case 0xf401:
case 0xf402:
case 0xf403:
case 0xf404:
case 0xf405:
case 0xf406:
case 0xf407:
case 0xf408:
case 0xf409:
case 0xf40a:
case 0xf40b:
case 0xf40c:
case 0xf40d:
case 0xf40e:
case 0xf40f:
case 0xf410:
case 0xf411:
case 0xf412:
case 0xf413:
case 0xf414:
case 0xf415:
case 0xf416:
case 0xf417:
case 0xf418:
case 0xf419:
case 0xf41a:
case 0xf41b:
case 0xf41c:
case 0xf41d:
case 0xf41e:
case 0xf41f:
case 0xf420:
case 0xf421:
case 0xf422:
case 0xf423:
case 0xf424:
case 0xf425:
case 0xf426:
case 0xf427:
case 0xf428:
case 0xf429:
case 0xf42a:
case 0xf42b:
case 0xf42c:
case 0xf42d:
case 0xf42e:
case 0xf42f:
case 0xf430:
case 0xf431:
case 0xf432:
case 0xf433:
case 0xf434:
case 0xf435:
case 0xf436:
case 0xf437:
case 0xf438:
case 0xf439:
case 0xf43a:
case 0xf43b:
case 0xf43c:
case 0xf43d:
case 0xf43e:
case 0xf43f:
case 0xf440:
case 0xf441:
case 0xf442:
case 0xf443:
case 0xf444:
case 0xf445:
case 0xf446:
case 0xf447:
case 0xf448:
case 0xf449:
case 0xf44a:
case 0xf44b:
case 0xf44c:
case 0xf44d:
case 0xf44e:
case 0xf44f:
case 0xf450:
case 0xf451:
case 0xf452:
case 0xf453:
case 0xf454:
case 0xf455:
case 0xf456:
case 0xf457:
case 0xf458:
case 0xf459:
case 0xf45a:
case 0xf45b:
case 0xf45c:
case 0xf45d:
case 0xf45e:
case 0xf45f:
case 0xf460:
case 0xf461:
case 0xf462:
case 0xf463:
case 0xf464:
case 0xf465:
case 0xf466:
case 0xf467:
case 0xf468:
case 0xf469:
case 0xf46a:
case 0xf46b:
case 0xf46c:
case 0xf46d:
case 0xf46e:
case 0xf46f:
case 0xf470:
case 0xf471:
case 0xf472:
case 0xf473:
case 0xf474:
case 0xf475:
case 0xf476:
case 0xf477:
case 0xf478:
case 0xf479:
case 0xf47a:
case 0xf47b:
case 0xf47c:
case 0xf47d:
case 0xf47e:
case 0xf47f:
case 0xf480:
case 0xf481:
case 0xf482:
case 0xf483:
case 0xf484:
case 0xf485:
case 0xf486:
case 0xf487:
case 0xf488:
case 0xf489:
case 0xf48a:
case 0xf48b:
case 0xf48c:
case 0xf48d:
case 0xf48e:
case 0xf48f:
case 0xf490:
case 0xf491:
case 0xf492:
case 0xf493:
case 0xf494:
case 0xf495:
case 0xf496:
case 0xf497:
case 0xf498:
case 0xf499:
case 0xf49a:
case 0xf49b:
case 0xf49c:
case 0xf49d:
case 0xf49e:
case 0xf49f:
case 0xf4a0:
case 0xf4a1:
case 0xf4a2:
case 0xf4a3:
case 0xf4a4:
case 0xf4a5:
case 0xf4a6:
case 0xf4a7:
case 0xf4a8:
case 0xf4a9:
case 0xf4aa:
case 0xf4ab:
case 0xf4ac:
case 0xf4ad:
case 0xf4ae:
case 0xf4af:
case 0xf4b0:
case 0xf4b1:
case 0xf4b2:
case 0xf4b3:
case 0xf4b4:
case 0xf4b5:
case 0xf4b6:
case 0xf4b7:
case 0xf4b8:
case 0xf4b9:
case 0xf4ba:
case 0xf4bb:
case 0xf4bc:
case 0xf4bd:
case 0xf4be:
case 0xf4bf:
case 0xf4c0:
case 0xf4c1:
case 0xf4c2:
case 0xf4c3:
case 0xf4c4:
case 0xf4c5:
case 0xf4c6:
case 0xf4c7:
case 0xf4c8:
case 0xf4c9:
case 0xf4ca:
case 0xf4cb:
case 0xf4cc:
case 0xf4cd:
case 0xf4ce:
case 0xf4cf:
case 0xf4d0:
case 0xf4d1:
case 0xf4d2:
case 0xf4d3:
case 0xf4d4:
case 0xf4d5:
case 0xf4d6:
case 0xf4d7:
case 0xf4d8:
case 0xf4d9:
case 0xf4da:
case 0xf4db:
case 0xf4dc:
case 0xf4dd:
case 0xf4de:
case 0xf4df:
case 0xf4e0:
case 0xf4e1:
case 0xf4e2:
case 0xf4e3:
case 0xf4e4:
case 0xf4e5:
case 0xf4e6:
case 0xf4e7:
case 0xf4e8:
case 0xf4e9:
case 0xf4ea:
case 0xf4eb:
case 0xf4ec:
case 0xf4ed:
case 0xf4ee:
case 0xf4ef:
case 0xf4f0:
case 0xf4f1:
case 0xf4f2:
case 0xf4f3:
case 0xf4f4:
case 0xf4f5:
case 0xf4f6:
case 0xf4f7:
case 0xf4f8:
case 0xf4f9:
case 0xf4fa:
case 0xf4fb:
case 0xf4fc:
case 0xf4fd:
case 0xf4fe:
case 0xf4ff:
case 0xf500:
case 0xf501:
case 0xf502:
case 0xf503:
case 0xf504:
case 0xf505:
case 0xf506:
case 0xf507:
case 0xf508:
case 0xf509:
case 0xf50a:
case 0xf50b:
case 0xf50c:
case 0xf50d:
case 0xf50e:
case 0xf50f:
case 0xf510:
case 0xf511:
case 0xf512:
case 0xf513:
case 0xf514:
case 0xf515:
case 0xf516:
case 0xf517:
case 0xf518:
case 0xf519:
case 0xf51a:
case 0xf51b:
case 0xf51c:
case 0xf51d:
case 0xf51e:
case 0xf51f:
case 0xf520:
case 0xf521:
case 0xf522:
case 0xf523:
case 0xf524:
case 0xf525:
case 0xf526:
case 0xf527:
case 0xf528:
case 0xf529:
case 0xf52a:
case 0xf52b:
case 0xf52c:
case 0xf52d:
case 0xf52e:
case 0xf52f:
case 0xf530:
case 0xf531:
case 0xf532:
case 0xf533:
case 0xf534:
case 0xf535:
case 0xf536:
case 0xf537:
case 0xf538:
case 0xf539:
case 0xf53a:
case 0xf53b:
case 0xf53c:
case 0xf53d:
case 0xf53e:
case 0xf53f:
case 0xf540:
case 0xf541:
case 0xf542:
case 0xf543:
case 0xf544:
case 0xf545:
case 0xf546:
case 0xf547:
case 0xf548:
case 0xf549:
case 0xf54a:
case 0xf54b:
case 0xf54c:
case 0xf54d:
case 0xf54e:
case 0xf54f:
case 0xf550:
case 0xf551:
case 0xf552:
case 0xf553:
case 0xf554:
case 0xf555:
case 0xf556:
case 0xf557:
case 0xf558:
case 0xf559:
case 0xf55a:
case 0xf55b:
case 0xf55c:
case 0xf55d:
case 0xf55e:
case 0xf55f:
case 0xf560:
case 0xf561:
case 0xf562:
case 0xf563:
case 0xf564:
case 0xf565:
case 0xf566:
case 0xf567:
case 0xf568:
case 0xf569:
case 0xf56a:
case 0xf56b:
case 0xf56c:
case 0xf56d:
case 0xf56e:
case 0xf56f:
case 0xf570:
case 0xf571:
case 0xf572:
case 0xf573:
case 0xf574:
case 0xf575:
case 0xf576:
case 0xf577:
case 0xf578:
case 0xf579:
case 0xf57a:
case 0xf57b:
case 0xf57c:
case 0xf57d:
case 0xf57e:
case 0xf57f:
case 0xf580:
case 0xf581:
case 0xf582:
case 0xf583:
case 0xf584:
case 0xf585:
case 0xf586:
case 0xf587:
case 0xf588:
case 0xf589:
case 0xf58a:
case 0xf58b:
case 0xf58c:
case 0xf58d:
case 0xf58e:
case 0xf58f:
case 0xf590:
case 0xf591:
case 0xf592:
case 0xf593:
case 0xf594:
case 0xf595:
case 0xf596:
case 0xf597:
case 0xf598:
case 0xf599:
case 0xf59a:
case 0xf59b:
case 0xf59c:
case 0xf59d:
case 0xf59e:
case 0xf59f:
case 0xf5a0:
case 0xf5a1:
case 0xf5a2:
case 0xf5a3:
case 0xf5a4:
case 0xf5a5:
case 0xf5a6:
case 0xf5a7:
case 0xf5a8:
case 0xf5a9:
case 0xf5aa:
case 0xf5ab:
case 0xf5ac:
case 0xf5ad:
case 0xf5ae:
case 0xf5af:
case 0xf5b0:
case 0xf5b1:
case 0xf5b2:
case 0xf5b3:
case 0xf5b4:
case 0xf5b5:
case 0xf5b6:
case 0xf5b7:
case 0xf5b8:
case 0xf5b9:
case 0xf5ba:
case 0xf5bb:
case 0xf5bc:
case 0xf5bd:
case 0xf5be:
case 0xf5bf:
case 0xf5c0:
case 0xf5c1:
case 0xf5c2:
case 0xf5c3:
case 0xf5c4:
case 0xf5c5:
case 0xf5c6:
case 0xf5c7:
case 0xf5c8:
case 0xf5c9:
case 0xf5ca:
case 0xf5cb:
case 0xf5cc:
case 0xf5cd:
case 0xf5ce:
case 0xf5cf:
case 0xf5d0:
case 0xf5d1:
case 0xf5d2:
case 0xf5d3:
case 0xf5d4:
case 0xf5d5:
case 0xf5d6:
case 0xf5d7:
case 0xf5d8:
case 0xf5d9:
case 0xf5da:
case 0xf5db:
case 0xf5dc:
case 0xf5dd:
case 0xf5de:
case 0xf5df:
case 0xf5e0:
case 0xf5e1:
case 0xf5e2:
case 0xf5e3:
case 0xf5e4:
case 0xf5e5:
case 0xf5e6:
case 0xf5e7:
case 0xf5e8:
case 0xf5e9:
case 0xf5ea:
case 0xf5eb:
case 0xf5ec:
case 0xf5ed:
case 0xf5ee:
case 0xf5ef:
case 0xf5f0:
case 0xf5f1:
case 0xf5f2:
case 0xf5f3:
case 0xf5f4:
case 0xf5f5:
case 0xf5f6:
case 0xf5f7:
case 0xf5f8:
case 0xf5f9:
case 0xf5fa:
case 0xf5fb:
case 0xf5fc:
case 0xf5fd:
case 0xf5fe:
case 0xf5ff:
case 0xf600:
case 0xf601:
case 0xf602:
case 0xf603:
case 0xf604:
case 0xf605:
case 0xf606:
case 0xf607:
case 0xf608:
case 0xf609:
case 0xf60a:
case 0xf60b:
case 0xf60c:
case 0xf60d:
case 0xf60e:
case 0xf60f:
case 0xf610:
case 0xf611:
case 0xf612:
case 0xf613:
case 0xf614:
case 0xf615:
case 0xf616:
case 0xf617:
case 0xf618:
case 0xf619:
case 0xf61a:
case 0xf61b:
case 0xf61c:
case 0xf61d:
case 0xf61e:
case 0xf61f:
case 0xf620:
case 0xf621:
case 0xf622:
case 0xf623:
case 0xf624:
case 0xf625:
case 0xf626:
case 0xf627:
case 0xf628:
case 0xf629:
case 0xf62a:
case 0xf62b:
case 0xf62c:
case 0xf62d:
case 0xf62e:
case 0xf62f:
case 0xf630:
case 0xf631:
case 0xf632:
case 0xf633:
case 0xf634:
case 0xf635:
case 0xf636:
case 0xf637:
case 0xf638:
case 0xf639:
case 0xf63a:
case 0xf63b:
case 0xf63c:
case 0xf63d:
case 0xf63e:
case 0xf63f:
case 0xf640:
case 0xf641:
case 0xf642:
case 0xf643:
case 0xf644:
case 0xf645:
case 0xf646:
case 0xf647:
case 0xf648:
case 0xf649:
case 0xf64a:
case 0xf64b:
case 0xf64c:
case 0xf64d:
case 0xf64e:
case 0xf64f:
case 0xf650:
case 0xf651:
case 0xf652:
case 0xf653:
case 0xf654:
case 0xf655:
case 0xf656:
case 0xf657:
case 0xf658:
case 0xf659:
case 0xf65a:
case 0xf65b:
case 0xf65c:
case 0xf65d:
case 0xf65e:
case 0xf65f:
case 0xf660:
case 0xf661:
case 0xf662:
case 0xf663:
case 0xf664:
case 0xf665:
case 0xf666:
case 0xf667:
case 0xf668:
case 0xf669:
case 0xf66a:
case 0xf66b:
case 0xf66c:
case 0xf66d:
case 0xf66e:
case 0xf66f:
case 0xf670:
case 0xf671:
case 0xf672:
case 0xf673:
case 0xf674:
case 0xf675:
case 0xf676:
case 0xf677:
case 0xf678:
case 0xf679:
case 0xf67a:
case 0xf67b:
case 0xf67c:
case 0xf67d:
case 0xf67e:
case 0xf67f:
case 0xf680:
case 0xf681:
case 0xf682:
case 0xf683:
case 0xf684:
case 0xf685:
case 0xf686:
case 0xf687:
case 0xf688:
case 0xf689:
case 0xf68a:
case 0xf68b:
case 0xf68c:
case 0xf68d:
case 0xf68e:
case 0xf68f:
case 0xf690:
case 0xf691:
case 0xf692:
case 0xf693:
case 0xf694:
case 0xf695:
case 0xf696:
case 0xf697:
case 0xf698:
case 0xf699:
case 0xf69a:
case 0xf69b:
case 0xf69c:
case 0xf69d:
case 0xf69e:
case 0xf69f:
case 0xf6a0:
case 0xf6a1:
case 0xf6a2:
case 0xf6a3:
case 0xf6a4:
case 0xf6a5:
case 0xf6a6:
case 0xf6a7:
case 0xf6a8:
case 0xf6a9:
case 0xf6aa:
case 0xf6ab:
case 0xf6ac:
case 0xf6ad:
case 0xf6ae:
case 0xf6af:
case 0xf6b0:
case 0xf6b1:
case 0xf6b2:
case 0xf6b3:
case 0xf6b4:
case 0xf6b5:
case 0xf6b6:
case 0xf6b7:
case 0xf6b8:
case 0xf6b9:
case 0xf6ba:
case 0xf6bb:
case 0xf6bc:
case 0xf6bd:
case 0xf6be:
case 0xf6bf:
case 0xf6c0:
case 0xf6c1:
case 0xf6c2:
case 0xf6c3:
case 0xf6c4:
case 0xf6c5:
case 0xf6c6:
case 0xf6c7:
case 0xf6c8:
case 0xf6c9:
case 0xf6ca:
case 0xf6cb:
case 0xf6cc:
case 0xf6cd:
case 0xf6ce:
case 0xf6cf:
case 0xf6d0:
case 0xf6d1:
case 0xf6d2:
case 0xf6d3:
case 0xf6d4:
case 0xf6d5:
case 0xf6d6:
case 0xf6d7:
case 0xf6d8:
case 0xf6d9:
case 0xf6da:
case 0xf6db:
case 0xf6dc:
case 0xf6dd:
case 0xf6de:
case 0xf6df:
case 0xf6e0:
case 0xf6e1:
case 0xf6e2:
case 0xf6e3:
case 0xf6e4:
case 0xf6e5:
case 0xf6e6:
case 0xf6e7:
case 0xf6e8:
case 0xf6e9:
case 0xf6ea:
case 0xf6eb:
case 0xf6ec:
case 0xf6ed:
case 0xf6ee:
case 0xf6ef:
case 0xf6f0:
case 0xf6f1:
case 0xf6f2:
case 0xf6f3:
case 0xf6f4:
case 0xf6f5:
case 0xf6f6:
case 0xf6f7:
case 0xf6f8:
case 0xf6f9:
case 0xf6fa:
case 0xf6fb:
case 0xf6fc:
case 0xf6fd:
case 0xf6fe:
case 0xf6ff:
case 0xf700:
case 0xf701:
case 0xf702:
case 0xf703:
case 0xf704:
case 0xf705:
case 0xf706:
case 0xf707:
case 0xf708:
case 0xf709:
case 0xf70a:
case 0xf70b:
case 0xf70c:
case 0xf70d:
case 0xf70e:
case 0xf70f:
case 0xf710:
case 0xf711:
case 0xf712:
case 0xf713:
case 0xf714:
case 0xf715:
case 0xf716:
case 0xf717:
case 0xf718:
case 0xf719:
case 0xf71a:
case 0xf71b:
case 0xf71c:
case 0xf71d:
case 0xf71e:
case 0xf71f:
case 0xf720:
case 0xf721:
case 0xf722:
case 0xf723:
case 0xf724:
case 0xf725:
case 0xf726:
case 0xf727:
case 0xf728:
case 0xf729:
case 0xf72a:
case 0xf72b:
case 0xf72c:
case 0xf72d:
case 0xf72e:
case 0xf72f:
case 0xf730:
case 0xf731:
case 0xf732:
case 0xf733:
case 0xf734:
case 0xf735:
case 0xf736:
case 0xf737:
case 0xf738:
case 0xf739:
case 0xf73a:
case 0xf73b:
case 0xf73c:
case 0xf73d:
case 0xf73e:
case 0xf73f:
case 0xf740:
case 0xf741:
case 0xf742:
case 0xf743:
case 0xf744:
case 0xf745:
case 0xf746:
case 0xf747:
case 0xf748:
case 0xf749:
case 0xf74a:
case 0xf74b:
case 0xf74c:
case 0xf74d:
case 0xf74e:
case 0xf74f:
case 0xf750:
case 0xf751:
case 0xf752:
case 0xf753:
case 0xf754:
case 0xf755:
case 0xf756:
case 0xf757:
case 0xf758:
case 0xf759:
case 0xf75a:
case 0xf75b:
case 0xf75c:
case 0xf75d:
case 0xf75e:
case 0xf75f:
case 0xf760:
case 0xf761:
case 0xf762:
case 0xf763:
case 0xf764:
case 0xf765:
case 0xf766:
case 0xf767:
case 0xf768:
case 0xf769:
case 0xf76a:
case 0xf76b:
case 0xf76c:
case 0xf76d:
case 0xf76e:
case 0xf76f:
case 0xf770:
case 0xf771:
case 0xf772:
case 0xf773:
case 0xf774:
case 0xf775:
case 0xf776:
case 0xf777:
case 0xf778:
case 0xf779:
case 0xf77a:
case 0xf77b:
case 0xf77c:
case 0xf77d:
case 0xf77e:
case 0xf77f:
case 0xf780:
case 0xf781:
case 0xf782:
case 0xf783:
case 0xf784:
case 0xf785:
case 0xf786:
case 0xf787:
case 0xf788:
case 0xf789:
case 0xf78a:
case 0xf78b:
case 0xf78c:
case 0xf78d:
case 0xf78e:
case 0xf78f:
case 0xf790:
case 0xf791:
case 0xf792:
case 0xf793:
case 0xf794:
case 0xf795:
case 0xf796:
case 0xf797:
case 0xf798:
case 0xf799:
case 0xf79a:
case 0xf79b:
case 0xf79c:
case 0xf79d:
case 0xf79e:
case 0xf79f:
case 0xf7a0:
case 0xf7a1:
case 0xf7a2:
case 0xf7a3:
case 0xf7a4:
case 0xf7a5:
case 0xf7a6:
case 0xf7a7:
case 0xf7a8:
case 0xf7a9:
case 0xf7aa:
case 0xf7ab:
case 0xf7ac:
case 0xf7ad:
case 0xf7ae:
case 0xf7af:
case 0xf7b0:
case 0xf7b1:
case 0xf7b2:
case 0xf7b3:
case 0xf7b4:
case 0xf7b5:
case 0xf7b6:
case 0xf7b7:
case 0xf7b8:
case 0xf7b9:
case 0xf7ba:
case 0xf7bb:
case 0xf7bc:
case 0xf7bd:
case 0xf7be:
case 0xf7bf:
case 0xf7c0:
case 0xf7c1:
case 0xf7c2:
case 0xf7c3:
case 0xf7c4:
case 0xf7c5:
case 0xf7c6:
case 0xf7c7:
case 0xf7c8:
case 0xf7c9:
case 0xf7ca:
case 0xf7cb:
case 0xf7cc:
case 0xf7cd:
case 0xf7ce:
case 0xf7cf:
case 0xf7d0:
case 0xf7d1:
case 0xf7d2:
case 0xf7d3:
case 0xf7d4:
case 0xf7d5:
case 0xf7d6:
case 0xf7d7:
case 0xf7d8:
case 0xf7d9:
case 0xf7da:
case 0xf7db:
case 0xf7dc:
case 0xf7dd:
case 0xf7de:
case 0xf7df:
case 0xf7e0:
case 0xf7e1:
case 0xf7e2:
case 0xf7e3:
case 0xf7e4:
case 0xf7e5:
case 0xf7e6:
case 0xf7e7:
case 0xf7e8:
case 0xf7e9:
case 0xf7ea:
case 0xf7eb:
case 0xf7ec:
case 0xf7ed:
case 0xf7ee:
case 0xf7ef:
case 0xf7f0:
case 0xf7f1:
case 0xf7f2:
case 0xf7f3:
case 0xf7f4:
case 0xf7f5:
case 0xf7f6:
case 0xf7f7:
case 0xf7f8:
case 0xf7f9:
case 0xf7fa:
case 0xf7fb:
case 0xf7fc:
case 0xf7fd:
case 0xf7fe:
case 0xf7ff:
case 0xf800:
case 0xf801:
case 0xf802:
case 0xf803:
case 0xf804:
case 0xf805:
case 0xf806:
case 0xf807:
case 0xf808:
case 0xf809:
case 0xf80a:
case 0xf80b:
case 0xf80c:
case 0xf80d:
case 0xf80e:
case 0xf80f:
case 0xf810:
case 0xf811:
case 0xf812:
case 0xf813:
case 0xf814:
case 0xf815:
case 0xf816:
case 0xf817:
case 0xf818:
case 0xf819:
case 0xf81a:
case 0xf81b:
case 0xf81c:
case 0xf81d:
case 0xf81e:
case 0xf81f:
case 0xf820:
case 0xf821:
case 0xf822:
case 0xf823:
case 0xf824:
case 0xf825:
case 0xf826:
case 0xf827:
case 0xf828:
case 0xf829:
case 0xf82a:
case 0xf82b:
case 0xf82c:
case 0xf82d:
case 0xf82e:
case 0xf82f:
case 0xf830:
case 0xf831:
case 0xf832:
case 0xf833:
case 0xf834:
case 0xf835:
case 0xf836:
case 0xf837:
case 0xf838:
case 0xf839:
case 0xf83a:
case 0xf83b:
case 0xf83c:
case 0xf83d:
case 0xf83e:
case 0xf83f:
case 0xf840:
case 0xf841:
case 0xf842:
case 0xf843:
case 0xf844:
case 0xf845:
case 0xf846:
case 0xf847:
case 0xf848:
case 0xf849:
case 0xf84a:
case 0xf84b:
case 0xf84c:
case 0xf84d:
case 0xf84e:
case 0xf84f:
case 0xf850:
case 0xf851:
case 0xf852:
case 0xf853:
case 0xf854:
case 0xf855:
case 0xf856:
case 0xf857:
case 0xf858:
case 0xf859:
case 0xf85a:
case 0xf85b:
case 0xf85c:
case 0xf85d:
case 0xf85e:
case 0xf85f:
case 0xf860:
case 0xf861:
case 0xf862:
case 0xf863:
case 0xf864:
case 0xf865:
case 0xf866:
case 0xf867:
case 0xf868:
case 0xf869:
case 0xf86a:
case 0xf86b:
case 0xf86c:
case 0xf86d:
case 0xf86e:
case 0xf86f:
case 0xf870:
case 0xf871:
case 0xf872:
case 0xf873:
case 0xf874:
case 0xf875:
case 0xf876:
case 0xf877:
case 0xf878:
case 0xf879:
case 0xf87a:
case 0xf87b:
case 0xf87c:
case 0xf87d:
case 0xf87e:
case 0xf87f:
case 0xf880:
case 0xf881:
case 0xf882:
case 0xf883:
case 0xf884:
case 0xf885:
case 0xf886:
case 0xf887:
case 0xf888:
case 0xf889:
case 0xf88a:
case 0xf88b:
case 0xf88c:
case 0xf88d:
case 0xf88e:
case 0xf88f:
case 0xf890:
case 0xf891:
case 0xf892:
case 0xf893:
case 0xf894:
case 0xf895:
case 0xf896:
case 0xf897:
case 0xf898:
case 0xf899:
case 0xf89a:
case 0xf89b:
case 0xf89c:
case 0xf89d:
case 0xf89e:
case 0xf89f:
case 0xf8a0:
case 0xf8a1:
case 0xf8a2:
case 0xf8a3:
case 0xf8a4:
case 0xf8a5:
case 0xf8a6:
case 0xf8a7:
case 0xf8a8:
case 0xf8a9:
case 0xf8aa:
case 0xf8ab:
case 0xf8ac:
case 0xf8ad:
case 0xf8ae:
case 0xf8af:
case 0xf8b0:
case 0xf8b1:
case 0xf8b2:
case 0xf8b3:
case 0xf8b4:
case 0xf8b5:
case 0xf8b6:
case 0xf8b7:
case 0xf8b8:
case 0xf8b9:
case 0xf8ba:
case 0xf8bb:
case 0xf8bc:
case 0xf8bd:
case 0xf8be:
case 0xf8bf:
case 0xf8c0:
case 0xf8c1:
case 0xf8c2:
case 0xf8c3:
case 0xf8c4:
case 0xf8c5:
case 0xf8c6:
case 0xf8c7:
case 0xf8c8:
case 0xf8c9:
case 0xf8ca:
case 0xf8cb:
case 0xf8cc:
case 0xf8cd:
case 0xf8ce:
case 0xf8cf:
case 0xf8d0:
case 0xf8d1:
case 0xf8d2:
case 0xf8d3:
case 0xf8d4:
case 0xf8d5:
case 0xf8d6:
case 0xf8d7:
case 0xf8d8:
case 0xf8d9:
case 0xf8da:
case 0xf8db:
case 0xf8dc:
case 0xf8dd:
case 0xf8de:
case 0xf8df:
case 0xf8e0:
case 0xf8e1:
case 0xf8e2:
case 0xf8e3:
case 0xf8e4:
case 0xf8e5:
case 0xf8e6:
case 0xf8e7:
case 0xf8e8:
case 0xf8e9:
case 0xf8ea:
case 0xf8eb:
case 0xf8ec:
case 0xf8ed:
case 0xf8ee:
case 0xf8ef:
case 0xf8f0:
case 0xf8f1:
case 0xf8f2:
case 0xf8f3:
case 0xf8f4:
case 0xf8f5:
case 0xf8f6:
case 0xf8f7:
case 0xf8f8:
case 0xf8f9:
case 0xf8fa:
case 0xf8fb:
case 0xf8fc:
case 0xf8fd:
case 0xf8fe:
case 0xf8ff:
case 0xf900:
case 0xf901:
case 0xf902:
case 0xf903:
case 0xf904:
case 0xf905:
case 0xf906:
case 0xf907:
case 0xf908:
case 0xf909:
case 0xf90a:
case 0xf90b:
case 0xf90c:
case 0xf90d:
case 0xf90e:
case 0xf90f:
case 0xf910:
case 0xf911:
case 0xf912:
case 0xf913:
case 0xf914:
case 0xf915:
case 0xf916:
case 0xf917:
case 0xf918:
case 0xf919:
case 0xf91a:
case 0xf91b:
case 0xf91c:
case 0xf91d:
case 0xf91e:
case 0xf91f:
case 0xf920:
case 0xf921:
case 0xf922:
case 0xf923:
case 0xf924:
case 0xf925:
case 0xf926:
case 0xf927:
case 0xf928:
case 0xf929:
case 0xf92a:
case 0xf92b:
case 0xf92c:
case 0xf92d:
case 0xf92e:
case 0xf92f:
case 0xf930:
case 0xf931:
case 0xf932:
case 0xf933:
case 0xf934:
case 0xf935:
case 0xf936:
case 0xf937:
case 0xf938:
case 0xf939:
case 0xf93a:
case 0xf93b:
case 0xf93c:
case 0xf93d:
case 0xf93e:
case 0xf93f:
case 0xf940:
case 0xf941:
case 0xf942:
case 0xf943:
case 0xf944:
case 0xf945:
case 0xf946:
case 0xf947:
case 0xf948:
case 0xf949:
case 0xf94a:
case 0xf94b:
case 0xf94c:
case 0xf94d:
case 0xf94e:
case 0xf94f:
case 0xf950:
case 0xf951:
case 0xf952:
case 0xf953:
case 0xf954:
case 0xf955:
case 0xf956:
case 0xf957:
case 0xf958:
case 0xf959:
case 0xf95a:
case 0xf95b:
case 0xf95c:
case 0xf95d:
case 0xf95e:
case 0xf95f:
case 0xf960:
case 0xf961:
case 0xf962:
case 0xf963:
case 0xf964:
case 0xf965:
case 0xf966:
case 0xf967:
case 0xf968:
case 0xf969:
case 0xf96a:
case 0xf96b:
case 0xf96c:
case 0xf96d:
case 0xf96e:
case 0xf96f:
case 0xf970:
case 0xf971:
case 0xf972:
case 0xf973:
case 0xf974:
case 0xf975:
case 0xf976:
case 0xf977:
case 0xf978:
case 0xf979:
case 0xf97a:
case 0xf97b:
case 0xf97c:
case 0xf97d:
case 0xf97e:
case 0xf97f:
case 0xf980:
case 0xf981:
case 0xf982:
case 0xf983:
case 0xf984:
case 0xf985:
case 0xf986:
case 0xf987:
case 0xf988:
case 0xf989:
case 0xf98a:
case 0xf98b:
case 0xf98c:
case 0xf98d:
case 0xf98e:
case 0xf98f:
case 0xf990:
case 0xf991:
case 0xf992:
case 0xf993:
case 0xf994:
case 0xf995:
case 0xf996:
case 0xf997:
case 0xf998:
case 0xf999:
case 0xf99a:
case 0xf99b:
case 0xf99c:
case 0xf99d:
case 0xf99e:
case 0xf99f:
case 0xf9a0:
case 0xf9a1:
case 0xf9a2:
case 0xf9a3:
case 0xf9a4:
case 0xf9a5:
case 0xf9a6:
case 0xf9a7:
case 0xf9a8:
case 0xf9a9:
case 0xf9aa:
case 0xf9ab:
case 0xf9ac:
case 0xf9ad:
case 0xf9ae:
case 0xf9af:
case 0xf9b0:
case 0xf9b1:
case 0xf9b2:
case 0xf9b3:
case 0xf9b4:
case 0xf9b5:
case 0xf9b6:
case 0xf9b7:
case 0xf9b8:
case 0xf9b9:
case 0xf9ba:
case 0xf9bb:
case 0xf9bc:
case 0xf9bd:
case 0xf9be:
case 0xf9bf:
case 0xf9c0:
case 0xf9c1:
case 0xf9c2:
case 0xf9c3:
case 0xf9c4:
case 0xf9c5:
case 0xf9c6:
case 0xf9c7:
case 0xf9c8:
case 0xf9c9:
case 0xf9ca:
case 0xf9cb:
case 0xf9cc:
case 0xf9cd:
case 0xf9ce:
case 0xf9cf:
case 0xf9d0:
case 0xf9d1:
case 0xf9d2:
case 0xf9d3:
case 0xf9d4:
case 0xf9d5:
case 0xf9d6:
case 0xf9d7:
case 0xf9d8:
case 0xf9d9:
case 0xf9da:
case 0xf9db:
case 0xf9dc:
case 0xf9dd:
case 0xf9de:
case 0xf9df:
case 0xf9e0:
case 0xf9e1:
case 0xf9e2:
case 0xf9e3:
case 0xf9e4:
case 0xf9e5:
case 0xf9e6:
case 0xf9e7:
case 0xf9e8:
case 0xf9e9:
case 0xf9ea:
case 0xf9eb:
case 0xf9ec:
case 0xf9ed:
case 0xf9ee:
case 0xf9ef:
case 0xf9f0:
case 0xf9f1:
case 0xf9f2:
case 0xf9f3:
case 0xf9f4:
case 0xf9f5:
case 0xf9f6:
case 0xf9f7:
case 0xf9f8:
case 0xf9f9:
case 0xf9fa:
case 0xf9fb:
case 0xf9fc:
case 0xf9fd:
case 0xf9fe:
case 0xf9ff:
case 0xfa00:
case 0xfa01:
case 0xfa02:
case 0xfa03:
case 0xfa04:
case 0xfa05:
case 0xfa06:
case 0xfa07:
case 0xfa08:
case 0xfa09:
case 0xfa0a:
case 0xfa0b:
case 0xfa0c:
case 0xfa0d:
case 0xfa0e:
case 0xfa0f:
case 0xfa10:
case 0xfa11:
case 0xfa12:
case 0xfa13:
case 0xfa14:
case 0xfa15:
case 0xfa16:
case 0xfa17:
case 0xfa18:
case 0xfa19:
case 0xfa1a:
case 0xfa1b:
case 0xfa1c:
case 0xfa1d:
case 0xfa1e:
case 0xfa1f:
case 0xfa20:
case 0xfa21:
case 0xfa22:
case 0xfa23:
case 0xfa24:
case 0xfa25:
case 0xfa26:
case 0xfa27:
case 0xfa28:
case 0xfa29:
case 0xfa2a:
case 0xfa2b:
case 0xfa2c:
case 0xfa2d:
case 0xfa2e:
case 0xfa2f:
case 0xfa30:
case 0xfa31:
case 0xfa32:
case 0xfa33:
case 0xfa34:
case 0xfa35:
case 0xfa36:
case 0xfa37:
case 0xfa38:
case 0xfa39:
case 0xfa3a:
case 0xfa3b:
case 0xfa3c:
case 0xfa3d:
case 0xfa3e:
case 0xfa3f:
case 0xfa40:
case 0xfa41:
case 0xfa42:
case 0xfa43:
case 0xfa44:
case 0xfa45:
case 0xfa46:
case 0xfa47:
case 0xfa48:
case 0xfa49:
case 0xfa4a:
case 0xfa4b:
case 0xfa4c:
case 0xfa4d:
case 0xfa4e:
case 0xfa4f:
case 0xfa50:
case 0xfa51:
case 0xfa52:
case 0xfa53:
case 0xfa54:
case 0xfa55:
case 0xfa56:
case 0xfa57:
case 0xfa58:
case 0xfa59:
case 0xfa5a:
case 0xfa5b:
case 0xfa5c:
case 0xfa5d:
case 0xfa5e:
case 0xfa5f:
case 0xfa60:
case 0xfa61:
case 0xfa62:
case 0xfa63:
case 0xfa64:
case 0xfa65:
case 0xfa66:
case 0xfa67:
case 0xfa68:
case 0xfa69:
case 0xfa6a:
case 0xfa6b:
case 0xfa6c:
case 0xfa6d:
case 0xfa6e:
case 0xfa6f:
case 0xfa70:
case 0xfa71:
case 0xfa72:
case 0xfa73:
case 0xfa74:
case 0xfa75:
case 0xfa76:
case 0xfa77:
case 0xfa78:
case 0xfa79:
case 0xfa7a:
case 0xfa7b:
case 0xfa7c:
case 0xfa7d:
case 0xfa7e:
case 0xfa7f:
case 0xfa80:
case 0xfa81:
case 0xfa82:
case 0xfa83:
case 0xfa84:
case 0xfa85:
case 0xfa86:
case 0xfa87:
case 0xfa88:
case 0xfa89:
case 0xfa8a:
case 0xfa8b:
case 0xfa8c:
case 0xfa8d:
case 0xfa8e:
case 0xfa8f:
case 0xfa90:
case 0xfa91:
case 0xfa92:
case 0xfa93:
case 0xfa94:
case 0xfa95:
case 0xfa96:
case 0xfa97:
case 0xfa98:
case 0xfa99:
case 0xfa9a:
case 0xfa9b:
case 0xfa9c:
case 0xfa9d:
case 0xfa9e:
case 0xfa9f:
case 0xfaa0:
case 0xfaa1:
case 0xfaa2:
case 0xfaa3:
case 0xfaa4:
case 0xfaa5:
case 0xfaa6:
case 0xfaa7:
case 0xfaa8:
case 0xfaa9:
case 0xfaaa:
case 0xfaab:
case 0xfaac:
case 0xfaad:
case 0xfaae:
case 0xfaaf:
case 0xfab0:
case 0xfab1:
case 0xfab2:
case 0xfab3:
case 0xfab4:
case 0xfab5:
case 0xfab6:
case 0xfab7:
case 0xfab8:
case 0xfab9:
case 0xfaba:
case 0xfabb:
case 0xfabc:
case 0xfabd:
case 0xfabe:
case 0xfabf:
case 0xfac0:
case 0xfac1:
case 0xfac2:
case 0xfac3:
case 0xfac4:
case 0xfac5:
case 0xfac6:
case 0xfac7:
case 0xfac8:
case 0xfac9:
case 0xfaca:
case 0xfacb:
case 0xfacc:
case 0xfacd:
case 0xface:
case 0xfacf:
case 0xfad0:
case 0xfad1:
case 0xfad2:
case 0xfad3:
case 0xfad4:
case 0xfad5:
case 0xfad6:
case 0xfad7:
case 0xfad8:
case 0xfad9:
case 0xfada:
case 0xfadb:
case 0xfadc:
case 0xfadd:
case 0xfade:
case 0xfadf:
case 0xfae0:
case 0xfae1:
case 0xfae2:
case 0xfae3:
case 0xfae4:
case 0xfae5:
case 0xfae6:
case 0xfae7:
case 0xfae8:
case 0xfae9:
case 0xfaea:
case 0xfaeb:
case 0xfaec:
case 0xfaed:
case 0xfaee:
case 0xfaef:
case 0xfaf0:
case 0xfaf1:
case 0xfaf2:
case 0xfaf3:
case 0xfaf4:
case 0xfaf5:
case 0xfaf6:
case 0xfaf7:
case 0xfaf8:
case 0xfaf9:
case 0xfafa:
case 0xfafb:
case 0xfafc:
case 0xfafd:
case 0xfafe:
case 0xfaff:
case 0xfb00:
case 0xfb01:
case 0xfb02:
case 0xfb03:
case 0xfb04:
case 0xfb05:
case 0xfb06:
case 0xfb07:
case 0xfb08:
case 0xfb09:
case 0xfb0a:
case 0xfb0b:
case 0xfb0c:
case 0xfb0d:
case 0xfb0e:
case 0xfb0f:
case 0xfb10:
case 0xfb11:
case 0xfb12:
case 0xfb13:
case 0xfb14:
case 0xfb15:
case 0xfb16:
case 0xfb17:
case 0xfb18:
case 0xfb19:
case 0xfb1a:
case 0xfb1b:
case 0xfb1c:
case 0xfb1d:
case 0xfb1e:
case 0xfb1f:
case 0xfb20:
case 0xfb21:
case 0xfb22:
case 0xfb23:
case 0xfb24:
case 0xfb25:
case 0xfb26:
case 0xfb27:
case 0xfb28:
case 0xfb29:
case 0xfb2a:
case 0xfb2b:
case 0xfb2c:
case 0xfb2d:
case 0xfb2e:
case 0xfb2f:
case 0xfb30:
case 0xfb31:
case 0xfb32:
case 0xfb33:
case 0xfb34:
case 0xfb35:
case 0xfb36:
case 0xfb37:
case 0xfb38:
case 0xfb39:
case 0xfb3a:
case 0xfb3b:
case 0xfb3c:
case 0xfb3d:
case 0xfb3e:
case 0xfb3f:
case 0xfb40:
case 0xfb41:
case 0xfb42:
case 0xfb43:
case 0xfb44:
case 0xfb45:
case 0xfb46:
case 0xfb47:
case 0xfb48:
case 0xfb49:
case 0xfb4a:
case 0xfb4b:
case 0xfb4c:
case 0xfb4d:
case 0xfb4e:
case 0xfb4f:
case 0xfb50:
case 0xfb51:
case 0xfb52:
case 0xfb53:
case 0xfb54:
case 0xfb55:
case 0xfb56:
case 0xfb57:
case 0xfb58:
case 0xfb59:
case 0xfb5a:
case 0xfb5b:
case 0xfb5c:
case 0xfb5d:
case 0xfb5e:
case 0xfb5f:
case 0xfb60:
case 0xfb61:
case 0xfb62:
case 0xfb63:
case 0xfb64:
case 0xfb65:
case 0xfb66:
case 0xfb67:
case 0xfb68:
case 0xfb69:
case 0xfb6a:
case 0xfb6b:
case 0xfb6c:
case 0xfb6d:
case 0xfb6e:
case 0xfb6f:
case 0xfb70:
case 0xfb71:
case 0xfb72:
case 0xfb73:
case 0xfb74:
case 0xfb75:
case 0xfb76:
case 0xfb77:
case 0xfb78:
case 0xfb79:
case 0xfb7a:
case 0xfb7b:
case 0xfb7c:
case 0xfb7d:
case 0xfb7e:
case 0xfb7f:
case 0xfb80:
case 0xfb81:
case 0xfb82:
case 0xfb83:
case 0xfb84:
case 0xfb85:
case 0xfb86:
case 0xfb87:
case 0xfb88:
case 0xfb89:
case 0xfb8a:
case 0xfb8b:
case 0xfb8c:
case 0xfb8d:
case 0xfb8e:
case 0xfb8f:
case 0xfb90:
case 0xfb91:
case 0xfb92:
case 0xfb93:
case 0xfb94:
case 0xfb95:
case 0xfb96:
case 0xfb97:
case 0xfb98:
case 0xfb99:
case 0xfb9a:
case 0xfb9b:
case 0xfb9c:
case 0xfb9d:
case 0xfb9e:
case 0xfb9f:
case 0xfba0:
case 0xfba1:
case 0xfba2:
case 0xfba3:
case 0xfba4:
case 0xfba5:
case 0xfba6:
case 0xfba7:
case 0xfba8:
case 0xfba9:
case 0xfbaa:
case 0xfbab:
case 0xfbac:
case 0xfbad:
case 0xfbae:
case 0xfbaf:
case 0xfbb0:
case 0xfbb1:
case 0xfbb2:
case 0xfbb3:
case 0xfbb4:
case 0xfbb5:
case 0xfbb6:
case 0xfbb7:
case 0xfbb8:
case 0xfbb9:
case 0xfbba:
case 0xfbbb:
case 0xfbbc:
case 0xfbbd:
case 0xfbbe:
case 0xfbbf:
case 0xfbc0:
case 0xfbc1:
case 0xfbc2:
case 0xfbc3:
case 0xfbc4:
case 0xfbc5:
case 0xfbc6:
case 0xfbc7:
case 0xfbc8:
case 0xfbc9:
case 0xfbca:
case 0xfbcb:
case 0xfbcc:
case 0xfbcd:
case 0xfbce:
case 0xfbcf:
case 0xfbd0:
case 0xfbd1:
case 0xfbd2:
case 0xfbd3:
case 0xfbd4:
case 0xfbd5:
case 0xfbd6:
case 0xfbd7:
case 0xfbd8:
case 0xfbd9:
case 0xfbda:
case 0xfbdb:
case 0xfbdc:
case 0xfbdd:
case 0xfbde:
case 0xfbdf:
case 0xfbe0:
case 0xfbe1:
case 0xfbe2:
case 0xfbe3:
case 0xfbe4:
case 0xfbe5:
case 0xfbe6:
case 0xfbe7:
case 0xfbe8:
case 0xfbe9:
case 0xfbea:
case 0xfbeb:
case 0xfbec:
case 0xfbed:
case 0xfbee:
case 0xfbef:
case 0xfbf0:
case 0xfbf1:
case 0xfbf2:
case 0xfbf3:
case 0xfbf4:
case 0xfbf5:
case 0xfbf6:
case 0xfbf7:
case 0xfbf8:
case 0xfbf9:
case 0xfbfa:
case 0xfbfb:
case 0xfbfc:
case 0xfbfd:
case 0xfbfe:
case 0xfbff:
case 0xfc00:
case 0xfc01:
case 0xfc02:
case 0xfc03:
case 0xfc04:
case 0xfc05:
case 0xfc06:
case 0xfc07:
case 0xfc08:
case 0xfc09:
case 0xfc0a:
case 0xfc0b:
case 0xfc0c:
case 0xfc0d:
case 0xfc0e:
case 0xfc0f:
case 0xfc10:
case 0xfc11:
case 0xfc12:
case 0xfc13:
case 0xfc14:
case 0xfc15:
case 0xfc16:
case 0xfc17:
case 0xfc18:
case 0xfc19:
case 0xfc1a:
case 0xfc1b:
case 0xfc1c:
case 0xfc1d:
case 0xfc1e:
case 0xfc1f:
case 0xfc20:
case 0xfc21:
case 0xfc22:
case 0xfc23:
case 0xfc24:
case 0xfc25:
case 0xfc26:
case 0xfc27:
case 0xfc28:
case 0xfc29:
case 0xfc2a:
case 0xfc2b:
case 0xfc2c:
case 0xfc2d:
case 0xfc2e:
case 0xfc2f:
case 0xfc30:
case 0xfc31:
case 0xfc32:
case 0xfc33:
case 0xfc34:
case 0xfc35:
case 0xfc36:
case 0xfc37:
case 0xfc38:
case 0xfc39:
case 0xfc3a:
case 0xfc3b:
case 0xfc3c:
case 0xfc3d:
case 0xfc3e:
case 0xfc3f:
case 0xfc40:
case 0xfc41:
case 0xfc42:
case 0xfc43:
case 0xfc44:
case 0xfc45:
case 0xfc46:
case 0xfc47:
case 0xfc48:
case 0xfc49:
case 0xfc4a:
case 0xfc4b:
case 0xfc4c:
case 0xfc4d:
case 0xfc4e:
case 0xfc4f:
case 0xfc50:
case 0xfc51:
case 0xfc52:
case 0xfc53:
case 0xfc54:
case 0xfc55:
case 0xfc56:
case 0xfc57:
case 0xfc58:
case 0xfc59:
case 0xfc5a:
case 0xfc5b:
case 0xfc5c:
case 0xfc5d:
case 0xfc5e:
case 0xfc5f:
case 0xfc60:
case 0xfc61:
case 0xfc62:
case 0xfc63:
case 0xfc64:
case 0xfc65:
case 0xfc66:
case 0xfc67:
case 0xfc68:
case 0xfc69:
case 0xfc6a:
case 0xfc6b:
case 0xfc6c:
case 0xfc6d:
case 0xfc6e:
case 0xfc6f:
case 0xfc70:
case 0xfc71:
case 0xfc72:
case 0xfc73:
case 0xfc74:
case 0xfc75:
case 0xfc76:
case 0xfc77:
case 0xfc78:
case 0xfc79:
case 0xfc7a:
case 0xfc7b:
case 0xfc7c:
case 0xfc7d:
case 0xfc7e:
case 0xfc7f:
case 0xfc80:
case 0xfc81:
case 0xfc82:
case 0xfc83:
case 0xfc84:
case 0xfc85:
case 0xfc86:
case 0xfc87:
case 0xfc88:
case 0xfc89:
case 0xfc8a:
case 0xfc8b:
case 0xfc8c:
case 0xfc8d:
case 0xfc8e:
case 0xfc8f:
case 0xfc90:
case 0xfc91:
case 0xfc92:
case 0xfc93:
case 0xfc94:
case 0xfc95:
case 0xfc96:
case 0xfc97:
case 0xfc98:
case 0xfc99:
case 0xfc9a:
case 0xfc9b:
case 0xfc9c:
case 0xfc9d:
case 0xfc9e:
case 0xfc9f:
case 0xfca0:
case 0xfca1:
case 0xfca2:
case 0xfca3:
case 0xfca4:
case 0xfca5:
case 0xfca6:
case 0xfca7:
case 0xfca8:
case 0xfca9:
case 0xfcaa:
case 0xfcab:
case 0xfcac:
case 0xfcad:
case 0xfcae:
case 0xfcaf:
case 0xfcb0:
case 0xfcb1:
case 0xfcb2:
case 0xfcb3:
case 0xfcb4:
case 0xfcb5:
case 0xfcb6:
case 0xfcb7:
case 0xfcb8:
case 0xfcb9:
case 0xfcba:
case 0xfcbb:
case 0xfcbc:
case 0xfcbd:
case 0xfcbe:
case 0xfcbf:
case 0xfcc0:
case 0xfcc1:
case 0xfcc2:
case 0xfcc3:
case 0xfcc4:
case 0xfcc5:
case 0xfcc6:
case 0xfcc7:
case 0xfcc8:
case 0xfcc9:
case 0xfcca:
case 0xfccb:
case 0xfccc:
case 0xfccd:
case 0xfcce:
case 0xfccf:
case 0xfcd0:
case 0xfcd1:
case 0xfcd2:
case 0xfcd3:
case 0xfcd4:
case 0xfcd5:
case 0xfcd6:
case 0xfcd7:
case 0xfcd8:
case 0xfcd9:
case 0xfcda:
case 0xfcdb:
case 0xfcdc:
case 0xfcdd:
case 0xfcde:
case 0xfcdf:
case 0xfce0:
case 0xfce1:
case 0xfce2:
case 0xfce3:
case 0xfce4:
case 0xfce5:
case 0xfce6:
case 0xfce7:
case 0xfce8:
case 0xfce9:
case 0xfcea:
case 0xfceb:
case 0xfcec:
case 0xfced:
case 0xfcee:
case 0xfcef:
case 0xfcf0:
case 0xfcf1:
case 0xfcf2:
case 0xfcf3:
case 0xfcf4:
case 0xfcf5:
case 0xfcf6:
case 0xfcf7:
case 0xfcf8:
case 0xfcf9:
case 0xfcfa:
case 0xfcfb:
case 0xfcfc:
case 0xfcfd:
case 0xfcfe:
case 0xfcff:
case 0xfd00:
case 0xfd01:
case 0xfd02:
case 0xfd03:
case 0xfd04:
case 0xfd05:
case 0xfd06:
case 0xfd07:
case 0xfd08:
case 0xfd09:
case 0xfd0a:
case 0xfd0b:
case 0xfd0c:
case 0xfd0d:
case 0xfd0e:
case 0xfd0f:
case 0xfd10:
case 0xfd11:
case 0xfd12:
case 0xfd13:
case 0xfd14:
case 0xfd15:
case 0xfd16:
case 0xfd17:
case 0xfd18:
case 0xfd19:
case 0xfd1a:
case 0xfd1b:
case 0xfd1c:
case 0xfd1d:
case 0xfd1e:
case 0xfd1f:
case 0xfd20:
case 0xfd21:
case 0xfd22:
case 0xfd23:
case 0xfd24:
case 0xfd25:
case 0xfd26:
case 0xfd27:
case 0xfd28:
case 0xfd29:
case 0xfd2a:
case 0xfd2b:
case 0xfd2c:
case 0xfd2d:
case 0xfd2e:
case 0xfd2f:
case 0xfd30:
case 0xfd31:
case 0xfd32:
case 0xfd33:
case 0xfd34:
case 0xfd35:
case 0xfd36:
case 0xfd37:
case 0xfd38:
case 0xfd39:
case 0xfd3a:
case 0xfd3b:
case 0xfd3c:
case 0xfd3d:
case 0xfd3e:
case 0xfd3f:
case 0xfd40:
case 0xfd41:
case 0xfd42:
case 0xfd43:
case 0xfd44:
case 0xfd45:
case 0xfd46:
case 0xfd47:
case 0xfd48:
case 0xfd49:
case 0xfd4a:
case 0xfd4b:
case 0xfd4c:
case 0xfd4d:
case 0xfd4e:
case 0xfd4f:
case 0xfd50:
case 0xfd51:
case 0xfd52:
case 0xfd53:
case 0xfd54:
case 0xfd55:
case 0xfd56:
case 0xfd57:
case 0xfd58:
case 0xfd59:
case 0xfd5a:
case 0xfd5b:
case 0xfd5c:
case 0xfd5d:
case 0xfd5e:
case 0xfd5f:
case 0xfd60:
case 0xfd61:
case 0xfd62:
case 0xfd63:
case 0xfd64:
case 0xfd65:
case 0xfd66:
case 0xfd67:
case 0xfd68:
case 0xfd69:
case 0xfd6a:
case 0xfd6b:
case 0xfd6c:
case 0xfd6d:
case 0xfd6e:
case 0xfd6f:
case 0xfd70:
case 0xfd71:
case 0xfd72:
case 0xfd73:
case 0xfd74:
case 0xfd75:
case 0xfd76:
case 0xfd77:
case 0xfd78:
case 0xfd79:
case 0xfd7a:
case 0xfd7b:
case 0xfd7c:
case 0xfd7d:
case 0xfd7e:
case 0xfd7f:
case 0xfd80:
case 0xfd81:
case 0xfd82:
case 0xfd83:
case 0xfd84:
case 0xfd85:
case 0xfd86:
case 0xfd87:
case 0xfd88:
case 0xfd89:
case 0xfd8a:
case 0xfd8b:
case 0xfd8c:
case 0xfd8d:
case 0xfd8e:
case 0xfd8f:
case 0xfd90:
case 0xfd91:
case 0xfd92:
case 0xfd93:
case 0xfd94:
case 0xfd95:
case 0xfd96:
case 0xfd97:
case 0xfd98:
case 0xfd99:
case 0xfd9a:
case 0xfd9b:
case 0xfd9c:
case 0xfd9d:
case 0xfd9e:
case 0xfd9f:
case 0xfda0:
case 0xfda1:
case 0xfda2:
case 0xfda3:
case 0xfda4:
case 0xfda5:
case 0xfda6:
case 0xfda7:
case 0xfda8:
case 0xfda9:
case 0xfdaa:
case 0xfdab:
case 0xfdac:
case 0xfdad:
case 0xfdae:
case 0xfdaf:
case 0xfdb0:
case 0xfdb1:
case 0xfdb2:
case 0xfdb3:
case 0xfdb4:
case 0xfdb5:
case 0xfdb6:
case 0xfdb7:
case 0xfdb8:
case 0xfdb9:
case 0xfdba:
case 0xfdbb:
case 0xfdbc:
case 0xfdbd:
case 0xfdbe:
case 0xfdbf:
case 0xfdc0:
case 0xfdc1:
case 0xfdc2:
case 0xfdc3:
case 0xfdc4:
case 0xfdc5:
case 0xfdc6:
case 0xfdc7:
case 0xfdc8:
case 0xfdc9:
case 0xfdca:
case 0xfdcb:
case 0xfdcc:
case 0xfdcd:
case 0xfdce:
case 0xfdcf:
case 0xfdd0:
case 0xfdd1:
case 0xfdd2:
case 0xfdd3:
case 0xfdd4:
case 0xfdd5:
case 0xfdd6:
case 0xfdd7:
case 0xfdd8:
case 0xfdd9:
case 0xfdda:
case 0xfddb:
case 0xfddc:
case 0xfddd:
case 0xfdde:
case 0xfddf:
case 0xfde0:
case 0xfde1:
case 0xfde2:
case 0xfde3:
case 0xfde4:
case 0xfde5:
case 0xfde6:
case 0xfde7:
case 0xfde8:
case 0xfde9:
case 0xfdea:
case 0xfdeb:
case 0xfdec:
case 0xfded:
case 0xfdee:
case 0xfdef:
case 0xfdf0:
case 0xfdf1:
case 0xfdf2:
case 0xfdf3:
case 0xfdf4:
case 0xfdf5:
case 0xfdf6:
case 0xfdf7:
case 0xfdf8:
case 0xfdf9:
case 0xfdfa:
case 0xfdfb:
case 0xfdfc:
case 0xfdfd:
case 0xfdfe:
case 0xfdff:
case 0xfe00:
case 0xfe01:
case 0xfe02:
case 0xfe03:
case 0xfe04:
case 0xfe05:
case 0xfe06:
case 0xfe07:
case 0xfe08:
case 0xfe09:
case 0xfe0a:
case 0xfe0b:
case 0xfe0c:
case 0xfe0d:
case 0xfe0e:
case 0xfe0f:
case 0xfe10:
case 0xfe11:
case 0xfe12:
case 0xfe13:
case 0xfe14:
case 0xfe15:
case 0xfe16:
case 0xfe17:
case 0xfe18:
case 0xfe19:
case 0xfe1a:
case 0xfe1b:
case 0xfe1c:
case 0xfe1d:
case 0xfe1e:
case 0xfe1f:
case 0xfe20:
case 0xfe21:
case 0xfe22:
case 0xfe23:
case 0xfe24:
case 0xfe25:
case 0xfe26:
case 0xfe27:
case 0xfe28:
case 0xfe29:
case 0xfe2a:
case 0xfe2b:
case 0xfe2c:
case 0xfe2d:
case 0xfe2e:
case 0xfe2f:
case 0xfe30:
case 0xfe31:
case 0xfe32:
case 0xfe33:
case 0xfe34:
case 0xfe35:
case 0xfe36:
case 0xfe37:
case 0xfe38:
case 0xfe39:
case 0xfe3a:
case 0xfe3b:
case 0xfe3c:
case 0xfe3d:
case 0xfe3e:
case 0xfe3f:
case 0xfe40:
case 0xfe41:
case 0xfe42:
case 0xfe43:
case 0xfe44:
case 0xfe45:
case 0xfe46:
case 0xfe47:
case 0xfe48:
case 0xfe49:
case 0xfe4a:
case 0xfe4b:
case 0xfe4c:
case 0xfe4d:
case 0xfe4e:
case 0xfe4f:
case 0xfe50:
case 0xfe51:
case 0xfe52:
case 0xfe53:
case 0xfe54:
case 0xfe55:
case 0xfe56:
case 0xfe57:
case 0xfe58:
case 0xfe59:
case 0xfe5a:
case 0xfe5b:
case 0xfe5c:
case 0xfe5d:
case 0xfe5e:
case 0xfe5f:
case 0xfe60:
case 0xfe61:
case 0xfe62:
case 0xfe63:
case 0xfe64:
case 0xfe65:
case 0xfe66:
case 0xfe67:
case 0xfe68:
case 0xfe69:
case 0xfe6a:
case 0xfe6b:
case 0xfe6c:
case 0xfe6d:
case 0xfe6e:
case 0xfe6f:
case 0xfe70:
case 0xfe71:
case 0xfe72:
case 0xfe73:
case 0xfe74:
case 0xfe75:
case 0xfe76:
case 0xfe77:
case 0xfe78:
case 0xfe79:
case 0xfe7a:
case 0xfe7b:
case 0xfe7c:
case 0xfe7d:
case 0xfe7e:
case 0xfe7f:
case 0xfe80:
case 0xfe81:
case 0xfe82:
case 0xfe83:
case 0xfe84:
case 0xfe85:
case 0xfe86:
case 0xfe87:
case 0xfe88:
case 0xfe89:
case 0xfe8a:
case 0xfe8b:
case 0xfe8c:
case 0xfe8d:
case 0xfe8e:
case 0xfe8f:
case 0xfe90:
case 0xfe91:
case 0xfe92:
case 0xfe93:
case 0xfe94:
case 0xfe95:
case 0xfe96:
case 0xfe97:
case 0xfe98:
case 0xfe99:
case 0xfe9a:
case 0xfe9b:
case 0xfe9c:
case 0xfe9d:
case 0xfe9e:
case 0xfe9f:
case 0xfea0:
case 0xfea1:
case 0xfea2:
case 0xfea3:
case 0xfea4:
case 0xfea5:
case 0xfea6:
case 0xfea7:
case 0xfea8:
case 0xfea9:
case 0xfeaa:
case 0xfeab:
case 0xfeac:
case 0xfead:
case 0xfeae:
case 0xfeaf:
case 0xfeb0:
case 0xfeb1:
case 0xfeb2:
case 0xfeb3:
case 0xfeb4:
case 0xfeb5:
case 0xfeb6:
case 0xfeb7:
case 0xfeb8:
case 0xfeb9:
case 0xfeba:
case 0xfebb:
case 0xfebc:
case 0xfebd:
case 0xfebe:
case 0xfebf:
case 0xfec0:
case 0xfec1:
case 0xfec2:
case 0xfec3:
case 0xfec4:
case 0xfec5:
case 0xfec6:
case 0xfec7:
case 0xfec8:
case 0xfec9:
case 0xfeca:
case 0xfecb:
case 0xfecc:
case 0xfecd:
case 0xfece:
case 0xfecf:
case 0xfed0:
case 0xfed1:
case 0xfed2:
case 0xfed3:
case 0xfed4:
case 0xfed5:
case 0xfed6:
case 0xfed7:
case 0xfed8:
case 0xfed9:
case 0xfeda:
case 0xfedb:
case 0xfedc:
case 0xfedd:
case 0xfede:
case 0xfedf:
case 0xfee0:
case 0xfee1:
case 0xfee2:
case 0xfee3:
case 0xfee4:
case 0xfee5:
case 0xfee6:
case 0xfee7:
case 0xfee8:
case 0xfee9:
case 0xfeea:
case 0xfeeb:
case 0xfeec:
case 0xfeed:
case 0xfeee:
case 0xfeef:
case 0xfef0:
case 0xfef1:
case 0xfef2:
case 0xfef3:
case 0xfef4:
case 0xfef5:
case 0xfef6:
case 0xfef7:
case 0xfef8:
case 0xfef9:
case 0xfefa:
case 0xfefb:
case 0xfefc:
case 0xfefd:
case 0xfefe:
case 0xfeff:
case 0xff00:
case 0xff01:
case 0xff02:
case 0xff03:
case 0xff04:
case 0xff05:
case 0xff06:
case 0xff07:
case 0xff08:
case 0xff09:
case 0xff0a:
case 0xff0b:
case 0xff0c:
case 0xff0d:
case 0xff0e:
case 0xff0f:
case 0xff10:
case 0xff11:
case 0xff12:
case 0xff13:
case 0xff14:
case 0xff15:
case 0xff16:
case 0xff17:
case 0xff18:
case 0xff19:
case 0xff1a:
case 0xff1b:
case 0xff1c:
case 0xff1d:
case 0xff1e:
case 0xff1f:
case 0xff20:
case 0xff21:
case 0xff22:
case 0xff23:
case 0xff24:
case 0xff25:
case 0xff26:
case 0xff27:
case 0xff28:
case 0xff29:
case 0xff2a:
case 0xff2b:
case 0xff2c:
case 0xff2d:
case 0xff2e:
case 0xff2f:
case 0xff30:
case 0xff31:
case 0xff32:
case 0xff33:
case 0xff34:
case 0xff35:
case 0xff36:
case 0xff37:
case 0xff38:
case 0xff39:
case 0xff3a:
case 0xff3b:
case 0xff3c:
case 0xff3d:
case 0xff3e:
case 0xff3f:
case 0xff40:
case 0xff41:
case 0xff42:
case 0xff43:
case 0xff44:
case 0xff45:
case 0xff46:
case 0xff47:
case 0xff48:
case 0xff49:
case 0xff4a:
case 0xff4b:
case 0xff4c:
case 0xff4d:
case 0xff4e:
case 0xff4f:
case 0xff50:
case 0xff51:
case 0xff52:
case 0xff53:
case 0xff54:
case 0xff55:
case 0xff56:
case 0xff57:
case 0xff58:
case 0xff59:
case 0xff5a:
case 0xff5b:
case 0xff5c:
case 0xff5d:
case 0xff5e:
case 0xff5f:
case 0xff60:
case 0xff61:
case 0xff62:
case 0xff63:
case 0xff64:
case 0xff65:
case 0xff66:
case 0xff67:
case 0xff68:
case 0xff69:
case 0xff6a:
case 0xff6b:
case 0xff6c:
case 0xff6d:
case 0xff6e:
case 0xff6f:
case 0xff70:
case 0xff71:
case 0xff72:
case 0xff73:
case 0xff74:
case 0xff75:
case 0xff76:
case 0xff77:
case 0xff78:
case 0xff79:
case 0xff7a:
case 0xff7b:
case 0xff7c:
case 0xff7d:
case 0xff7e:
case 0xff7f:
case 0xff80:
case 0xff81:
case 0xff82:
case 0xff83:
case 0xff84:
case 0xff85:
case 0xff86:
case 0xff87:
case 0xff88:
case 0xff89:
case 0xff8a:
case 0xff8b:
case 0xff8c:
case 0xff8d:
case 0xff8e:
case 0xff8f:
case 0xff90:
case 0xff91:
case 0xff92:
case 0xff93:
case 0xff94:
case 0xff95:
case 0xff96:
case 0xff97:
case 0xff98:
case 0xff99:
case 0xff9a:
case 0xff9b:
case 0xff9c:
case 0xff9d:
case 0xff9e:
case 0xff9f:
case 0xffa0:
case 0xffa1:
case 0xffa2:
case 0xffa3:
case 0xffa4:
case 0xffa5:
case 0xffa6:
case 0xffa7:
case 0xffa8:
case 0xffa9:
case 0xffaa:
case 0xffab:
case 0xffac:
case 0xffad:
case 0xffae:
case 0xffaf:
case 0xffb0:
case 0xffb1:
case 0xffb2:
case 0xffb3:
case 0xffb4:
case 0xffb5:
case 0xffb6:
case 0xffb7:
case 0xffb8:
case 0xffb9:
case 0xffba:
case 0xffbb:
case 0xffbc:
case 0xffbd:
case 0xffbe:
case 0xffbf:
case 0xffc0:
case 0xffc1:
case 0xffc2:
case 0xffc3:
case 0xffc4:
case 0xffc5:
case 0xffc6:
case 0xffc7:
case 0xffc8:
case 0xffc9:
case 0xffca:
case 0xffcb:
case 0xffcc:
case 0xffcd:
case 0xffce:
case 0xffcf:
case 0xffd0:
case 0xffd1:
case 0xffd2:
case 0xffd3:
case 0xffd4:
case 0xffd5:
case 0xffd6:
case 0xffd7:
case 0xffd8:
case 0xffd9:
case 0xffda:
case 0xffdb:
case 0xffdc:
case 0xffdd:
case 0xffde:
case 0xffdf:
case 0xffe0:
case 0xffe1:
case 0xffe2:
case 0xffe3:
case 0xffe4:
case 0xffe5:
case 0xffe6:
case 0xffe7:
case 0xffe8:
case 0xffe9:
case 0xffea:
case 0xffeb:
case 0xffec:
case 0xffed:
case 0xffee:
case 0xffef:
case 0xfff0:
case 0xfff1:
case 0xfff2:
case 0xfff3:
case 0xfff4:
case 0xfff5:
case 0xfff6:
case 0xfff7:
case 0xfff8:
case 0xfff9:
case 0xfffa:
case 0xfffb:
case 0xfffc:
case 0xfffd:
case 0xfffe:
case 0xffff:
	{
	 LINEF();
	}
	break;

case 0x4e50:
case 0x4e51:
case 0x4e52:
case 0x4e53:
case 0x4e54:
case 0x4e55:
case 0x4e56:
case 0x4e57:
	{
	 LINK(instr_b2_b0);
	}
	break;

case 0x0108:
case 0x0109:
case 0x010a:
case 0x010b:
case 0x010c:
case 0x010d:
case 0x010e:
case 0x010f:
case 0x0308:
case 0x0309:
case 0x030a:
case 0x030b:
case 0x030c:
case 0x030d:
case 0x030e:
case 0x030f:
case 0x0508:
case 0x0509:
case 0x050a:
case 0x050b:
case 0x050c:
case 0x050d:
case 0x050e:
case 0x050f:
case 0x0708:
case 0x0709:
case 0x070a:
case 0x070b:
case 0x070c:
case 0x070d:
case 0x070e:
case 0x070f:
case 0x0908:
case 0x0909:
case 0x090a:
case 0x090b:
case 0x090c:
case 0x090d:
case 0x090e:
case 0x090f:
case 0x0b08:
case 0x0b09:
case 0x0b0a:
case 0x0b0b:
case 0x0b0c:
case 0x0b0d:
case 0x0b0e:
case 0x0b0f:
case 0x0d08:
case 0x0d09:
case 0x0d0a:
case 0x0d0b:
case 0x0d0c:
case 0x0d0d:
case 0x0d0e:
case 0x0d0f:
case 0x0f08:
case 0x0f09:
case 0x0f0a:
case 0x0f0b:
case 0x0f0c:
case 0x0f0d:
case 0x0f0e:
case 0x0f0f:
	{
	 MOVEP<uint16, false>(instr_b2_b0, instr_b11_b9);
	}
	break;

case 0x0188:
case 0x0189:
case 0x018a:
case 0x018b:
case 0x018c:
case 0x018d:
case 0x018e:
case 0x018f:
case 0x0388:
case 0x0389:
case 0x038a:
case 0x038b:
case 0x038c:
case 0x038d:
case 0x038e:
case 0x038f:
case 0x0588:
case 0x0589:
case 0x058a:
case 0x058b:
case 0x058c:
case 0x058d:
case 0x058e:
case 0x058f:
case 0x0788:
case 0x0789:
case 0x078a:
case 0x078b:
case 0x078c:
case 0x078d:
case 0x078e:
case 0x078f:
case 0x0988:
case 0x0989:
case 0x098a:
case 0x098b:
case 0x098c:
case 0x098d:
case 0x098e:
case 0x098f:
case 0x0b88:
case 0x0b89:
case 0x0b8a:
case 0x0b8b:
case 0x0b8c:
case 0x0b8d:
case 0x0b8e:
case 0x0b8f:
case 0x0d88:
case 0x0d89:
case 0x0d8a:
case 0x0d8b:
case 0x0d8c:
case 0x0d8d:
case 0x0d8e:
case 0x0d8f:
case 0x0f88:
case 0x0f89:
case 0x0f8a:
case 0x0f8b:
case 0x0f8c:
case 0x0f8d:
case 0x0f8e:
case 0x0f8f:
	{
	 MOVEP<uint16, true>(instr_b2_b0, instr_b11_b9);
	}
	break;

case 0x0148:
case 0x0149:
case 0x014a:
case 0x014b:
case 0x014c:
case 0x014d:
case 0x014e:
case 0x014f:
case 0x0348:
case 0x0349:
case 0x034a:
case 0x034b:
case 0x034c:
case 0x034d:
case 0x034e:
case 0x034f:
case 0x0548:
case 0x0549:
case 0x054a:
case 0x054b:
case 0x054c:
case 0x054d:
case 0x054e:
case 0x054f:
case 0x0748:
case 0x0749:
case 0x074a:
case 0x074b:
case 0x074c:
case 0x074d:
case 0x074e:
case 0x074f:
case 0x0948:
case 0x0949:
case 0x094a:
case 0x094b:
case 0x094c:
case 0x094d:
case 0x094e:
case 0x094f:
case 0x0b48:
case 0x0b49:
case 0x0b4a:
case 0x0b4b:
case 0x0b4c:
case 0x0b4d:
case 0x0b4e:
case 0x0b4f:
case 0x0d48:
case 0x0d49:
case 0x0d4a:
case 0x0d4b:
case 0x0d4c:
case 0x0d4d:
case 0x0d4e:
case 0x0d4f:
case 0x0f48:
case 0x0f49:
case 0x0f4a:
case 0x0f4b:
case 0x0f4c:
case 0x0f4d:
case 0x0f4e:
case 0x0f4f:
	{
	 MOVEP<uint32, false>(instr_b2_b0, instr_b11_b9);
	}
	break;

case 0x01c8:
case 0x01c9:
case 0x01ca:
case 0x01cb:
case 0x01cc:
case 0x01cd:
case 0x01ce:
case 0x01cf:
case 0x03c8:
case 0x03c9:
case 0x03ca:
case 0x03cb:
case 0x03cc:
case 0x03cd:
case 0x03ce:
case 0x03cf:
case 0x05c8:
case 0x05c9:
case 0x05ca:
case 0x05cb:
case 0x05cc:
case 0x05cd:
case 0x05ce:
case 0x05cf:
case 0x07c8:
case 0x07c9:
case 0x07ca:
case 0x07cb:
case 0x07cc:
case 0x07cd:
case 0x07ce:
case 0x07cf:
case 0x09c8:
case 0x09c9:
case 0x09ca:
case 0x09cb:
case 0x09cc:
case 0x09cd:
case 0x09ce:
case 0x09cf:
case 0x0bc8:
case 0x0bc9:
case 0x0bca:
case 0x0bcb:
case 0x0bcc:
case 0x0bcd:
case 0x0bce:
case 0x0bcf:
case 0x0dc8:
case 0x0dc9:
case 0x0dca:
case 0x0dcb:
case 0x0dcc:
case 0x0dcd:
case 0x0dce:
case 0x0dcf:
case 0x0fc8:
case 0x0fc9:
case 0x0fca:
case 0x0fcb:
case 0x0fcc:
case 0x0fcd:
case 0x0fce:
case 0x0fcf:
	{
	 MOVEP<uint32, true>(instr_b2_b0, instr_b11_b9);
	}
	break;

case 0x4e71:
	{
	 NOP();
	}
	break;

case 0x003c:
	{
	 ORI_CCR();
	}
	break;

case 0x4e77:
	{
	 RTR();
	}
	break;

case 0x4e75:
	{
	 RTS();
	}
	break;

case 0x4840:
case 0x4841:
case 0x4842:
case 0x4843:
case 0x4844:
case 0x4845:
case 0x4846:
case 0x4847:
	{
	 SWAP(instr_b2_b0);
	}
	break;

case 0x4e40:
case 0x4e41:
case 0x4e42:
case 0x4e43:
case 0x4e44:
case 0x4e45:
case 0x4e46:
case 0x4e47:
case 0x4e48:
case 0x4e49:
case 0x4e4a:
case 0x4e4b:
case 0x4e4c:
case 0x4e4d:
case 0x4e4e:
case 0x4e4f:
	{
	 TRAP(instr & 0xF);
	}
	break;

case 0x4e76:
	{
	 TRAPV();
	}
	break;

case 0x4e58:
case 0x4e59:
case 0x4e5a:
case 0x4e5b:
case 0x4e5c:
case 0x4e5d:
case 0x4e5e:
case 0x4e5f:
	{
	 UNLK(instr_b2_b0);
	}
	break;

case 0x48b9:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ABS_LONG> dst(this); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x4cb9:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ABS_LONG> src(this); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x48b8:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ABS_SHORT> dst(this); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x4cb8:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ABS_SHORT> src(this); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x4890:
case 0x4891:
case 0x4892:
case 0x4893:
case 0x4894:
case 0x4895:
case 0x4896:
case 0x4897:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x48a0:
case 0x48a1:
case 0x48a2:
case 0x48a3:
case 0x48a4:
case 0x48a5:
case 0x48a6:
case 0x48a7:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); MOVEM_to_MEM<true>(reglist, dst);
	}
	break;

case 0x4c90:
case 0x4c91:
case 0x4c92:
case 0x4c93:
case 0x4c94:
case 0x4c95:
case 0x4c96:
case 0x4c97:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x4c98:
case 0x4c99:
case 0x4c9a:
case 0x4c9b:
case 0x4c9c:
case 0x4c9d:
case 0x4c9e:
case 0x4c9f:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); MOVEM_to_REGS<true>(src, reglist);
	}
	break;

case 0x48a8:
case 0x48a9:
case 0x48aa:
case 0x48ab:
case 0x48ac:
case 0x48ad:
case 0x48ae:
case 0x48af:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x4ca8:
case 0x4ca9:
case 0x4caa:
case 0x4cab:
case 0x4cac:
case 0x4cad:
case 0x4cae:
case 0x4caf:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x48b0:
case 0x48b1:
case 0x48b2:
case 0x48b3:
case 0x48b4:
case 0x48b5:
case 0x48b6:
case 0x48b7:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x4cb0:
case 0x4cb1:
case 0x4cb2:
case 0x4cb3:
case 0x4cb4:
case 0x4cb5:
case 0x4cb6:
case 0x4cb7:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x4cba:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, PC_DISP> src(this); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x4cbb:
	{
	 const uint16 reglist = ReadOp(); HAM<uint16, PC_INDEX> src(this); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x48f9:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ABS_LONG> dst(this); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x4cf9:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ABS_LONG> src(this); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x48f8:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ABS_SHORT> dst(this); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x4cf8:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ABS_SHORT> src(this); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x48d0:
case 0x48d1:
case 0x48d2:
case 0x48d3:
case 0x48d4:
case 0x48d5:
case 0x48d6:
case 0x48d7:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x48e0:
case 0x48e1:
case 0x48e2:
case 0x48e3:
case 0x48e4:
case 0x48e5:
case 0x48e6:
case 0x48e7:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ADDR_REG_INDIR> dst(this, instr_b2_b0); MOVEM_to_MEM<true>(reglist, dst);
	}
	break;

case 0x4cd0:
case 0x4cd1:
case 0x4cd2:
case 0x4cd3:
case 0x4cd4:
case 0x4cd5:
case 0x4cd6:
case 0x4cd7:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x4cd8:
case 0x4cd9:
case 0x4cda:
case 0x4cdb:
case 0x4cdc:
case 0x4cdd:
case 0x4cde:
case 0x4cdf:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ADDR_REG_INDIR> src(this, instr_b2_b0); MOVEM_to_REGS<true>(src, reglist);
	}
	break;

case 0x48e8:
case 0x48e9:
case 0x48ea:
case 0x48eb:
case 0x48ec:
case 0x48ed:
case 0x48ee:
case 0x48ef:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x4ce8:
case 0x4ce9:
case 0x4cea:
case 0x4ceb:
case 0x4cec:
case 0x4ced:
case 0x4cee:
case 0x4cef:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x48f0:
case 0x48f1:
case 0x48f2:
case 0x48f3:
case 0x48f4:
case 0x48f5:
case 0x48f6:
case 0x48f7:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); MOVEM_to_MEM<false>(reglist, dst);
	}
	break;

case 0x4cf0:
case 0x4cf1:
case 0x4cf2:
case 0x4cf3:
case 0x4cf4:
case 0x4cf5:
case 0x4cf6:
case 0x4cf7:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x4cfa:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, PC_DISP> src(this); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x4cfb:
	{
	 const uint16 reglist = ReadOp(); HAM<uint32, PC_INDEX> src(this); MOVEM_to_REGS<false>(src, reglist);
	}
	break;

case 0x40f9:
	{
	 if(!Revision_E || CheckPrivilege()) { HAM<uint16, ABS_LONG> dst(this); MOVE_from_SR(dst); }
	}
	break;

case 0x40f8:
	{
	 if(!Revision_E || CheckPrivilege()) { HAM<uint16, ABS_SHORT> dst(this); MOVE_from_SR(dst); }
	}
	break;

case 0x40d0:
case 0x40d1:
case 0x40d2:
case 0x40d3:
case 0x40d4:
case 0x40d5:
case 0x40d6:
case 0x40d7:
	{
	 if(!Revision_E || CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR> dst(this, instr_b2_b0); MOVE_from_SR(dst); }
	}
	break;

case 0x40e8:
case 0x40e9:
case 0x40ea:
case 0x40eb:
case 0x40ec:
case 0x40ed:
case 0x40ee:
case 0x40ef:
	{
	 if(!Revision_E || CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR_DISP> dst(this, instr_b2_b0); MOVE_from_SR(dst); }
	}
	break;

case 0x40f0:
case 0x40f1:
case 0x40f2:
case 0x40f3:
case 0x40f4:
case 0x40f5:
case 0x40f6:
case 0x40f7:
	{
	 if(!Revision_E || CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR_INDX> dst(this, instr_b2_b0); MOVE_from_SR(dst); }
	}
	break;

case 0x40d8:
case 0x40d9:
case 0x40da:
case 0x40db:
case 0x40dc:
case 0x40dd:
case 0x40de:
case 0x40df:
	{
	 if(!Revision_E || CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR_POST> dst(this, instr_b2_b0); MOVE_from_SR(dst); }
	}
	break;

case 0x40e0:
case 0x40e1:
case 0x40e2:
case 0x40e3:
case 0x40e4:
case 0x40e5:
case 0x40e6:
case 0x40e7:
	{
	 if(!Revision_E || CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR_PRE> dst(this, instr_b2_b0); MOVE_from_SR(dst); }
	}
	break;

case 0x40c0:
case 0x40c1:
case 0x40c2:
case 0x40c3:
case 0x40c4:
case 0x40c5:
case 0x40c6:
case 0x40c7:
	{
	 if(!Revision_E || CheckPrivilege()) { HAM<uint16, DATA_REG_DIR> dst(this, instr_b2_b0); MOVE_from_SR(dst); }
	}
	break;

case 0x027c:
	{
	 if(CheckPrivilege()) { ANDI_SR(); }
	}
	break;

case 0x0a7c:
	{
	 if(CheckPrivilege()) { EORI_SR(); }
	}
	break;

case 0x46f9:
	{
	 if(CheckPrivilege()) { HAM<uint16, ABS_LONG> src(this); MOVE_to_SR(src); }
	}
	break;

case 0x46f8:
	{
	 if(CheckPrivilege()) { HAM<uint16, ABS_SHORT> src(this); MOVE_to_SR(src); }
	}
	break;

case 0x46d0:
case 0x46d1:
case 0x46d2:
case 0x46d3:
case 0x46d4:
case 0x46d5:
case 0x46d6:
case 0x46d7:
	{
	 if(CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR> src(this, instr_b2_b0); MOVE_to_SR(src); }
	}
	break;

case 0x46e8:
case 0x46e9:
case 0x46ea:
case 0x46eb:
case 0x46ec:
case 0x46ed:
case 0x46ee:
case 0x46ef:
	{
	 if(CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR_DISP> src(this, instr_b2_b0); MOVE_to_SR(src); }
	}
	break;

case 0x46f0:
case 0x46f1:
case 0x46f2:
case 0x46f3:
case 0x46f4:
case 0x46f5:
case 0x46f6:
case 0x46f7:
	{
	 if(CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR_INDX> src(this, instr_b2_b0); MOVE_to_SR(src); }
	}
	break;

case 0x46d8:
case 0x46d9:
case 0x46da:
case 0x46db:
case 0x46dc:
case 0x46dd:
case 0x46de:
case 0x46df:
	{
	 if(CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR_POST> src(this, instr_b2_b0); MOVE_to_SR(src); }
	}
	break;

case 0x46e0:
case 0x46e1:
case 0x46e2:
case 0x46e3:
case 0x46e4:
case 0x46e5:
case 0x46e6:
case 0x46e7:
	{
	 if(CheckPrivilege()) { HAM<uint16, ADDR_REG_INDIR_PRE> src(this, instr_b2_b0); MOVE_to_SR(src); }
	}
	break;

case 0x46c0:
case 0x46c1:
case 0x46c2:
case 0x46c3:
case 0x46c4:
case 0x46c5:
case 0x46c6:
case 0x46c7:
	{
	 if(CheckPrivilege()) { HAM<uint16, DATA_REG_DIR> src(this, instr_b2_b0); MOVE_to_SR(src); }
	}
	break;

case 0x46fc:
	{
	 if(CheckPrivilege()) { HAM<uint16, IMMEDIATE> src(this); MOVE_to_SR(src); }
	}
	break;

case 0x46fa:
	{
	 if(CheckPrivilege()) { HAM<uint16, PC_DISP> src(this); MOVE_to_SR(src); }
	}
	break;

case 0x46fb:
	{
	 if(CheckPrivilege()) { HAM<uint16, PC_INDEX> src(this); MOVE_to_SR(src); }
	}
	break;

case 0x4e60:
case 0x4e61:
case 0x4e62:
case 0x4e63:
case 0x4e64:
case 0x4e65:
case 0x4e66:
case 0x4e67:
	{
	 if(CheckPrivilege()) { MOVE_USP<0>(instr_b2_b0); }
	}
	break;

case 0x4e68:
case 0x4e69:
case 0x4e6a:
case 0x4e6b:
case 0x4e6c:
case 0x4e6d:
case 0x4e6e:
case 0x4e6f:
	{
	 if(CheckPrivilege()) { MOVE_USP<1>(instr_b2_b0); }
	}
	break;

case 0x007c:
	{
	 if(CheckPrivilege()) { ORI_SR(); }
	}
	break;

case 0x4e70:
	{
	 if(CheckPrivilege()) { RESET(); }
	}
	break;

case 0x4e73:
	{
	 if(CheckPrivilege()) { RTE(); }
	}
	break;

case 0x4e72:
	{
	 if(CheckPrivilege()) { STOP(); }
	}
	break;

case 0x0840:
case 0x0841:
case 0x0842:
case 0x0843:
case 0x0844:
case 0x0845:
case 0x0846:
case 0x0847:
	{
	 unsigned wb = ReadOp(); HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); BCHG(targ, wb);
	}
	break;

case 0x0880:
case 0x0881:
case 0x0882:
case 0x0883:
case 0x0884:
case 0x0885:
case 0x0886:
case 0x0887:
	{
	 unsigned wb = ReadOp(); HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); BCLR(targ, wb);
	}
	break;

case 0x08c0:
case 0x08c1:
case 0x08c2:
case 0x08c3:
case 0x08c4:
case 0x08c5:
case 0x08c6:
case 0x08c7:
	{
	 unsigned wb = ReadOp(); HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); BSET(targ, wb);
	}
	break;

case 0x0800:
case 0x0801:
case 0x0802:
case 0x0803:
case 0x0804:
case 0x0805:
case 0x0806:
case 0x0807:
	{
	 unsigned wb = ReadOp(); HAM<uint32, DATA_REG_DIR> targ(this, instr_b2_b0); BTST(targ, wb);
	}
	break;

case 0x0879:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ABS_LONG> targ(this); BCHG(targ, wb);
	}
	break;

case 0x08b9:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ABS_LONG> targ(this); BCLR(targ, wb);
	}
	break;

case 0x08f9:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ABS_LONG> targ(this); BSET(targ, wb);
	}
	break;

case 0x0839:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ABS_LONG> targ(this); BTST(targ, wb);
	}
	break;

case 0x0878:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ABS_SHORT> targ(this); BCHG(targ, wb);
	}
	break;

case 0x08b8:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ABS_SHORT> targ(this); BCLR(targ, wb);
	}
	break;

case 0x08f8:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ABS_SHORT> targ(this); BSET(targ, wb);
	}
	break;

case 0x0838:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ABS_SHORT> targ(this); BTST(targ, wb);
	}
	break;

case 0x0850:
case 0x0851:
case 0x0852:
case 0x0853:
case 0x0854:
case 0x0855:
case 0x0856:
case 0x0857:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR> targ(this, instr_b2_b0); BCHG(targ, wb);
	}
	break;

case 0x0890:
case 0x0891:
case 0x0892:
case 0x0893:
case 0x0894:
case 0x0895:
case 0x0896:
case 0x0897:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR> targ(this, instr_b2_b0); BCLR(targ, wb);
	}
	break;

case 0x08d0:
case 0x08d1:
case 0x08d2:
case 0x08d3:
case 0x08d4:
case 0x08d5:
case 0x08d6:
case 0x08d7:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR> targ(this, instr_b2_b0); BSET(targ, wb);
	}
	break;

case 0x0810:
case 0x0811:
case 0x0812:
case 0x0813:
case 0x0814:
case 0x0815:
case 0x0816:
case 0x0817:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR> targ(this, instr_b2_b0); BTST(targ, wb);
	}
	break;

case 0x0868:
case 0x0869:
case 0x086a:
case 0x086b:
case 0x086c:
case 0x086d:
case 0x086e:
case 0x086f:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); BCHG(targ, wb);
	}
	break;

case 0x08a8:
case 0x08a9:
case 0x08aa:
case 0x08ab:
case 0x08ac:
case 0x08ad:
case 0x08ae:
case 0x08af:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); BCLR(targ, wb);
	}
	break;

case 0x08e8:
case 0x08e9:
case 0x08ea:
case 0x08eb:
case 0x08ec:
case 0x08ed:
case 0x08ee:
case 0x08ef:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); BSET(targ, wb);
	}
	break;

case 0x0828:
case 0x0829:
case 0x082a:
case 0x082b:
case 0x082c:
case 0x082d:
case 0x082e:
case 0x082f:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_DISP> targ(this, instr_b2_b0); BTST(targ, wb);
	}
	break;

case 0x0870:
case 0x0871:
case 0x0872:
case 0x0873:
case 0x0874:
case 0x0875:
case 0x0876:
case 0x0877:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); BCHG(targ, wb);
	}
	break;

case 0x08b0:
case 0x08b1:
case 0x08b2:
case 0x08b3:
case 0x08b4:
case 0x08b5:
case 0x08b6:
case 0x08b7:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); BCLR(targ, wb);
	}
	break;

case 0x08f0:
case 0x08f1:
case 0x08f2:
case 0x08f3:
case 0x08f4:
case 0x08f5:
case 0x08f6:
case 0x08f7:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); BSET(targ, wb);
	}
	break;

case 0x0830:
case 0x0831:
case 0x0832:
case 0x0833:
case 0x0834:
case 0x0835:
case 0x0836:
case 0x0837:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_INDX> targ(this, instr_b2_b0); BTST(targ, wb);
	}
	break;

case 0x0858:
case 0x0859:
case 0x085a:
case 0x085b:
case 0x085c:
case 0x085d:
case 0x085e:
case 0x085f:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); BCHG(targ, wb);
	}
	break;

case 0x0898:
case 0x0899:
case 0x089a:
case 0x089b:
case 0x089c:
case 0x089d:
case 0x089e:
case 0x089f:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); BCLR(targ, wb);
	}
	break;

case 0x08d8:
case 0x08d9:
case 0x08da:
case 0x08db:
case 0x08dc:
case 0x08dd:
case 0x08de:
case 0x08df:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); BSET(targ, wb);
	}
	break;

case 0x0818:
case 0x0819:
case 0x081a:
case 0x081b:
case 0x081c:
case 0x081d:
case 0x081e:
case 0x081f:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_POST> targ(this, instr_b2_b0); BTST(targ, wb);
	}
	break;

case 0x0860:
case 0x0861:
case 0x0862:
case 0x0863:
case 0x0864:
case 0x0865:
case 0x0866:
case 0x0867:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); BCHG(targ, wb);
	}
	break;

case 0x08a0:
case 0x08a1:
case 0x08a2:
case 0x08a3:
case 0x08a4:
case 0x08a5:
case 0x08a6:
case 0x08a7:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); BCLR(targ, wb);
	}
	break;

case 0x08e0:
case 0x08e1:
case 0x08e2:
case 0x08e3:
case 0x08e4:
case 0x08e5:
case 0x08e6:
case 0x08e7:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); BSET(targ, wb);
	}
	break;

case 0x0820:
case 0x0821:
case 0x0822:
case 0x0823:
case 0x0824:
case 0x0825:
case 0x0826:
case 0x0827:
	{
	 unsigned wb = ReadOp(); HAM<uint8, ADDR_REG_INDIR_PRE> targ(this, instr_b2_b0); BTST(targ, wb);
	}
	break;

case 0x083a:
	{
	 unsigned wb = ReadOp(); HAM<uint8, PC_DISP> targ(this); BTST(targ, wb);
	}
	break;

case 0x083b:
	{
	 unsigned wb = ReadOp(); HAM<uint8, PC_INDEX> targ(this); BTST(targ, wb);
	}
	break;

